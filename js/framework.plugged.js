window.jQuery && jQuery.noConflict();
(function($,window){

	console.info('Framework plugged script is initiated');

	if(window.fw) {
		throw new Error('fw already exists oh boi');	
	}

	//frameWork shit
	var frameWork = window.frameWork || {};

	//internal shit
	var _ = {}; 

	//settings
	frameWork.settings = frameWork.settings || {};
	frameWork.settings.lazyLoad = frameWork.settings.lazyLoad || true;
	frameWork.settings.initializeModal = frameWork.settings.initializeModal || true;
	frameWork.settings.initializeBoard = frameWork.settings.initializeBoard || true;
	frameWork.settings.initializeAccordion = frameWork.settings.initializeAccordion || true;
	frameWork.settings.dynamicHash = frameWork.settings.dynamicHash || true;
	frameWork.settings.uiClass = 'fw-ui';

	if(!$) {
		throw new Error('jQuery not found bro, what did you do?');
	}

	_.modifierKeys = {
		ctrl : false,
		shift: false,
		alt : false,
		meta : false,
	}


	_.modifierIsActive = function(mode){
		mode = mode || false;

		if(mode && _.modifierKeys.hasOwnProperty(mode)){

			return _.modifierKeys[mode];
		}else{
			return _.modifierKeys.ctrl || _.modifierKeys.shift || _.modifierKeys.alt || _.modifierKeys.meta;
		}
	}

	// if(!$.trumbowyg) {
	// 	throw new Error('Trumbowyg is not included. woa boi');
	// }

	$.fn.scrollTo = function(elem,direction) { 
		direction = direction || 'y';
		var methods = direction == 'x' ? ['scrollLeft','left'] : ['scrollTop','top'];
		var scrollResult = $(this)[ methods[0] ]() - $(this).offset()[ methods[1] ] + $(elem).offset()[ methods[1] ];
		
		
		$(this)[ methods[0] ]( scrollResult ); 


		// console.log( scrollResult,'\nscroll parent', $(this)[ methods[0] ](),'\nchild offset', $(elem).offset()[ methods[1] ]   )


		return this; 
	};


	frameWork.trumbowyg = {};

	_.trumboPrefix = 'fw-trumbowyg-';

	$.trumbowyg && ($.trumbowyg.prefix = _.trumboPrefix);
	// $.trumbowyg.svgPath = false;

	frameWork.trumbowyg.defaults = {
		btns: [
			['viewHTML'],
			['strong', 'em'],
			['insertImage'],
			['link'],
			['unorderedList', 'orderedList'],
			['fullscreen']
		],
		
		removeformatPasted: true,
		tbwresize: true,
		tagsToRemove: ['script']
	} || frameWork.trumbowyg.defaults;



	frameWork.trumbowyg.iconsMarkup =
		'<svg xmlns="http://www.w3.org/2000/svg"><symbol id="'+_.trumboPrefix+'blockquote" viewBox="0 0 72 72"><path d="M21.3 31.9h-.6c.8-1.2 1.9-2.2 3.4-3.2 2.1-1.4 5-2.7 9.2-3.3l-1.4-8.9c-4.7.7-8.5 2.1-11.7 4-2.4 1.4-4.3 3.1-5.8 4.9-2.3 2.7-3.7 5.7-4.5 8.5-.8 2.8-1 5.4-1 7.5 0 2.3.3 4 .4 4.8 0 .1.1.3.1.4 1.2 5.4 6.1 9.5 11.9 9.5 6.7 0 12.2-5.4 12.2-12.2s-5.5-12-12.2-12zM49.5 31.9h-.6c.8-1.2 1.9-2.2 3.4-3.2 2.1-1.4 5-2.7 9.2-3.3l-1.4-8.9c-4.7.7-8.5 2.1-11.7 4-2.4 1.4-4.3 3.1-5.8 4.9-2.3 2.7-3.7 5.7-4.5 8.5-.8 2.8-1 5.4-1 7.5 0 2.3.3 4 .4 4.8 0 .1.1.3.1.4 1.2 5.4 6.1 9.5 11.9 9.5 6.7 0 12.2-5.4 12.2-12.2s-5.5-12-12.2-12z" /></symbol><symbol id="'+_.trumboPrefix+'bold" viewBox="0 0 72 72"><path d="M51.1 37.8c-1.1-1.4-2.5-2.5-4.2-3.3 1.2-.8 2.1-1.8 2.8-3 1-1.6 1.5-3.5 1.5-5.3 0-2-.6-4-1.7-5.8-1.1-1.8-2.8-3.2-4.8-4.1-2-.9-4.6-1.3-7.8-1.3h-16v42h16.3c2.6 0 4.8-.2 6.7-.7 1.9-.5 3.4-1.2 4.7-2.1 1.3-1 2.4-2.4 3.2-4.1.9-1.7 1.3-3.6 1.3-5.7.2-2.5-.5-4.7-2-6.6zM40.8 50.2c-.6.1-1.8.2-3.4.2h-9V38.5h8.3c2.5 0 4.4.2 5.6.6 1.2.4 2 1 2.7 2 .6.9 1 2 1 3.3 0 1.1-.2 2.1-.7 2.9-.5.9-1 1.5-1.7 1.9-.8.4-1.7.8-2.8 1zm2.6-20.4c-.5.7-1.3 1.3-2.5 1.6-.8.3-2.5.4-4.8.4h-7.7V21.6h7.1c1.4 0 2.6 0 3.6.1s1.7.2 2.2.4c1 .3 1.7.8 2.2 1.7.5.9.8 1.8.8 3-.1 1.3-.4 2.2-.9 3z" /></symbol><symbol id="'+_.trumboPrefix+'close" viewBox="0 0 72 72"><path d="M57 20.5l-5.4-5.4-15.5 15.5-15.6-15.5-5.4 5.4L30.7 36 15.1 51.5l5.4 5.4 15.6-15.5 15.5 15.5 5.4-5.4L41.5 36z" /></symbol><symbol id="'+_.trumboPrefix+'create-link" viewBox="0 0 72 72"><path d="M31.1 48.9l-6.7 6.7c-.8.8-1.6.9-2.1.9s-1.4-.1-2.1-.9L15 50.4c-1.1-1.1-1.1-3.1 0-4.2l6.1-6.1.2-.2 6.5-6.5c-1.2-.6-2.5-.9-3.8-.9-2.3 0-4.6.9-6.3 2.6L11 41.8c-3.5 3.5-3.5 9.2 0 12.7l5.2 5.2c1.7 1.7 4 2.6 6.3 2.6s4.6-.9 6.3-2.6l6.7-6.7c2.5-2.6 3.1-6.7 1.5-10l-5.9 5.9zM38.7 22.5l6.7-6.7c.8-.8 1.6-.9 2.1-.9s1.4.1 2.1.9l5.2 5.2c1.1 1.1 1.1 3.1 0 4.2l-6.1 6.1-.2.2L42 38c1.2.6 2.5.9 3.8.9 2.3 0 4.6-.9 6.3-2.6l6.7-6.7c3.5-3.5 3.5-9.2 0-12.7l-5.2-5.2c-1.7-1.7-4-2.6-6.3-2.6s-4.6.9-6.3 2.6l-6.7 6.7c-2.7 2.7-3.3 6.9-1.7 10.2l6.1-6.1c0 .1 0 .1 0 0z" /><path d="M44.2 30.5c.2-.2.4-.6.4-.9 0-.3-.1-.6-.4-.9l-2.3-2.3c-.3-.2-.6-.4-.9-.4-.3 0-.6.1-.9.4L25.9 40.6c-.2.2-.4.6-.4.9 0 .3.1.6.4.9l2.3 2.3c.2.2.6.4.9.4.3 0 .6-.1.9-.4l14.2-14.2zM49.9 55.4h-8.5v-5h8.5v-8.9h5.2v8.9h8.5v5h-8.5v8.9h-5.2v-8.9z" /></symbol><symbol id="'+_.trumboPrefix+'del" viewBox="0 0 72 72"><path d="M45.8 45c0 1-.3 1.9-.9 2.8-.6.9-1.6 1.6-3 2.1s-3.1.8-5 .8c-2.1 0-4-.4-5.7-1.1-1.7-.7-2.9-1.7-3.6-2.7-.8-1.1-1.3-2.6-1.5-4.5l-.1-.8-6.7.6v.9c.1 2.8.9 5.4 2.3 7.6 1.5 2.3 3.5 4 6.1 5.1 2.6 1.1 5.7 1.6 9.4 1.6 2.9 0 5.6-.5 8-1.6 2.4-1.1 4.3-2.7 5.6-4.7 1.3-2 2-4.2 2-6.5 0-1.6-.3-3.1-.9-4.5l-.2-.6H44c0 .1 1.8 2.3 1.8 5.5zM29 28.9c-.8-.8-1.2-1.7-1.2-2.9 0-.7.1-1.3.4-1.9.3-.6.7-1.1 1.4-1.6.6-.5 1.4-.9 2.5-1.1 1.1-.3 2.4-.4 3.9-.4 2.9 0 5 .6 6.3 1.7 1.3 1.1 2.1 2.7 2.4 5.1l.1.9 6.8-.5v-.9c-.1-2.5-.8-4.7-2.1-6.7s-3.2-3.5-5.6-4.5c-2.4-1-5.1-1.5-8.1-1.5-2.8 0-5.3.5-7.6 1.4-2.3 1-4.2 2.4-5.4 4.3-1.2 1.9-1.9 3.9-1.9 6.1 0 1.7.4 3.4 1.2 4.9l.3.5h11.8c-2.3-.9-3.9-1.7-5.2-2.9zm13.3-6.2zM22.7 20.3zM13 34.1h46.1v3.4H13z" /></symbol><symbol id="'+_.trumboPrefix+'em" viewBox="0 0 72 72"><path d="M26 57l10.1-42h7.2L33.2 57H26z" /></symbol><symbol id="'+_.trumboPrefix+'fullscreen" viewBox="0 0 72 72"><path d="M25.2 7.1H7.1v17.7l6.7-6.5 10.5 10.5 4.5-4.5-10.4-10.5zm22 0l6.5 6.7-10.5 10.5 4.5 4.5 10.5-10.4 6.7 6.8V7.1zm.5 36.1l-4.5 4.5 10.4 10.5-6.8 6.7h18.1V47.2l-6.7 6.5zm-23.4 0L13.8 53.6l-6.7-6.8v18.1h17.7l-6.5-6.7 10.5-10.5z" /><path fill="currentColor" d="M10.7 28.8h18.1V11.2l-6.6 6.4L11.6 7.1l-4.5 4.5 10.5 10.5zm50.1 0l-6.4-6.6 10.5-10.6-4.5-4.5-10.5 10.5-6.7-6.9v18.1zm-.4 36.1l4.5-4.5-10.5-10.5 6.9-6.7H43.2v17.6l6.6-6.4zm-48.8 0l10.5-10.5 6.7 6.9V43.2H11.1l6.5 6.6L7.1 60.4z" /></symbol><symbol id="'+_.trumboPrefix+'h1" viewBox="0 0 72 72"><path d="M6.4 14.9h7.4v16.7h19.1V14.9h7.4V57h-7.4V38H13.8v19H6.4V14.9zM47.8 22.5c1.4 0 2.8-.1 4.1-.4 1.3-.2 2.5-.6 3.6-1.2 1.1-.5 2-1.3 2.8-2.1.8-.9 1.3-1.9 1.5-3.2h5.5v41.2h-7.4v-29H47.8v-5.3z" /></symbol><symbol id="'+_.trumboPrefix+'h2" viewBox="0 0 72 72"><path d="M1.5 14.9h7.4v16.7H28V14.9h7.4V57H28V38H8.8v19H1.5V14.9zM70.2 56.9H42c0-3.4.9-6.4 2.5-9s3.8-4.8 6.6-6.7c1.3-1 2.7-1.9 4.2-2.9 1.5-.9 2.8-1.9 4-3 1.2-1.1 2.2-2.2 3-3.4.8-1.2 1.2-2.7 1.2-4.3 0-.7-.1-1.5-.3-2.4s-.5-1.6-1-2.4c-.5-.7-1.2-1.3-2.1-1.8-.9-.5-2.1-.7-3.5-.7-1.3 0-2.4.3-3.3.8s-1.6 1.3-2.1 2.2-.9 2-1.2 3.3c-.3 1.3-.4 2.6-.4 4.1h-6.7c0-2.3.3-4.4.9-6.3.6-1.9 1.5-3.6 2.7-5 1.2-1.4 2.7-2.5 4.4-3.3 1.7-.8 3.8-1.2 6.1-1.2 2.5 0 4.6.4 6.3 1.2 1.7.8 3.1 1.9 4.1 3.1 1 1.3 1.8 2.6 2.2 4.1.4 1.5.6 2.9.6 4.2 0 1.6-.3 3.1-.8 4.5-.5 1.3-1.2 2.6-2.1 3.7-.9 1.1-1.8 2.2-2.9 3.1-1.1.9-2.2 1.8-3.4 2.7-1.2.8-2.4 1.6-3.5 2.4-1.2.7-2.3 1.5-3.3 2.2-1 .7-1.9 1.5-2.6 2.3-.7.8-1.3 1.7-1.5 2.6h20.1v5.9z" /></symbol><symbol id="'+_.trumboPrefix+'h3" viewBox="0 0 72 72"><path d="M1.4 14.5h7.4v16.7h19.1V14.5h7.4v42.1h-7.4v-19H8.8v19H1.4V14.5zM53.1 32.4c1.1 0 2.2 0 3.3-.2 1.1-.2 2.1-.5 2.9-1 .9-.5 1.6-1.2 2.1-2 .5-.9.8-1.9.8-3.2 0-1.8-.6-3.2-1.8-4.2-1.2-1.1-2.7-1.6-4.6-1.6-1.2 0-2.2.2-3.1.7-.9.5-1.6 1.1-2.2 1.9-.6.8-1 1.7-1.3 2.7-.3 1-.4 2-.4 3.1h-6.7c.1-2 .5-3.9 1.1-5.6.7-1.7 1.6-3.2 2.7-4.4s2.6-2.2 4.2-2.9c1.6-.7 3.5-1.1 5.6-1.1 1.6 0 3.2.2 4.7.7 1.6.5 2.9 1.2 4.2 2.1 1.2.9 2.2 2.1 3 3.4.7 1.4 1.1 3 1.1 4.8 0 2.1-.5 3.9-1.4 5.4-.9 1.6-2.4 2.7-4.4 3.4v.1c2.4.5 4.2 1.6 5.5 3.5 1.3 1.9 2 4.1 2 6.8 0 2-.4 3.7-1.2 5.3-.8 1.6-1.8 2.9-3.2 3.9-1.3 1.1-2.9 1.9-4.7 2.5-1.8.6-3.6.9-5.6.9-2.4 0-4.5-.3-6.3-1s-3.3-1.7-4.5-2.9c-1.2-1.3-2.1-2.8-2.7-4.5-.6-1.8-1-3.7-1-5.9h6.7c-.1 2.5.5 4.6 1.9 6.3 1.3 1.7 3.3 2.5 5.9 2.5 2.2 0 4.1-.6 5.6-1.9 1.5-1.3 2.3-3.1 2.3-5.4 0-1.6-.3-2.9-.9-3.8-.6-.9-1.5-1.7-2.5-2.2-1-.5-2.2-.8-3.4-.9-1.3-.1-2.6-.2-3.9-.1v-5.2z" /></symbol><symbol id="'+_.trumboPrefix+'h4" viewBox="0 0 72 72"><path d="M1.5 14.9h7.4v16.7H28V14.9h7.4V57H28V38H8.9v19H1.5V14.9zM70.5 47.2h-5.3V57h-6.4v-9.8H41.2v-6.7l17.7-24.8h6.4v26.2h5.3v5.3zm-24.2-5.3h12.5V23.7h-.1L46.3 41.9z" /></symbol><symbol id="'+_.trumboPrefix+'h5" viewBox="0 0 72 72"><path d="M1.5 14.9h7.4v16.7H28V14.9h7.4V57H28V38H8.9v19H1.5V14.9zM69.043 42.368q0 5.655-3.92 10.154-3.856 4.434-9.383 4.434-6.105 0-9.768-2.892-3.599-2.891-3.728-8.033h6.62q0 2.892 1.735 4.37 1.735 1.478 4.691 1.478 3.085 0 5.142-2.57 2.056-2.57 2.056-6.748 0-8.869-6.426-8.869-4.692 0-7.327 5.463h-5.848l.9-24.292h22.75v5.398H50.02l-.643 12.21q3.02-3.599 8.355-3.599 5.205 0 8.226 3.985 3.084 3.92 3.084 9.511z" /></symbol><symbol id="'+_.trumboPrefix+'h6" viewBox="0 0 72 72"><path d="M1.5 14.9h7.4v16.7H28V14.9h7.4V57H28V38H8.9v19H1.5zM69.188 43.56q0 2.269-.63 4.475-.63 2.206-2.017 4.286t-4.097 3.403q-2.71 1.261-6.366 1.261-4.349 0-7.185-1.324-2.773-1.386-4.16-4.16-1.386-2.836-1.89-6.113t-.505-8.194q0-22.312 14.181-22.312 10.4 0 11.66 10.526h-6.177q-.378-5.61-5.483-5.61-2.521 0-4.223 1.766-1.702 1.701-2.458 4.538-.693 2.836-1.008 5.168-.252 2.269-.252 4.664 1.575-2.458 3.53-3.719 2.016-1.323 5.42-1.323 3.34 0 5.735 1.26 2.458 1.198 3.656 3.215 1.197 2.017 1.701 4.033.568 2.017.568 4.16zm-6.492.252q0-8.193-6.555-8.193-6.68 0-6.68 8.193 0 8.257 6.68 8.257 6.555 0 6.555-8.257z" /></symbol><symbol id="'+_.trumboPrefix+'horizontal-rule" viewBox="0 0 72 72"><path d="M9.1 32h54v8h-54z" /></symbol><symbol id="'+_.trumboPrefix+'insert-image" viewBox="0 0 72 72"><path d="M64 17v38H8V17h56m8-8H0v54h72V9z" /><path d="M17.5 22C15 22 13 24 13 26.5s2 4.5 4.5 4.5 4.5-2 4.5-4.5-2-4.5-4.5-4.5zM16 50h27L29.5 32zM36 36.2l8.9-8.5L60.2 50H45.9S35.6 35.9 36 36.2z" /></symbol><symbol id="'+_.trumboPrefix+'italic" viewBox="0 0 72 72"><path d="M26 57l10.1-42h7.2L33.2 57H26z" /></symbol><symbol id="'+_.trumboPrefix+'justify-center" viewBox="0 0 72 72"><path d="M9 14h54v8H9zM9 50h54v8H9zM18 32h36v8H18z" /></symbol><symbol id="'+_.trumboPrefix+'justify-full" viewBox="0 0 72 72"><path d="M9 14h54v8H9zM9 50h54v8H9zM9 32h54v8H9z" /></symbol><symbol id="'+_.trumboPrefix+'justify-left" viewBox="0 0 72 72"><path d="M9 14h54v8H9zM9 50h54v8H9zM9 32h36v8H9z" /></symbol><symbol id="'+_.trumboPrefix+'justify-right" viewBox="0 0 72 72"><path d="M9 14h54v8H9zM9 50h54v8H9zM27 32h36v8H27z" /></symbol><symbol id="'+_.trumboPrefix+'link" viewBox="0 0 72 72"><path d="M30.9 49.1l-6.7 6.7c-.8.8-1.6.9-2.1.9s-1.4-.1-2.1-.9l-5.2-5.2c-1.1-1.1-1.1-3.1 0-4.2l6.1-6.1.2-.2 6.5-6.5c-1.2-.6-2.5-.9-3.8-.9-2.3 0-4.6.9-6.3 2.6L10.8 42c-3.5 3.5-3.5 9.2 0 12.7l5.2 5.2c1.7 1.7 4 2.6 6.3 2.6s4.6-.9 6.3-2.6l6.7-6.7C38 50.5 38.6 46.3 37 43l-6.1 6.1zM38.5 22.7l6.7-6.7c.8-.8 1.6-.9 2.1-.9s1.4.1 2.1.9l5.2 5.2c1.1 1.1 1.1 3.1 0 4.2l-6.1 6.1-.2.2-6.5 6.5c1.2.6 2.5.9 3.8.9 2.3 0 4.6-.9 6.3-2.6l6.7-6.7c3.5-3.5 3.5-9.2 0-12.7l-5.2-5.2c-1.7-1.7-4-2.6-6.3-2.6s-4.6.9-6.3 2.6l-6.7 6.7c-2.7 2.7-3.3 6.9-1.7 10.2l6.1-6.1z" /><path d="M44.1 30.7c.2-.2.4-.6.4-.9 0-.3-.1-.6-.4-.9l-2.3-2.3c-.2-.2-.6-.4-.9-.4-.3 0-.6.1-.9.4L25.8 40.8c-.2.2-.4.6-.4.9 0 .3.1.6.4.9l2.3 2.3c.2.2.6.4.9.4.3 0 .6-.1.9-.4l14.2-14.2z" /></symbol><symbol id="'+_.trumboPrefix+'ordered-list" viewBox="0 0 72 72"><path d="M27 14h36v8H27zM27 50h36v8H27zM27 32h36v8H27zM11.8 15.8V22h1.8v-7.8h-1.5l-2.1 1 .3 1.3zM12.1 38.5l.7-.6c1.1-1 2.1-2.1 2.1-3.4 0-1.4-1-2.4-2.7-2.4-1.1 0-2 .4-2.6.8l.5 1.3c.4-.3 1-.6 1.7-.6.9 0 1.3.5 1.3 1.1 0 .9-.9 1.8-2.6 3.3l-1 .9V40H15v-1.5h-2.9zM13.3 53.9c1-.4 1.4-1 1.4-1.8 0-1.1-.9-1.9-2.6-1.9-1 0-1.9.3-2.4.6l.4 1.3c.3-.2 1-.5 1.6-.5.8 0 1.2.3 1.2.8 0 .7-.8.9-1.4.9h-.7v1.3h.7c.8 0 1.6.3 1.6 1.1 0 .6-.5 1-1.4 1-.7 0-1.5-.3-1.8-.5l-.4 1.4c.5.3 1.3.6 2.3.6 2 0 3.2-1 3.2-2.4 0-1.1-.8-1.8-1.7-1.9z" /></symbol><symbol id="'+_.trumboPrefix+'p" viewBox="0 0 72 72"><path d="M47.8 15.1H30.1c-4.7 0-8.5 3.7-8.5 8.4s3.7 8.4 8.4 8.4v25h7V19.8h3v37.1h4.1V19.8h3.7v-4.7z" /></symbol><symbol id="'+_.trumboPrefix+'redo" viewBox="0 0 72 72"><path d="M10.8 51.2c0-5.1 2.1-9.7 5.4-13.1 3.3-3.3 8-5.4 13.1-5.4H46v-12L61.3 36 45.9 51.3V39.1H29.3c-3.3 0-6.4 1.3-8.5 3.5-2.2 2.2-3.5 5.2-3.5 8.5h-6.5z" /></symbol><symbol id="'+_.trumboPrefix+'removeformat" viewBox="0 0 72 72"><path d="M58.2 54.6L52 48.5l3.6-3.6 6.1 6.1 6.4-6.4 3.8 3.8-6.4 6.4 6.1 6.1-3.6 3.6-6.1-6.1-6.4 6.4-3.7-3.8 6.4-6.4zM21.7 52.1H50V57H21.7zM18.8 15.2h34.1v6.4H39.5v24.2h-7.4V21.5H18.8v-6.3z" /></symbol><symbol id="'+_.trumboPrefix+'strikethrough" viewBox="0 0 72 72"><path d="M45.8 45c0 1-.3 1.9-.9 2.8-.6.9-1.6 1.6-3 2.1s-3.1.8-5 .8c-2.1 0-4-.4-5.7-1.1-1.7-.7-2.9-1.7-3.6-2.7-.8-1.1-1.3-2.6-1.5-4.5l-.1-.8-6.7.6v.9c.1 2.8.9 5.4 2.3 7.6 1.5 2.3 3.5 4 6.1 5.1 2.6 1.1 5.7 1.6 9.4 1.6 2.9 0 5.6-.5 8-1.6 2.4-1.1 4.3-2.7 5.6-4.7 1.3-2 2-4.2 2-6.5 0-1.6-.3-3.1-.9-4.5l-.2-.6H44c0 .1 1.8 2.3 1.8 5.5zM29 28.9c-.8-.8-1.2-1.7-1.2-2.9 0-.7.1-1.3.4-1.9.3-.6.7-1.1 1.4-1.6.6-.5 1.4-.9 2.5-1.1 1.1-.3 2.4-.4 3.9-.4 2.9 0 5 .6 6.3 1.7 1.3 1.1 2.1 2.7 2.4 5.1l.1.9 6.8-.5v-.9c-.1-2.5-.8-4.7-2.1-6.7s-3.2-3.5-5.6-4.5c-2.4-1-5.1-1.5-8.1-1.5-2.8 0-5.3.5-7.6 1.4-2.3 1-4.2 2.4-5.4 4.3-1.2 1.9-1.9 3.9-1.9 6.1 0 1.7.4 3.4 1.2 4.9l.3.5h11.8c-2.3-.9-3.9-1.7-5.2-2.9zm13.3-6.2zM22.7 20.3zM13 34.1h46.1v3.4H13z" /></symbol><symbol id="'+_.trumboPrefix+'strong" viewBox="0 0 72 72"><path d="M51.1 37.8c-1.1-1.4-2.5-2.5-4.2-3.3 1.2-.8 2.1-1.8 2.8-3 1-1.6 1.5-3.5 1.5-5.3 0-2-.6-4-1.7-5.8-1.1-1.8-2.8-3.2-4.8-4.1-2-.9-4.6-1.3-7.8-1.3h-16v42h16.3c2.6 0 4.8-.2 6.7-.7 1.9-.5 3.4-1.2 4.7-2.1 1.3-1 2.4-2.4 3.2-4.1.9-1.7 1.3-3.6 1.3-5.7.2-2.5-.5-4.7-2-6.6zM40.8 50.2c-.6.1-1.8.2-3.4.2h-9V38.5h8.3c2.5 0 4.4.2 5.6.6 1.2.4 2 1 2.7 2 .6.9 1 2 1 3.3 0 1.1-.2 2.1-.7 2.9-.5.9-1 1.5-1.7 1.9-.8.4-1.7.8-2.8 1zm2.6-20.4c-.5.7-1.3 1.3-2.5 1.6-.8.3-2.5.4-4.8.4h-7.7V21.6h7.1c1.4 0 2.6 0 3.6.1s1.7.2 2.2.4c1 .3 1.7.8 2.2 1.7.5.9.8 1.8.8 3-.1 1.3-.4 2.2-.9 3z" /></symbol><symbol id="'+_.trumboPrefix+'subscript" viewBox="0 0 72 72"><path d="M32 15h7.8L56 57.1h-7.9L44.3 46H27.4l-4 11.1h-7.6L32 15zm-2.5 25.4h12.9L36 22.3h-.2l-6.3 18.1zM58.7 59.9c.6-1.4 2-2.8 4.1-4.4 1.9-1.3 3.1-2.3 3.7-2.9.8-.9 1.3-1.9 1.3-3 0-.9-.2-1.6-.7-2.2-.5-.6-1.2-.9-2.1-.9-1.2 0-2.1.5-2.5 1.4-.3.5-.4 1.4-.5 2.5h-4c.1-1.8.4-3.2 1-4.3 1.1-2.1 3-3.1 5.8-3.1 2.2 0 3.9.6 5.2 1.8 1.3 1.2 1.9 2.8 1.9 4.8 0 1.5-.5 2.9-1.4 4.1-.6.8-1.6 1.7-3 2.6L66 57.7c-1 .7-1.7 1.2-2.1 1.6-.4.3-.7.7-1 1.1H72V64H57.8c0-1.5.3-2.8.9-4.1z" /></symbol><symbol id="'+_.trumboPrefix+'superscript" viewBox="0 0 72 72"><path d="M32 15h7.8L56 57.1h-7.9l-4-11.1H27.4l-4 11.1h-7.6L32 15zm-2.5 25.4h12.9L36 22.3h-.2l-6.3 18.1zM49.6 28.8c.5-1.1 1.6-2.3 3.4-3.6 1.5-1.1 2.5-1.9 3-2.4.7-.7 1-1.6 1-2.4 0-.7-.2-1.3-.6-1.8-.4-.5-1-.7-1.7-.7-1 0-1.7.4-2.1 1.1-.2.4-.3 1.1-.4 2.1H49c.1-1.5.3-2.6.8-3.5.9-1.7 2.5-2.6 4.8-2.6 1.8 0 3.2.5 4.3 1.5 1.1 1 1.6 2.3 1.6 4 0 1.3-.4 2.4-1.1 3.4-.5.7-1.3 1.4-2.4 2.2l-1.3 1c-.8.6-1.4 1-1.7 1.3-.3.3-.6.6-.8.9h7.4v3H48.8c0-1.3.3-2.4.8-3.5z" /></symbol><symbol id="'+_.trumboPrefix+'underline" viewBox="0 0 72 72"><path d="M36 35zM15.2 55.9h41.6V59H15.2zM21.1 13.9h6.4v21.2c0 1.2.1 2.5.2 3.7.1 1.3.5 2.4 1 3.4.6 1 1.4 1.8 2.6 2.5 1.1.6 2.7 1 4.8 1 2.1 0 3.7-.3 4.8-1 1.1-.6 2-1.5 2.6-2.5.6-1 .9-2.1 1-3.4.1-1.3.2-2.5.2-3.7V13.9H51v23.3c0 2.3-.4 4.4-1.1 6.1-.7 1.7-1.7 3.2-3 4.4-1.3 1.2-2.9 2-4.7 2.6-1.8.6-3.9.9-6.1.9-2.2 0-4.3-.3-6.1-.9-1.8-.6-3.4-1.5-4.7-2.6-1.3-1.2-2.3-2.6-3-4.4-.7-1.7-1.1-3.8-1.1-6.1V13.9z" /></symbol><symbol id="'+_.trumboPrefix+'undo" viewBox="0 0 72 72"><path d="M61.2 51.2c0-5.1-2.1-9.7-5.4-13.1-3.3-3.3-8-5.4-13.1-5.4H26.1v-12L10.8 36l15.3 15.3V39.1h16.7c3.3 0 6.4 1.3 8.5 3.5 2.2 2.2 3.5 5.2 3.5 8.5h6.4z" /></symbol><symbol id="'+_.trumboPrefix+'unlink" viewBox="0 0 72 72"><path d="M30.9 49.1l-6.7 6.7c-.8.8-1.6.9-2.1.9s-1.4-.1-2.1-.9l-5.2-5.2c-1.1-1.1-1.1-3.1 0-4.2l6.1-6.1.2-.2 6.5-6.5c-1.2-.6-2.5-.9-3.8-.9-2.3 0-4.6.9-6.3 2.6L10.8 42c-3.5 3.5-3.5 9.2 0 12.7l5.2 5.2c1.7 1.7 4 2.6 6.3 2.6s4.6-.9 6.3-2.6l6.7-6.7C38 50.5 38.6 46.3 37 43l-6.1 6.1zM38.5 22.7l6.7-6.7c.8-.8 1.6-.9 2.1-.9s1.4.1 2.1.9l5.2 5.2c1.1 1.1 1.1 3.1 0 4.2l-6.1 6.1-.2.2-6.5 6.5c1.2.6 2.5.9 3.8.9 2.3 0 4.6-.9 6.3-2.6l6.7-6.7c3.5-3.5 3.5-9.2 0-12.7l-5.2-5.2c-1.7-1.7-4-2.6-6.3-2.6s-4.6.9-6.3 2.6l-6.7 6.7c-2.7 2.7-3.3 6.9-1.7 10.2l6.1-6.1z" /><path d="M44.1 30.7c.2-.2.4-.6.4-.9 0-.3-.1-.6-.4-.9l-2.3-2.3c-.2-.2-.6-.4-.9-.4-.3 0-.6.1-.9.4L25.8 40.8c-.2.2-.4.6-.4.9 0 .3.1.6.4.9l2.3 2.3c.2.2.6.4.9.4.3 0 .6-.1.9-.4l14.2-14.2zM41.3 55.8v-5h22.2v5H41.3z" /></symbol><symbol id="'+_.trumboPrefix+'unordered-list" viewBox="0 0 72 72"><path d="M27 14h36v8H27zM27 50h36v8H27zM9 50h9v8H9zM9 32h9v8H9zM9 14h9v8H9zM27 32h36v8H27z" /></symbol><symbol id="'+_.trumboPrefix+'view-html" viewBox="0 0 72 72"><path fill="none" stroke="currentColor" stroke-width="8" stroke-miterlimit="10" d="M26.9 17.9L9 36.2 26.9 54M45 54l17.9-18.3L45 17.9" /></symbol><symbol id="'+_.trumboPrefix+'base64" viewBox="0 0 72 72"><path d="M64 17v38H8V17h56m8-8H0v54h72V9z" /><path d="M29.9 28.9c-.5-.5-1.1-.8-1.8-.8s-1.4.2-1.9.7c-.5.4-.9 1-1.2 1.6-.3.6-.5 1.3-.6 2.1-.1.7-.2 1.4-.2 1.9l.1.1c.6-.8 1.2-1.4 2-1.8.8-.4 1.7-.5 2.7-.5.9 0 1.8.2 2.6.6.8.4 1.6.9 2.2 1.5.6.6 1 1.3 1.2 2.2.3.8.4 1.6.4 2.5 0 1.1-.2 2.1-.5 3-.3.9-.8 1.7-1.5 2.4-.6.7-1.4 1.2-2.3 1.6-.9.4-1.9.6-3 .6-1.6 0-2.8-.3-3.9-.9-1-.6-1.8-1.4-2.5-2.4-.6-1-1-2.1-1.3-3.4-.2-1.3-.4-2.6-.4-3.9 0-1.3.1-2.6.4-3.8.3-1.3.8-2.4 1.4-3.5.7-1 1.5-1.9 2.5-2.5 1-.6 2.3-1 3.8-1 .9 0 1.7.1 2.5.4.8.3 1.4.6 2 1.1.6.5 1.1 1.1 1.4 1.8.4.7.6 1.5.7 2.5h-4c0-1-.3-1.6-.8-2.1zm-3.5 6.8c-.4.2-.8.5-1 .8-.3.4-.5.8-.6 1.2-.1.5-.2 1-.2 1.5s.1.9.2 1.4c.1.5.4.9.6 1.2.3.4.6.7 1 .9.4.2.9.3 1.4.3.5 0 1-.1 1.3-.3.4-.2.7-.5 1-.9.3-.4.5-.8.6-1.2.1-.5.2-.9.2-1.4 0-.5-.1-1-.2-1.4-.1-.5-.3-.9-.6-1.2-.3-.4-.6-.7-1-.9-.4-.2-.9-.3-1.4-.3-.4 0-.9.1-1.3.3zM36.3 41.3v-3.8l9-12.1H49v12.4h2.7v3.5H49v4.8h-4v-4.8h-8.7zM45 30.7l-5.3 7.2h5.4l-.1-7.2z" /></symbol><symbol id="'+_.trumboPrefix+'back-color" viewBox="0 0 72 72"><path d="M36.5 22.3l-6.3 18.1H43l-6.3-18.1z" /><path d="M9 8.9v54.2h54.1V8.9H9zm39.9 48.2L45 46H28.2l-3.9 11.1h-7.6L32.8 15h7.8l16.2 42.1h-7.9z" /></symbol><symbol id="'+_.trumboPrefix+'fore-color" viewBox="0 0 72 72"><path d="M32 15h7.8L56 57.1h-7.9l-4-11.1H27.4l-4 11.1h-7.6L32 15zm-2.5 25.4h12.9L36 22.3h-.2l-6.3 18.1z" /></symbol><symbol id="'+_.trumboPrefix+'fontsize" viewBox="0 0 24 24"><path d="M9 4v3h5v12h3V7h5V4H9zm-6 8h3v7h3v-7h3V9H3v3z" /></symbol><symbol id="'+_.trumboPrefix+'emoji" viewBox="0 0 72 72"><path d="M36.05 9C21.09 9 8.949 21.141 8.949 36.101c0 14.96 12.141 27.101 27.101 27.101 14.96 0 27.101-12.141 27.101-27.101S51.01 9 36.05 9zm9.757 15.095c2.651 0 4.418 1.767 4.418 4.418s-1.767 4.418-4.418 4.418-4.418-1.767-4.418-4.418 1.767-4.418 4.418-4.418zm-19.479 0c2.651 0 4.418 1.767 4.418 4.418s-1.767 4.418-4.418 4.418-4.418-1.767-4.418-4.418 1.767-4.418 4.418-4.418zm9.722 30.436c-14.093 0-16.261-13.009-16.261-13.009h32.522S50.143 54.531 36.05 54.531z" /></symbol><symbol id="'+_.trumboPrefix+'highlight" viewBox="0 0 60 60"><path d="M11 7c0-2.206-1.794-4-4-4S3 4.794 3 7s1.794 4 4 4 4-1.794 4-4zM7 9c-1.103 0-2-.897-2-2s.897-2 2-2 2 .897 2 2-.897 2-2 2zM16 11c2.206 0 4-1.794 4-4s-1.794-4-4-4-4 1.794-4 4 1.794 4 4 4zm0-6c1.103 0 2 .897 2 2s-.897 2-2 2-2-.897-2-2 .897-2 2-2zM25 11c2.206 0 4-1.794 4-4s-1.794-4-4-4-4 1.794-4 4 1.794 4 4 4zm0-6c1.103 0 2 .897 2 2s-.897 2-2 2-2-.897-2-2 .897-2 2-2z" /><path d="M0 0v60h60V0H0zm2 2h56v10H2V2zm0 56V14h5v44H2zm56 0H9V14h49v44z" /><path d="M5 17H4a1 1 0 1 0 0 2h1a1 1 0 1 0 0-2zM5 21H4a1 1 0 1 0 0 2h1a1 1 0 1 0 0-2zM5 25H4a1 1 0 1 0 0 2h1a1 1 0 1 0 0-2zM5 29H4a1 1 0 1 0 0 2h1a1 1 0 1 0 0-2zM5 33H4a1 1 0 1 0 0 2h1a1 1 0 1 0 0-2zM5 37H4a1 1 0 1 0 0 2h1a1 1 0 1 0 0-2zM5 41H4a1 1 0 1 0 0 2h1a1 1 0 1 0 0-2zM5 45H4a1 1 0 1 0 0 2h1a1 1 0 1 0 0-2zM5 49H4a1 1 0 1 0 0 2h1a1 1 0 1 0 0-2zM5 53H4a1 1 0 1 0 0 2h1a1 1 0 1 0 0-2zM13 19h13a1 1 0 1 0 0-2H13a1 1 0 1 0 0 2zM30 19h10a1 1 0 1 0 0-2H30a1 1 0 1 0 0 2zM44 19h2a1 1 0 1 0 0-2h-2a1 1 0 1 0 0 2zM35 22a1 1 0 0 0 1 1h15a1 1 0 1 0 0-2H36a1 1 0 0 0-1 1zM32 21H18a1 1 0 1 0 0 2h14a1 1 0 1 0 0-2zM13 23h1a1 1 0 1 0 0-2h-1a1 1 0 1 0 0 2zM13 27h9a1 1 0 1 0 0-2h-9a1 1 0 1 0 0 2zM26 27h2a1 1 0 1 0 0-2h-2a1 1 0 1 0 0 2zM46 25H32a1 1 0 1 0 0 2h14a1 1 0 1 0 0-2zM13 31h13a1 1 0 1 0 0-2H13a1 1 0 1 0 0 2zM41 30a1 1 0 0 0-1-1H30a1 1 0 1 0 0 2h10a1 1 0 0 0 1-1zM36 35h8a1 1 0 1 0 0-2h-8a1 1 0 1 0 0 2zM17 34a1 1 0 0 0 1 1h14a1 1 0 1 0 0-2H18a1 1 0 0 0-1 1zM13 35h1a1 1 0 1 0 0-2h-1a1 1 0 1 0 0 2zM13 39h9a1 1 0 1 0 0-2h-9a1 1 0 1 0 0 2zM26 39h2a1 1 0 1 0 0-2h-2a1 1 0 1 0 0 2zM31 38a1 1 0 0 0 1 1h15a1 1 0 1 0 0-2H32a1 1 0 0 0-1 1zM13 43h13a1 1 0 1 0 0-2H13a1 1 0 1 0 0 2zM40 41H30a1 1 0 1 0 0 2h10a1 1 0 1 0 0-2zM51 41h-7a1 1 0 1 0 0 2h7a1 1 0 1 0 0-2zM40 45h-4a1 1 0 1 0 0 2h4a1 1 0 1 0 0-2zM17 46a1 1 0 0 0 1 1h14a1 1 0 1 0 0-2H18a1 1 0 0 0-1 1zM13 47h1a1 1 0 1 0 0-2h-1a1 1 0 1 0 0 2zM22 49h-9a1 1 0 1 0 0 2h9a1 1 0 1 0 0-2zM28 49h-2a1 1 0 1 0 0 2h2a1 1 0 1 0 0-2zM39 49h-7a1 1 0 1 0 0 2h7a1 1 0 1 0 0-2zM44 49h-1a1 1 0 1 0 0 2h1a1 1 0 1 0 0-2z" /></symbol><symbol id="'+_.trumboPrefix+'giphy" viewBox="0 0 72 72"><g fill-rule="nonzero"><path d="M15.676 40.149v-5.282h13.645v12.489c-1.326 1.283-3.248 2.413-5.764 3.39-2.516.977-5.065 1.465-7.646 1.465-3.279 0-6.137-.688-8.575-2.064-2.439-1.376-4.271-3.343-5.497-5.903C.613 41.685 0 38.901 0 35.893c0-3.265.684-6.166 2.053-8.704 1.369-2.538 3.372-4.484 6.01-5.839 2.01-1.04 4.512-1.561 7.506-1.561 3.893 0 6.933.816 9.122 2.449 2.188 1.632 3.596 3.889 4.223 6.769l-6.287 1.176c-.442-1.54-1.273-2.755-2.492-3.646-1.219-.892-2.741-1.337-4.566-1.337-2.766 0-4.965.877-6.597 2.63-1.633 1.754-2.449 4.356-2.449 7.806 0 3.722.827 6.513 2.481 8.373 1.654 1.861 3.821 2.791 6.501 2.791 1.326 0 2.656-.26 3.989-.781 1.333-.52 2.477-1.151 3.432-1.892v-3.978h-7.25zM36.568 20.324h6.33v31.352h-6.33zM50.507 51.676V20.324H72v5.304H56.837v7.421h13.089v5.303H56.837v13.324h-6.33z" /></g></symbol><symbol id="'+_.trumboPrefix+'insert-audio" viewBox="-2 -2 12 12"><path d="M3.344 0L2 2H0v4h2l1.344 2H4V0h-.656zM5 1v1c.152 0 .313.026.469.063H5.5c.86.215 1.5.995 1.5 1.938a1.99 1.99 0 0 1-2 2.001v1a2.988 2.988 0 0 0 3-3 2.988 2.988 0 0 0-3-3zm0 2v2l.25-.031C5.683 4.851 6 4.462 6 4c0-.446-.325-.819-.75-.938v-.031h-.031L5 3z" /></symbol><symbol id="'+_.trumboPrefix+'lineheight" viewBox="0 0 72 72"><path fill="currentColor" d="M31 14h36v8H31zm0 36h36v8H31zm0-18h30v8H31z" /><path fill="none" stroke="currentColor" stroke-miterlimit="10" stroke-width="3.643" d="M7.82 47.207l8.332 8.15 8.106-8.15m.018-22.572l-8.333-8.15-8.105 8.15" /><path fill="currentColor" d="M14.348 53.761v-36h3.384v36z" /></symbol><symbol id="'+_.trumboPrefix+'mathml" viewBox="0 0 445.878 445.878"><path d="M426.024 86.447H209.705l-84.911 298.911c-2.568 7.967-9.854 13.482-18.22 13.771-.236 0-.464.006-.688.006a19.868 19.868 0 0 1-18.436-12.478l-34.714-86.782H19.851C8.884 299.876 0 290.986 0 280.022c0-10.965 8.893-19.854 19.851-19.854H66.18a19.862 19.862 0 0 1 18.436 12.483l19.237 48.09 72.472-260.218a19.855 19.855 0 0 1 18.903-13.781h230.798c10.97 0 19.854 8.89 19.854 19.851s-8.892 19.854-19.856 19.854zm10.699 266.78l-78.259-87.904 74.576-82.783c1.318-1.454 1.638-3.547.857-5.341a4.977 4.977 0 0 0-4.54-2.946h-47.18a4.995 4.995 0 0 0-3.759 1.72l-50.059 58.047-49.674-58.029a4.95 4.95 0 0 0-3.771-1.738H225.58a4.947 4.947 0 0 0-4.521 2.929 4.939 4.939 0 0 0 .824 5.332l73.743 82.81-77.641 87.923a4.977 4.977 0 0 0-.813 5.325 4.978 4.978 0 0 0 4.528 2.92h48.9c1.472 0 2.867-.65 3.807-1.785l51.819-62.181 53.05 62.229a4.972 4.972 0 0 0 3.782 1.743h49.97a4.938 4.938 0 0 0 4.527-2.926 4.966 4.966 0 0 0-.832-5.345z" /></symbol><symbol id="'+_.trumboPrefix+'mention" viewBox="0 0 128 128"><path fill-rule="evenodd" d="M73.309 62.5c-1.53 9.86-8.16 17.85-14.45 17.85-5.61 0-8.5-4.08-8.5-10.54 0-13.089 8.84-24.139 20.06-24.139 2.21 0 3.91.34 5.27.68L73.309 62.5zm14.45 44.2c-6.8 3.57-15.98 5.44-24.65 5.44-25.329 0-43.519-16.15-43.519-44.54 0-32.469 22.78-52.869 48.789-52.869 26.35 0 40.63 17.17 40.63 39.27 0 19.549-9.18 28.899-16.49 28.729-4.76-.17-5.95-4.76-4.25-14.79l5.1-31.449c-4.25-2.38-12.75-4.25-20.23-4.25-24.48 0-39.779 18.87-39.779 39.609 0 13.94 7.99 22.1 19.039 22.1 9.01 0 16.66-4.42 21.93-13.09h.34c.85 9.01 6.63 13.09 14.62 13.09 18.36 0 32.3-15.64 32.3-40.459 0-28.56-21.42-49.13-51.34-49.13C31.83 4.361 6.67 34.451 6.67 69.13c0 33.32 24.82 53.55 53.039 53.55 12.07 0 20.91-1.53 31.11-6.12l-3.06-9.86z" /></symbol><symbol id="'+_.trumboPrefix+'noembed" viewBox="0 0 72 72"><path d="M31.5 33.6V25l11 11-11 11v-8.8z" /><path d="M64 17v38H8V17h56m8-8H0v54h72V9z" /></symbol><symbol id="'+_.trumboPrefix+'preformatted" viewBox="0 0 72 72"><path d="M10.3 33.5c.4 0 .9-.1 1.5-.2s1.2-.3 1.8-.7c.6-.3 1.1-.8 1.5-1.3.4-.5.6-1.3.6-2.1V17.1c0-1.4.3-2.6.8-3.6s1.2-1.9 2-2.5c.8-.7 1.6-1.2 2.5-1.5.9-.3 1.6-.5 2.2-.5h5.3v5.3h-3.2c-.7 0-1.3.1-1.8.4-.4.3-.8.6-1 1-.2.4-.4.9-.4 1.3-.1.5-.1.9-.1 1.4v11.4c0 1.2-.2 2.1-.7 2.9-.5.8-1 1.4-1.7 1.8-.6.4-1.3.8-2 1-.7.2-1.3.3-1.7.4v.1c.5 0 1 .1 1.7.3.7.2 1.3.5 2 .9.6.5 1.2 1.1 1.7 1.9.5.8.7 2 .7 3.4v11.1c0 .4 0 .9.1 1.4.1.5.2.9.4 1.3s.6.7 1 1c.4.3 1 .4 1.8.4h3.2V63h-5.3c-.6 0-1.4-.2-2.2-.5-.9-.3-1.7-.8-2.5-1.5s-1.4-1.5-2-2.5c-.5-1-.8-2.2-.8-3.6V43.5c0-.9-.2-1.7-.6-2.3-.4-.6-.9-1.1-1.5-1.5-.6-.4-1.2-.6-1.8-.7-.6-.1-1.1-.2-1.5-.2v-5.3zM61.8 38.7c-.4 0-1 .1-1.6.2-.6.1-1.2.4-1.8.7-.6.3-1.1.7-1.5 1.3-.4.5-.6 1.3-.6 2.1v12.1c0 1.4-.3 2.6-.8 3.6s-1.2 1.9-2 2.5c-.8.7-1.6 1.2-2.5 1.5-.9.3-1.6.5-2.2.5h-5.3v-5.3h3.2c.7 0 1.3-.1 1.8-.4.4-.3.8-.6 1-1 .2-.4.4-.9.4-1.3.1-.5.1-.9.1-1.4V42.3c0-1.2.2-2.1.7-2.9.5-.8 1-1.4 1.7-1.8.6-.4 1.3-.8 2-1 .7-.2 1.3-.3 1.7-.4v-.1c-.5 0-1-.1-1.7-.3-.7-.2-1.3-.5-2-.9-.6-.4-1.2-1.1-1.7-1.9-.5-.8-.7-2-.7-3.4V18.5c0-.4 0-.9-.1-1.4-.1-.5-.2-.9-.4-1.3s-.6-.7-1-1c-.4-.3-1-.4-1.8-.4h-3.2V9.1h5.3c.6 0 1.4.2 2.2.5.9.3 1.7.8 2.5 1.5s1.4 1.5 2 2.5c.5 1 .8 2.2.8 3.6v11.6c0 .9.2 1.7.6 2.3.4.6.9 1.1 1.5 1.5.6.4 1.2.6 1.8.7.6.1 1.2.2 1.6.2v5.2z" /></symbol><symbol id="'+_.trumboPrefix+'ruby" viewBox="0 0 72 72"><path d="M16.499 24.477h8.018L41.08 67.5H33l-4.04-11.361H11.804L7.764 67.5H0l16.499-43.023zm-2.65 25.907h13.127l-6.438-18.497h-.177l-6.512 18.497zM65.053 16.685c-6.316 1.178-12.025 1.98-17.126 2.408a362.385 362.385 0 0 0-.965 5.833c-.25 1.57-.679 3.907-1.286 7.013 3.033-1.963 5.852-3.266 8.458-3.907 2.639-.642 4.905-.891 6.797-.75 1.891.108 3.746.661 5.566 1.661 1.82.964 3.264 2.408 4.334 4.334 1.104 1.893 1.427 4.088.965 6.584-.466 2.461-1.554 4.494-3.265 6.101-1.679 1.605-3.658 2.783-5.941 3.532-2.283.785-4.853 1.251-7.707 1.391-2.819.144-5.906.161-9.259.056 0-1.642-.287-3.212-.857-4.71l.108-.59c2.711.5 5.246.768 7.601.802 2.39 0 4.529-.195 6.421-.589 1.927-.393 3.605-1.069 5.031-2.031 1.427-.965 2.319-2.319 2.676-4.067.394-1.75.269-3.229-.373-4.443-.644-1.249-1.446-2.213-2.408-2.891-.929-.68-2.161-1.034-3.693-1.071-1.536-.072-3.265.089-5.192.482-1.927.391-3.82 1.14-5.672 2.248a24.308 24.308 0 0 0-4.978 3.907l-4.872-1.981c1.463-5.031 2.355-8.597 2.677-10.703.321-2.105.642-4.067.963-5.887-3.961.25-7.154.411-9.58.481-.215-1.927-.52-3.534-.91-4.817l.32-.32c3.604.32 7.225.446 10.865.375.214-1.355.481-3.103.804-5.245.354-2.175.407-3.621.16-4.336.034-.784.374-1.017 1.017-.695l5.085.749c.428.251.444.573.055.964l-.857.91c-.537 2.89-.981 5.352-1.338 7.385 4.279-.427 9.312-1.393 15.092-2.89l1.284 4.707" /></symbol><symbol id="'+_.trumboPrefix+'special-chars" viewBox="0 0 72 72"><text style="text-align:start;line-height:125%" x="6.03" y="48.528" transform="scale(1.0117 .98844)" font-size="60.056" font-weight="400" font-family="Times New Roman"><tspan x="6.03" y="48.528">&#x2122;</tspan></text></symbol><symbol id="'+_.trumboPrefix+'col-delete" viewBox="0 0 24 24"><g transform="translate(-326 -532.36)"><rect width="6" height="15" x="335" y="537.36" fill="#ed5565" stroke="#000" stroke-linejoin="round" stroke-linecap="round" stroke-width=".837" rx=".646" /><path d="M347.58 536.498c-.051-.618-.55-1.138-1.178-1.138H329.6c-.628 0-1.127.52-1.18 1.138h-.02v15.663a1.2 1.2 0 0 0 1.2 1.2h16.801a1.2 1.2 0 0 0 1.2-1.2v-15.663h-.021M334.4 552.16h-4.8v-3.6h4.8v3.6m0-4.7h-4.8v-3.7h4.8v3.7m0-4.9h-4.8v-3.601h4.8v3.6m6 9.601h-4.8v-3.6h4.8v3.6m0-4.7h-4.8v-3.7h4.8v3.7m0-4.9h-4.8v-3.601h4.8v3.6m6.001 9.601h-4.8v-3.6h4.8v3.6m0-4.7h-4.8v-3.7h4.8v3.7m0-4.9h-4.8v-3.601h4.8v3.6" /></g></symbol><symbol id="'+_.trumboPrefix+'col-left" viewBox="0 0 24 24"><g transform="translate(-326 -532.36)"><rect width="6" height="15" x="329" y="537.36" fill="#1ab394" stroke="#000" stroke-linejoin="round" stroke-linecap="round" stroke-width=".837" rx=".646" /><path d="M347.58 536.498c-.051-.618-.55-1.138-1.178-1.138H329.6c-.628 0-1.127.52-1.18 1.138h-.02v15.663a1.2 1.2 0 0 0 1.2 1.2h16.801a1.2 1.2 0 0 0 1.2-1.2v-15.663h-.021M334.4 552.16h-4.8v-3.6h4.8v3.6m0-4.7h-4.8v-3.7h4.8v3.7m0-4.9h-4.8v-3.601h4.8v3.6m6 9.601h-4.8v-3.6h4.8v3.6m0-4.7h-4.8v-3.7h4.8v3.7m0-4.9h-4.8v-3.601h4.8v3.6m6.001 9.601h-4.8v-3.6h4.8v3.6m0-4.7h-4.8v-3.7h4.8v3.7m0-4.9h-4.8v-3.601h4.8v3.6" /></g></symbol><symbol id="'+_.trumboPrefix+'col-right" viewBox="0 0 24 24"><g transform="matrix(-1 0 0 1 350 -532.36)"><rect y="537.36" x="329" height="15" width="6" fill="#1ab394" stroke="#000" stroke-linejoin="round" stroke-linecap="round" stroke-width=".837" rx=".646" /><path d="M347.58 536.498c-.051-.618-.55-1.138-1.178-1.138H329.6c-.628 0-1.127.52-1.18 1.138h-.02v15.663a1.2 1.2 0 0 0 1.2 1.2h16.801a1.2 1.2 0 0 0 1.2-1.2v-15.663h-.021M334.4 552.16h-4.8v-3.6h4.8v3.6m0-4.7h-4.8v-3.7h4.8v3.7m0-4.9h-4.8v-3.601h4.8v3.6m6 9.601h-4.8v-3.6h4.8v3.6m0-4.7h-4.8v-3.7h4.8v3.7m0-4.9h-4.8v-3.601h4.8v3.6m6.001 9.601h-4.8v-3.6h4.8v3.6m0-4.7h-4.8v-3.7h4.8v3.7m0-4.9h-4.8v-3.601h4.8v3.6" /></g></symbol><symbol id="'+_.trumboPrefix+'row-above" viewBox="0 0 24 24"><rect y="-347" x="537.06" height="18" width="6" transform="matrix(0 1 1 0 350 -532.36)" fill="#1ab394" stroke="#000" stroke-linejoin="round" stroke-linecap="round" stroke-width=".917" rx=".776" /><path d="M2.42 4.138C2.47 3.52 2.97 3 3.598 3H20.4c.628 0 1.127.52 1.18 1.138h.02V19.8a1.2 1.2 0 0 1-1.2 1.2H3.599a1.2 1.2 0 0 1-1.2-1.2V4.138h.021M15.6 19.8h4.8v-3.6h-4.8v3.6m0-4.7h4.8v-3.7h-4.8v3.7m0-4.9h4.8V6.6h-4.8v3.6m-6 9.601h4.8v-3.6H9.6v3.6m0-4.7h4.8v-3.7H9.6v3.7m0-4.9h4.8V6.6H9.6v3.6m-6.001 9.601h4.8v-3.6H3.6v3.6m0-4.7h4.8v-3.7H3.6v3.7m0-4.9h4.8V6.6H3.6v3.6" /></symbol><symbol id="'+_.trumboPrefix+'row-below" viewBox="0 0 24 24"><rect y="-347.06" x="548.4" height="18.13" width="4.427" transform="matrix(0 1 1 0 350 -532.36)" fill="#1ab394" stroke="#000" stroke-linejoin="round" stroke-linecap="round" stroke-width=".79" rx=".781" /><path d="M2.42 4.138C2.47 3.52 2.97 3 3.598 3H20.4c.628 0 1.127.52 1.18 1.138h.02V19.8a1.2 1.2 0 0 1-1.2 1.2H3.599a1.2 1.2 0 0 1-1.2-1.2V4.138h.021M15.6 19.8h4.8v-3.6h-4.8v3.6m0-4.7h4.8v-3.7h-4.8v3.7m0-4.9h4.8V6.6h-4.8v3.6m-6 9.601h4.8v-3.6H9.6v3.6m0-4.7h4.8v-3.7H9.6v3.7m0-4.9h4.8V6.6H9.6v3.6m-6.001 9.601h4.8v-3.6H3.6v3.6m0-4.7h4.8v-3.7H3.6v3.7m0-4.9h4.8V6.6H3.6v3.6" /></symbol><symbol id="'+_.trumboPrefix+'row-delete" viewBox="0 0 24 24"><rect width="5" height="18" x="543.36" y="-347" transform="rotate(90 103.18 -429.18)" fill="#ed5565" rx=".776" /><path d="M21.58 4.136c-.051-.618-.55-1.138-1.178-1.138H3.6c-.628 0-1.127.52-1.18 1.138H2.4v15.663A1.2 1.2 0 0 0 3.6 21h16.801a1.2 1.2 0 0 0 1.2-1.2V4.136h-.021M8.4 19.799H3.6v-3.6h4.8v3.6m0-4.7H3.6v-3.7h4.8v3.7m0-4.9H3.6V6.597h4.8v3.6m6 9.601H9.6v-3.6h4.8v3.6m0-4.7H9.6v-3.7h4.8v3.7m0-4.9H9.6V6.597h4.8v3.6m6.001 9.601h-4.8v-3.6h4.8v3.6m0-4.7h-4.8v-3.7h4.8v3.7m0-4.9h-4.8V6.597h4.8v3.6" /></symbol><symbol id="'+_.trumboPrefix+'table-delete" viewBox="0 0 24 24"><rect y="-347" x="537.06" height="18" width="6" transform="matrix(0 1 1 0 350 -532.36)" fill="#ed5565" stroke="#000" stroke-linejoin="round" stroke-linecap="round" stroke-width=".917" rx=".776" /><rect width="5" height="18" x="543.36" y="-347" transform="rotate(90 103.18 -429.18)" fill="#ed5565" rx=".776" /><rect y="-347.06" x="548.4" height="18.13" width="4.427" transform="matrix(0 1 1 0 350 -532.36)" fill="#ed5565" stroke="#000" stroke-linejoin="round" stroke-linecap="round" stroke-width=".79" rx=".781" /><path d="M21.58 4.136c-.051-.618-.55-1.138-1.178-1.138H3.6c-.628 0-1.127.52-1.18 1.138H2.4v15.663A1.2 1.2 0 0 0 3.6 21h16.801a1.2 1.2 0 0 0 1.2-1.2V4.136h-.021M8.4 19.799H3.6v-3.6h4.8v3.6m0-4.7H3.6v-3.7h4.8v3.7m0-4.9H3.6V6.597h4.8v3.6m6 9.601H9.6v-3.6h4.8v3.6m0-4.7H9.6v-3.7h4.8v3.7m0-4.9H9.6V6.597h4.8v3.6m6.001 9.601h-4.8v-3.6h4.8v3.6m0-4.7h-4.8v-3.7h4.8v3.7m0-4.9h-4.8V6.597h4.8v3.6" /></symbol><symbol id="'+_.trumboPrefix+'table" viewBox="0 0 72 72"><path d="M25.686 51.38v-6.347q0-.462-.297-.76-.298-.297-.761-.297H14.04q-.463 0-.761.297-.298.298-.298.76v6.346q0 .463.298.76.298.298.76.298h10.589q.463 0 .76-.298.298-.297.298-.76zm0-12.692v-6.346q0-.463-.297-.76-.298-.298-.761-.298H14.04q-.463 0-.761.298-.298.297-.298.76v6.346q0 .462.298.76.298.297.76.297h10.589q.463 0 .76-.297.298-.298.298-.76zm16.94 12.691v-6.346q0-.462-.297-.76-.298-.297-.761-.297H30.98q-.463 0-.76.297-.299.298-.299.76v6.346q0 .463.298.76.298.298.761.298h10.588q.463 0 .76-.298.299-.297.299-.76zm-16.94-25.383v-6.345q0-.463-.297-.76-.298-.298-.761-.298H14.04q-.463 0-.761.297-.298.298-.298.76v6.346q0 .463.298.76.298.298.76.298h10.589q.463 0 .76-.298.298-.297.298-.76zm16.94 12.692v-6.346q0-.463-.297-.76-.298-.298-.761-.298H30.98q-.463 0-.76.298-.299.297-.299.76v6.346q0 .462.298.76.298.297.761.297h10.588q.463 0 .76-.297.299-.298.299-.76zm16.94 12.691v-6.346q0-.462-.297-.76-.298-.297-.76-.297H47.92q-.463 0-.76.297-.298.298-.298.76v6.346q0 .463.297.76.298.298.761.298h10.588q.463 0 .761-.298.298-.297.298-.76zm-16.94-25.383v-6.345q0-.463-.297-.76-.298-.298-.761-.298H30.98q-.463 0-.76.297-.299.298-.299.76v6.346q0 .463.298.76.298.298.761.298h10.588q.463 0 .76-.298.299-.297.299-.76zm16.94 12.692v-6.346q0-.463-.297-.76-.298-.298-.76-.298H47.92q-.463 0-.76.298-.298.297-.298.76v6.346q0 .462.297.76.298.297.761.297h10.588q.463 0 .761-.297.298-.298.298-.76zm0-12.692v-6.345q0-.463-.297-.76-.298-.298-.76-.298H47.92q-.463 0-.76.297-.298.298-.298.76v6.346q0 .463.297.76.298.298.761.298h10.588q.463 0 .761-.298.298-.297.298-.76zm4.236-10.576v35.96q0 2.18-1.555 3.734-1.555 1.553-3.739 1.553H14.04q-2.184 0-3.739-1.553-1.555-1.553-1.555-3.735V15.42q0-2.181 1.555-3.735 1.555-1.553 3.739-1.553h44.468q2.184 0 3.739 1.553 1.555 1.554 1.555 3.735z" /></symbol><symbol id="'+_.trumboPrefix+'upload" viewBox="0 0 72 72"><path d="M18.8,63.5c-3.4,0-6.7-1.3-9.1-3.8c-5-5-5-13.2,0-18.2L38,13.3c3.1-3.1,7.2-4.8,11.6-4.8s8.5,1.7,11.6,4.8 c6.4,6.4,6.4,16.8,0,23.2L36.1,61.7c-1,1-2.6,1-3.5,0c-1-1-1-2.6,0-3.5L57.7,33c4.5-4.5,4.5-11.7,0-16.2c-2.2-2.2-5-3.3-8.1-3.3 c-3.1,0-5.9,1.2-8.1,3.3L13.2,45.1c-3.1,3.1-3.1,8,0,11.1c1.5,1.5,3.5,2.3,5.6,2.3s4.1-0.8,5.6-2.3l22.8-22.8 c1.7-1.7,1.7-4.4,0-6.1c-1.7-1.7-4.4-1.7-6.1,0l-20,20c-1,1-2.6,1-3.5,0c-1-1-1-2.6,0-3.5l20-20c3.6-3.6,9.5-3.6,13.1,0 c3.6,3.6,3.6,9.5,0,13.1L27.9,59.8C25.4,62.2,22.2,63.5,18.8,63.5z"/></symbol></svg>' || frameWork.trumbowyg.iconsMarkup;
	

	_.strGetFileExtension = function(str) {
		str = str || '';
		return str.split('.').pop();
	}
	_.strToCamelCase = function(str){
		str = str || '';


		return str.replace(/(?:^\w|[A-Z]|\b\w)/g, function(word, index) {
			return index == 0 ? word.toLowerCase() : word.toUpperCase();
		}).replace(/-|\s/g, '');

	}

	_.arrMoveItem = function(arr,oi,ni){
		while (oi < 0) {
			oi += arr.length;
		}
		while (ni < 0) {
			ni += arr.length;
		}
		if (ni >= arr.length) {
			var k = ni - arr.length;
			while ((k--) + 1) {
				arr.push(undefined);
			}
		}
		arr.splice(ni, 0, arr.splice(oi, 1)[0]);  
		return arr;
	}

	_.datetimeFormatPresets = {
		HumanDate: {
			placeholder:"mm/dd/yyyy",
			pattern:/^\d{2}\/\d{2}\/\d{4}$/,
			template:"mm/dd/yy"
		},
		// HumanTime24: {
		// 	placeholder:"hh:mm",
		// 	pattern:"",
		// 	template:"HH:MM"
		// },
		// HumanTime12: {
		// 	placeholder:"hh:mm",
		// 	pattern:"",
		// 	template:"HH:MM"
		// },
		Value: {
			placeholder:"yyyy-mm-dd",
			pattern:/^\d{4}[-]\d{2}[-]\d{2}$/,
			template:"yy-mm-dd"
		},
		// ValueDateTime:{
		// 	placeholder:"yy-mm-ddThh:gg",
		// 	pattern:"",
		// 	template:"yy-mm-ddThh:gg"
		// },
	}


	_.dayFormatNames = [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ]; // For formatting
	_.dayFormatNamesShort = [ "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" ]; // For formatting
	_.dayFormatNamesShorter = [ "Su", "Mo", "Tu", "We", "Th", "Fr", "Sa" ]; // For formatting
	_.monthFormatNames = [ "January","February","March","April","May","June","July","August","September","October","November","December" ];
	_.monthFormatNamesShort = [ "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" ];


	//make it objoct
	_.dateToParse = function(date) {


	
		var yr,mo,dy,hr,mn;

		var dateArr = [];
		var timeArr = [];

		if(date){

			if(Object.prototype.toString.call(date) === '[object Date]'){

				//make a new date out of its methods because js will think u are referring to the same date everythere and ur math becomes a hellhole... dont.. hOE
				yr = date.getFullYear() || null;
				mo = date.getMonth() || null;
				dy = date.getDate() || null;
				hr = date.getHours() || null;
				mn = date.getMinutes() || null;


			}else{

				var pattern = new RegExp(_.datetimeFormatPresets.Value.pattern);

				var isValid = pattern.test(date);

				if(isValid){


					var dateTimeArr = date.split('T') || [];
		
					//date
					if(dateTimeArr[0]){
						dateArr = dateTimeArr[0].split('-');
					}
			
					//time
					if(dateTimeArr[1]){
						timeArr = dateTimeArr[1].split(':');
					}
			
					yr = parseInt(dateArr[0]) || null;
					mo = parseInt((dateArr[1]) - 1) || null;
					dy = parseInt(dateArr[2]) || null;
					hr = parseInt(timeArr[0]) || null;
					mn = parseInt(timeArr[1]) || null;
				}
			}

			var toReturn = false;
			if(Object.prototype.toString.call(new Date(yr,mo,dy,hr,mn)) == '[object Date]'){
				toReturn = new Date(yr,mo,dy,hr,mn);
			}

			return toReturn;
		}
	}

	//make it human readable
	_.dateToHuman = function( date,format ) {
		date = _.dateToParse(date);
		format = format || _.datetimeFormatPresets.HumanDate.template;
		if ( date ) {

			var iFormat;

				// Check whether a format character is doubled
				lookAhead = function( match ) {
					var matches = ( iFormat + 1 < format.length && format.charAt( iFormat + 1 ) === match );
					if ( matches ) {
						iFormat++;
					}
					return matches;
				},

				// Format a number, with leading zero if necessary
				formatNumber = function( match, value, len ) {
					var num = "" + value;
					if ( lookAhead( match ) ) {
						while ( num.length < len ) {
							num = "0" + num;
						}
					}
					return num;
				},

				// Format a name, short or long as requested
				formatName = function( match, value, shortNames, longNames ) {
					return ( lookAhead( match ) ? longNames[ value ] : shortNames[ value ] );
				},
				output = "",
				literal = false;

			if ( date ) {
				for ( iFormat = 0; iFormat < format.length; iFormat++ ) {
					if ( literal ) {
						if ( format.charAt( iFormat ) === "'" && !lookAhead( "'" ) ) {
							literal = false;
						} else {
							output += format.charAt( iFormat );
						}
					} else {
						switch ( format.charAt( iFormat ) ) {

							case "d": //date number
								output += formatNumber(
									"d",
									date.getDate(),
									2
								);
								break;
							case "D": //day of the week
								output += formatName(
									"D",
									date.getDay(),
									_.dayFormatNamesShort,
									_.dayFormatNames
								);
								break;


							case "o": //day of year hmm
								output += formatNumber(
									"o",
									Math.round( ( new Date( date.getFullYear(), date.getMonth(), date.getDate() ).getTime() - new Date( date.getFullYear(), 0, 0 ).getTime() ) / 86400000 ),
									3
								);
								break;


							case "m": //month
								output += formatNumber(
									"m",
									date.getMonth() + 1,
									2
								);
								break;
							case "M": //month but name
								output += formatName(
									"M", date.getMonth(),
									_.monthFormatNamesShort,
									_.monthFormatNames
								);
								break;


							case "y": //year
								output += (
									lookAhead( "y" ) ? date.getFullYear() :
									( date.getFullYear() % 100 < 10 ? "0" : "" ) + date.getFullYear() % 100
								);
								break;
								

								
							case "H"://12 hour
								output += formatNumber(
									"H",
									(date.getHours() % 12 || 12),
									2
								);
								break;
							case "h"://24 hour
								output += formatNumber(
									"h",
									date.getHours(),
									2
								);
								break;
								

								
							case "i"://minute
								output += formatNumber(
									"i",
									date.getMinutes(),
									2
								);
								break;

								
							case "a": //am /pm
								output += (
									date.getHours() >= 12 ? 'pm' : 'am'
								);
								break;

							case "A": //AM/PM 
								output += (
									date.getHours() >= 12 ? 'PM' : 'AM'
								);
								break;

							case "'":
								if ( lookAhead( "'" ) ) {
									output += "'";
								} else {
									literal = true;
								}
								break;

							default:
								output += format.charAt( iFormat );
						}
					}
				}
			}
			return output;
		}else{
			return false;
		}
		
	}

	//make it ready for input value of datata
	_.dateToVal = function(date) {
		var d = _.dateToParse(date);

		if(d){
			return _.dateToHuman( d,_.datetimeFormatPresets.Value.template );
		}
	}

	_.dateGetAdjacent = function(date,offsetByMonth,dateOverride){


		var d = _.dateToParse(date);

		if(d){

			var currMonth = d.getMonth();
			var currYear = d.getFullYear();
	
			dateOverride = dateOverride || null;
	
	
			var newMonth = (function(){
				var toReturn;
				if(
					((currMonth + offsetByMonth) % 12) > 12
				){
					toReturn = (((currMonth + offsetByMonth) % 12) - 12);
				}else if(
					((currMonth + offsetByMonth) % 12) < 0
				){
					toReturn = (((currMonth + offsetByMonth) % 12) + 12);
				}else{
					toReturn = ((currMonth + offsetByMonth) % 12);
				}
	
				return toReturn
			}());
	
			var newYear = (function(){
				var defOffset = parseInt(offsetByMonth / 12);
				var toReturn = currYear + defOffset;
	
				//offset to adjacent year
				if(offsetByMonth < 0 && ((currMonth + (offsetByMonth % 12) ) ) < 0){
					toReturn -= 1;
				}else if(offsetByMonth > 0 && ((currMonth + (offsetByMonth % 12) ) ) > 11){
	
					toReturn += 1;
				}
				return toReturn;
			}());
			
	
			d.setMonth(newMonth);
			d.setFullYear(newYear);
	
			if(dateOverride) {
				d.setDate(dateOverride);
			}
	
	
			return d;
		}else{
			return false;
		}

	}

	_.reverseArray = function(arr) {
		var newArray = [];
		for (var i = arr.length - 1; i >= 0; i--) {
			newArray.push(arr[i]);
		}
		return newArray;
	}

	_.parseArgs = function(arr,defaults) {
		
		var args = {};

		for(var def in defaults){
			args[def] = defaults[def];
		}


		for (var prop in arr) {
			if(arr.hasOwnProperty(prop) && arr[prop] !== undefined) {
				// Push each value from `obj` into `extended`
				
				// catch boolean
				if(arr[prop] == 'false' || arr[prop] == 'true') {
					arr[prop] = arr[prop] == 'true' ? true : false;
				}

				args[prop] = arr[prop];
			}
		}

		return args;
	}


	_.changeHash = function(id) {

		id = id || '';

		if(frameWork.settings.dynamicHash){
			
			var idToGoTo = id !== '' ? '#'+id : null;

			if(idToGoTo){
				if(history.pushState) {
					history.pushState(null, null, idToGoTo);
				}
				else {
					location.hash = idToGoTo;
				}
			}else{
				var noHashURL = window.location.href.replace(/#.*$/, '');
				window.history.pushState('', document.title, noHashURL)
			}
		}
	}

	//good for descendants of ui shitsc as long as ui component gets data attribues of element that start is
	_.getTheUiTriggerer = function(triggerer) {

		triggerer = triggerer || false;

		if(triggerer){


			if(triggerer.closest('.input-group'+frameWork.settings.uiClass).length){

			}else if(triggerer.closest('.'+frameWork.settings.uiClass).length && !_.getTheToggled(triggerer,'dropdown')) {
				toReturn = triggerer.closest('.'+frameWork.settings.uiClass).first();
			}else{
				toReturn = triggerer;
			}
	
			return toReturn;
		}
	}


	_.getTheToggled = function(triggerer,toggleMode){
		triggerer = triggerer || null;

		toggleMode = toggleMode || null;
		var selector = '.'+toggleMode || null;
		var toggledClass = '.'+toggleMode.replace('-open','').replace('-close','') || null;
		var toReturn = false;


		if(triggerer){
			if(
				triggerer.attr('href')
				&& (
					triggerer.attr('href') !== ''
					&& triggerer.attr('href') !== '#'
				)
			){
				toReturn =  $( triggerer.attr('href') );
			}else if( triggerer.attr('data-href') ){
				toReturn =  $( triggerer.attr('data-href') )
			}else if(toggleMode && triggerer.parent().closest('[data-toggle="'+toggleMode+'"]').length){
				toReturn = _.getTheToggled(triggerer.closest('[data-toggle="'+toggleMode+'"]'),toggleMode)
			}else if(toggleMode && triggerer.parent('.input-group').length){
				toReturn = _.getTheToggled(triggerer.parent('.input-group'),toggleMode);
			}else if( toggleMode && triggerer.parent('.btn-group').length ){
				toReturn = _.getTheToggled(triggerer.parent('.btn-group'),toggleMode);
			}else if( triggerer.next(selector).first().length){
				toReturn =  triggerer.next(selector).first();
			}else if( triggerer.siblings(selector).first().length){
				toReturn =  triggerer.siblings(selector).first();
			}
		}else{
			if (
				window.location.hash !== ''
				&& $(window.location.hash).length > -1
				&& $(window.location.hash).hasClass( toggledClass.replace('.','') )
			){
				toReturn =  $(window.location.hash)
			}
		}


		if(!toReturn){

			//look if theres an ancestor it can toggle. last prioroty
			switch(toggleMode){
				case 'dropdown':
				case 'modal':
				case 'board':
				case 'asset':
				case 'alert-close':
					if(triggerer && toggleMode && triggerer.parent().closest(toggledClass).length) {
						toReturn = triggerer.parent().closest(toggledClass);
					}
					break;
			}
		}

		return toReturn;
	};

	_.br_vals = {
		xxs: 0,
		xs: parseFloat( getComputedStyle(document.documentElement).getPropertyValue('--br-xs') ) || 600,
		sm: parseFloat( getComputedStyle(document.documentElement).getPropertyValue('--br-sm') ) || 1200,
		md: parseFloat( getComputedStyle(document.documentElement).getPropertyValue('--br-md') ) || 1600,
		lg: 9999999
	};
	_.br_arr = Object.keys(_.br_vals);
	// _.br_to_loop =  ['xs','sm','md','lg'];

	_.br_mobile_max = parseFloat( getComputedStyle(document.documentElement).getPropertyValue('--mobile-br-max') ) || 'sm';

	_.fns_on_load = [];
	_.fns_on_ready = [];
	_.fns_on_resize = [];
	_.fns_on_rightAway = [];

	frameWork.validateBr = function(breakpoint,mode) {
		mode = mode || 'below'; //below,within,above
		var currIndex = _.br_arr.indexOf(breakpoint);

		switch(mode) {
			case 'below': //max-width
				return document.documentElement.clientWidth <= _.br_vals[breakpoint];
			case 'within':
				return (
					document.documentElement.clientWidth <= _.br_vals[breakpoint] //max
				) && (
					document.documentElement.clientWidth > _.br_vals[ _.br_arr[currIndex - 1] ] //min
				)
			case 'above':
				return (currIndex > 0) ? ( document.documentElement.clientWidth > _.br_vals[ _.br_arr[currIndex - 1] ] ) : (document.documentElement.clientWidth > _.br_vals[ _.br_arr[currIndex] ]);
		}
	}

	_.palette = [
		'base',
		'primary',
		'secondary',
		'accent',
		'neutral',
		'error',
		'caution',
		'success',
		'intensity-1',
		'intensity-2',
		'intensity-3',
		'intensity-4',
		'intensity-5',
	]

	frameWork.initGrid = function(moduleGrid){
		

		var availablePropertiesParent = [
			'grid-template-columns',
			'grid-template-rows',
			'grid-template-areas',


			'grid-column-start',
			'grid-template-end',
			'grid-template',
			'grid-column-gap',
			'grid-row-gap',
			'justify-items',
			'align-items',
			'justify-content',
			'align-content',
			'place-content',
			'grid-auto-columns',
			'grid-auto-rows',
			'grid-auto-flow',
			'grid'
		];



		var availablePropertiesChildren = [
			'grid-area',

			'grid-column',
			'grid-row',
			
			'grid-column-start',
			'grid-column-end',
			'grid-row-start',
			'grid-row-end',
			'justify-self',
			'align-self',
			'place-self'
		];

		function renderProps(modElement,props){

			props.forEach(function(prop){
				var propsSet = false;
				var propSetBr = false;
				var smallestStyledBr = false;
				
				//check for breakpointz first
				_.reverseArray(_.br_arr).forEach(function(br){
					
					
					if( modElement.attr('data-'+prop+'-'+br) && !propsSet ) {
						smallestStyledBr = br;
						
						if( frameWork.validateBr(br,'above') ){
							
							
							modElement.css(prop, modElement.attr('data-'+prop+'-'+br));
							
							propsSet = true;
							propSetBr = true;
						}

					}
				});
	
				if(modElement.attr('data-'+prop) && !propsSet) {

					if(!propsSet && !propSetBr) {
						
						modElement.css(prop, modElement.attr('data-'+prop))
						propsSet = true;
					}
				}else{
					if(
						modElement.prop('style')[_.strToCamelCase(prop)] !== null
						&& smallestStyledBr
						&& !frameWork.validateBr(smallestStyledBr,'above')
					){
						modElement.css(prop,'');
					}
				}
			}); 
		}


		renderProps(moduleGrid,availablePropertiesParent);

		//chchchchchildren

		moduleGrid.children('.module').each(function(){
			var moduleChild = $(this);
			renderProps(moduleChild,availablePropertiesChildren);
		});
		
	}

	//range only is pag kwan di sya isa isang date pangmaramihan
	_.dateIsValid = function(date,args,rangeOnly){
		var d = _.dateToParse(date);
		var checkAgainst = args.disabledDates.split(',');
		var toReturn = true;

		rangeOnly = rangeOnly || false; //range,spot


		if(!rangeOnly){
			//if in disabled dates
			if(
				checkAgainst.indexOf(_.dateToVal(d)) > -1
			){
				// console.warn('value is declared disabled specifically || ',_.dateToVal(d));;
				toReturn = false;
			}

			//weekend
			if(
				(checkAgainst.indexOf('weekends') > -1)
				&& (d.getDay() == 0 || d.getDay() == 6)
			){
				// console.warn('value was a weekend || ',_.dateToVal(d),_.dateToVal(date));
				toReturn = false;
			}

		}

		//in the past
		var dateNow = new Date();

		dateNow.setHours(0,0,0,0);
		if(
			(checkAgainst.indexOf('past') > -1)
			&& (d < dateNow)
		){
			// console.warn('value was in the past || ',_.dateToVal(date),'\nversus ',_.dateToVal(dateNow));
			toReturn = false;
		}


		if(
			(checkAgainst.indexOf('future') > -1)
			&& (d > dateNow)
		){
			// console.warn('value was in the future || ',_.dateToVal(date),'\nversus ',_.dateToVal(dateNow));
			toReturn = false;
		}

		//if  in range of min or max
		if(
			(_.dateToParse(args.max) && _.dateToParse(args.max) < d)
			|| (_.dateToParse(args.min) && d < _.dateToParse(args.min))
		) {
			// console.warn('value not in max and width || ',_.dateToVal(d));
			toReturn = false;
		}


		return toReturn;
	};
		
	_.calendarUiPrefix = function(noDash) {
		noDash = noDash || false;
		return noDash ? 'input-calendar-ui' : 'input-calendar-ui-';
	};

	_.createCalendarUi = function(inputCalendar,valueForUi,args){

		if(inputCalendar){
		
			valueForUi = valueForUi || _.dateToVal(inputCalendar.val()) || _.dateToVal(new Date());

			var theUi = {};

			theUi.container = inputCalendar.closest('.'+_.calendarUiPrefix(true));


			if( !theUi.container.length ){
				inputCalendar.wrap($('<div class="'+frameWork.settings.uiClass+' '
				+inputCalendar.attr('class').replace( 'input-calendar',_.calendarUiPrefix(true) )
				+'"></div>'));
				theUi.container = inputCalendar.closest('.'+_.calendarUiPrefix(true));
			}

			//idk it never exists on initial so we dont have to do weird div wraping catches here
			theUi.input = theUi.container.children('.'+_.calendarUiPrefix()+'input');
			inputCalendar.siblings().not(theUi.input).remove();


			//input
			if(args.textInput) {
				if(!theUi.input.length){

					theUi.input = $('<div class="'+_.calendarUiPrefix()+'input"><input class="input input-single-line" type="text" maxlength="10"  placeholder="MM/DD/YYYY" /></div>');
					theUi.container.append(theUi.input);
				}
			}

			if(frameWork.isDisabled(inputCalendar)){
				theUi.input.addClass('disabled');
			}


			
			var currYear = _.dateToParse(valueForUi).getFullYear();
			var currMonth = _.dateToParse(valueForUi).getMonth();
			var currentCalendarDate = new Date(currYear,currMonth,1); //IT ALSO FIRST DAY MOTHERFUCKER



			//heading
			theUi.heading = $('<div class="'+_.calendarUiPrefix()+'heading"></div>');
			theUi.container.append(theUi.heading);

				//arrowz
				function generateArrow(buttonClass){

					var symbolClass,arrowDate,validness;
					//set a new date with no date because fuck that boi

					// console.warn(buttonClass,'hello i fucked up','\n',_.dateToParse(valueForUi),'\n',currentCalendarDate,'\n', new Date(currYear,currMonth));

					switch(buttonClass){
						case 'prev-month':
							symbolClass = 'symbol-arrow-left';
							arrowDate = _.dateToVal(
								_.dateGetAdjacent(
									currentCalendarDate,
									-1
								)
							);
							validness = _.dateIsValid(new Date(currYear,currMonth,0),args,true);
							break;
						
						case 'prev-year':
							symbolClass = 'symbol-arrow-double-left';
							arrowDate = _.dateToVal(
								_.dateGetAdjacent(
									currentCalendarDate,
									-12
								)
							);
							validness = _.dateIsValid(new Date(currYear-1,currMonth,0),args,true);
							break;

						case 'next-month':
							symbolClass = 'symbol-arrow-right';
							arrowDate = _.dateToVal(
								_.dateGetAdjacent(
									currentCalendarDate,
									1
								)
							);
							validness = _.dateIsValid(new Date(currYear,currMonth+1,1),args,true);
							break;

						case 'next-year':
							symbolClass = 'symbol-arrow-double-right';
							arrowDate = _.dateToVal(
								_.dateGetAdjacent(
									currentCalendarDate,
									12
								)
							);
							validness = _.dateIsValid(new Date(currYear+1,currMonth,1),args,true);
							break;
					}

					//kung yung at least yung last day nang prev or first day ng next man lang ay valid pwidi sya i doot doot

					var htmlString = '<a href=""class="'
						+ (!validness ? 'disabled ' : '')
						+_.calendarUiPrefix()+'navigation '
						+_.calendarUiPrefix()+'button '
						+_.calendarUiPrefix()+buttonClass+'" data-value="'+arrowDate+'">'
							+'<i class="'+_.calendarUiPrefix()+'symbol symbol '+symbolClass+'"></i>'
						+'</a>';


					return htmlString;
				}

				var butts = ['prev-year','prev-month','next-month','next-year'];

				butts.forEach(function(butt){
					if(
						(
							args.yearSkip
							&& (
								butt == 'prev-year'
								|| butt == 'next-year'
							)
						)
						|| (
							args.monthSkip
							&& (
								butt == 'prev-month'
								|| butt == 'next-month'
							)
						)
					){
						theUi.heading.append(generateArrow(butt));
					}
				});


				//title
				theUi.title = $(
					'<div data-toggle="dropdown" class="'
					+ _.calendarUiPrefix()+'title '
					+ _.calendarUiPrefix()+'dropdown-toggle"></div>'
				);
				theUi.heading.append(theUi.title);
				
					theUi.title.append(function(){

						return '<span class="'+_.calendarUiPrefix()+'month-text">'
							+_.monthFormatNamesShort[ currMonth ]
						+'</span>'
						+ ' <span class="'+_.calendarUiPrefix()+'year-text">'+currYear+'</span>'
						+ ' <i class="'+_.calendarUiPrefix()+'symbol symbol symbol-caret-down no-margin-x"></i>'
					
					});
				
				//dropdown

				theUi.dropdown = $('<ul data-dropdown-width="100%" class="'+_.calendarUiPrefix()+'dropdown dropdown dropdown-center-x dropdown-top-flush text-align-center"></ul>');
				// theUi.dropdown.

				theUi.heading.append(theUi.dropdown);

				theUi.dropdown.append(function(){

					return '<li class="'+_.calendarUiPrefix()+'current-month-year active">'
					+ '<a href="#" class="'+_.calendarUiPrefix()+'month" data-value="'+ _.dateToVal(currentCalendarDate) +'">'
					+ _.monthFormatNamesShort[ currMonth ]+ ' ' + currYear
					+ '</a>'
					+ '</li><li><hr class="dropdown-separator"></li>'
				
				});

				var dropdownInit;
				var dropdownLimit;

				if(args.dropdownYearSpan == 0 ){
					dropdownInit = currentCalendarDate.getMonth() * -1;
					dropdownLimit = 11 - currentCalendarDate.getMonth();
				} else{

					dropdownInit = parseInt(-12 * parseInt(args.dropdownYearSpan));
					dropdownLimit = parseInt(12 * parseInt(args.dropdownYearSpan));
				}

				//update dropdown
				 theUi.dropList = [];
				for(i = dropdownInit; i <= dropdownLimit; i++){

					
						var listItemDate = _.dateGetAdjacent(
							currentCalendarDate,
							i
						);


						var dateForValidation = (function(){
							var toReturn;

							if(i >= 0 ){ //first day of month
								// console.log('kinabukasan sya');
								toReturn = new Date(listItemDate.getFullYear(),listItemDate.getMonth(),1)
							}else{ //last day of month

								// console.log('nakaraan sya');
								toReturn = new Date(listItemDate.getFullYear(),listItemDate.getMonth()+1,0)
							}

							return toReturn
						}())
						// console.warn(i,'\nkwan ano ni\n',listItemDate,dateForValidation);


						if(_.dateIsValid(dateForValidation,args,true)){
			
							var currClass = (i == 0) ? 'active' : '';
			
							theUi.dropdown.append(function(){
								return '<li class=" '+currClass+'">'
									+ '<a href="#" class="'+_.calendarUiPrefix()+'month" data-value="'+ _.dateToVal(listItemDate) +'">'
									+ _.monthFormatNamesShort[ listItemDate.getMonth() ]+ ' ' + listItemDate.getFullYear()
									+ '</a>'
									+ ((listItemDate.getMonth() == 11 && i !== dropdownLimit) ? '</li><li><hr class="dropdown-separator">' : '')
								+ '</li>';
							});
						}

				}



			//generate grid

			theUi.grid = $('<div class="'+_.calendarUiPrefix()+'grid"></div>');

			theUi.container.append(theUi.grid);


				function generateBlock(date,customClass){
					customClass = customClass || '';
					return '<a href="#" data-value="'+ _.dateToVal(date) +'" class="'
					+_.calendarUiPrefix()+ 'block '
					+_.calendarUiPrefix()+'date '
					+customClass
					+'"><span>'
						+ date.getDate()
					+ '</span></a>';

				}


				//days heading
					theUi.days = $('<div class="'+_.calendarUiPrefix()+'days"></div>');

					theUi.grid.append(theUi.days);
					var daysHTML = '';
					var dayToRetrieve = parseInt(args.startDay);

					for(i = 0; i < 7; i++){

						if(dayToRetrieve > 6){
							dayToRetrieve -= 7;
						}


						daysHTML += '<div class="'
						+_.calendarUiPrefix()+'block '
						+_.calendarUiPrefix()+'day">'
							+_.dayFormatNamesShorter[dayToRetrieve]
						+'</div>';

						dayToRetrieve++;
					}

					theUi.days.html(daysHTML);

				//days

				theUi.dates = $('<div class="'+_.calendarUiPrefix()+'dates"></div>');
				theUi.grid.append(theUi.dates);

				//previous month
					var currPrevLastDate = (function(){
						return new Date(currYear, currMonth, 0)
					}());

					

					var currPrevLastDateDay = currPrevLastDate.getDay();
					
					var freeGridSpacePrev = (currentCalendarDate.getDay() - parseInt(args.startDay) + 7) % 7;

					var currPrevLastDayOnStart = currPrevLastDateDay == 6 ? 0 : (currPrevLastDateDay + 1);
					
					if(
						currPrevLastDayOnStart !== parseInt(args.startDay)
					){ //if it doenst take its own row of shit

						// i = 0; i <= freeGridSpacePrev; i++
						// @TODO AAAAAAAAAAAA FIGURE OUT THE MATH
						// for( dayLoopI = currPrevLastDateDay; dayLoopI >= (parseInt(args.startDay)); dayLoopI--){
						// for(i = 0; i < 7; i++){
						for(i = 0; i < freeGridSpacePrev; i++){

							
								var offset = (currPrevLastDate.getDate() - i);

								var loopDatePrev = new Date(
									currPrevLastDate.getFullYear(),
									currPrevLastDate.getMonth(),
									offset
								);
			
								var dateBlockPrev = generateBlock(
									loopDatePrev,
									(_.calendarUiPrefix()+ 'block-adjacent ') + (!_.dateIsValid(loopDatePrev,args) ? 'disabled' : '')
								);
			
			
			
								//prepend because we loopped this bitch in reverse
								theUi.dates.prepend(dateBlockPrev);
		
						}
		
					}

				//curr month
					var currLastDate = new Date(currYear, currMonth+1, 0);


					for(i = 1; i <= currLastDate.getDate(); i++) {
						var dateBlockCurr = generateBlock(
							new Date(currYear,currMonth,i),
							(!_.dateIsValid(new Date(currYear,currMonth,i),args)) ? 'disabled' : ''
						);


						theUi.dates.append(dateBlockCurr);
					}

				//next month just fill the shit

					
					var currNextFirstDay = new Date(currYear, currMonth+1, 1).getDay();

					var freeGridSpaceNext = (7 - currNextFirstDay + parseInt(args.startDay)) % 7;

					if(currNextFirstDay !== parseInt(args.startDay)){

						for(i = 1; i <= freeGridSpaceNext; i++){

							var loopDateNext = new Date(currYear, currMonth+1, i);

							var dateBlockNext = generateBlock(
								loopDateNext,
								(_.calendarUiPrefix()+ 'block-adjacent ') + (!_.dateIsValid(loopDateNext,args) ? 'disabled' : '')
							);

							theUi.dates.append(dateBlockNext);
						}
					}
		}
	}

		//updates both input field and UI
	frameWork.updateCalendar = function(inputCalendar,newValue,valueForUi){


		var theValue = newValue || _.dateToVal(inputCalendar.val());

		valueForUi = valueForUi || theValue || _.dateToVal(new Date());
		// ignoreInput = ignoreInput || false;

		var arr =  {
			class: inputCalendar.attr('class'),
			startDay: inputCalendar.attr('data-calendar-start-day'), // 0,1,2,3,4,5,6
			min: inputCalendar.attr('data-calendar-min') || inputCalendar.attr('min'),
			max: inputCalendar.attr('data-calendar-max') || inputCalendar.attr('max'),
			dropdownYearSpan: inputCalendar.attr('data-calendar-dropdown-year-span'),
			disabledDates: inputCalendar.attr('data-calendar-disabled-dates'),
			textInput:inputCalendar.attr('data-calendar-text-input'),
			monthSkip:inputCalendar.attr('data-calendar-month-skip'),
			yearSkip:inputCalendar.attr('data-calendar-year-skip'),
		};

		var defaults = {
			class: '',
			startDay: 0, // su,mo,tu,we,th,fr,sa,
			min: null,
			max:null,
			dropdownYearSpan: 0,
			disabledDates: '',
			textInput:false,
			monthSkip:true,
			yearSkip:false,
		};
		
		var args = _.parseArgs(arr,defaults);

		if(parseInt(arr.dropdownYearSpan) <= 0){
			args.dropdownYearSpan = defaults.dropdownYearSpan;
		}

		args.startDay = parseInt(args.startDay) % 7;

		if(_.dateIsValid(theValue,args) || !theValue){
			//set up calendar
			_.createCalendarUi(inputCalendar,valueForUi,args);
		}


		if(theValue){


			//update the actual butt
			inputCalendar.attr('value',theValue);
			inputCalendar.val(theValue);

			inputCalendar.parent().find('.input-calendar-ui-date').removeClass('active');
			inputCalendar.parent().find('.input-calendar-ui-date[data-value='+_.dateToVal(theValue)+']').addClass('active');

			// if(!ignoreInput){
				inputCalendar.parent().find('.input-calendar-ui-input input').attr('value',_.dateToHuman(theValue));
				inputCalendar.parent().find('.input-calendar-ui-input input').val(_.dateToHuman(theValue));
			// }
		}

		
		//ATODO UPDATE SETUP HERE
		//update fake hoes

		

	}

	_.tagsInputString = '__fw_input__';

	//because input field is gonna go in between for backspacing capabilities
	_.tagsToParse = function(value,returnWithInput){
		returnWithInput = (returnWithInput !== false) || (returnWithInput == true);
		toReturn = Array.isArray(value) ? value : value.split(',') || [];

		
		//check for ya boi
		toReturn.forEach(function(tag,i){
			
			if(!tag || tag == ''){
				toReturn.splice(i,1);
			}else if(tag === _.tagsInputString && !returnWithInput){
				toReturn.splice(i,1);
			}
		})

		if(returnWithInput && toReturn.indexOf(_.tagsInputString) < 0){
			toReturn.push(_.tagsInputString );
		}

		//remove duplicates
		toReturn = toReturn.reduce(function(acc,tag){
			
			if(!acc.includes(tag)){
				acc.push( tag );
			}

			
			return acc;
		},[]);


		return toReturn;

	}


	//because input field is gonna go in between for backspacing capabilities
	_.tagsToVal = function(value,returnWithInput){
		value = value || '';
		return  _.tagsToParse(value,returnWithInput).join(',');

	}

		
	_.tagsUiPrefix = function(noDash) {
		noDash = noDash || false;
		return noDash ? 'input-tags-ui' : 'input-tags-ui-';
	};
	

	_.createTagsUi =  function(inputTags,valueForUi,inputText,args){
		if(inputTags){
		
			valueForUi = valueForUi || _.tagsToVal(inputTags.val()) || '';
			inputText = inputText || false;

			var theUi = {};

			theUi.container = inputTags.closest('.'+_.tagsUiPrefix(true));
			


			if( !theUi.container.length ){
				inputTags.wrap($('<div class="'+frameWork.settings.uiClass+' '
				+inputTags.attr('class').replace( 'input-tags',_.tagsUiPrefix(true) )
				+'"></div>'));
				theUi.container = inputTags.closest('.'+_.tagsUiPrefix(true));
			}

			if(!theUi.container.hasClass('input')) {
				theUi.container.addClass('input');
			}

			
			theUi.container.addClass(args.multipleLines ? _.tagsUiPrefix()+ 'multiple' : _.tagsUiPrefix()+'single');


			if(args.width) {
				theUi.container.css('width',args.width);
			}
			//idk it never exists on initial so we dont have to do weird div wraping catches here
			theUi.input = theUi.container.children('.'+_.tagsUiPrefix()+'input');

			theUi.wrapper = theUi.container.children('.'+_.tagsUiPrefix()+'wrapper');

			if(!theUi.wrapper.length) {
				theUi.container.append('<div class="'+_.tagsUiPrefix()+'wrapper"></div>');
				theUi.wrapper = theUi.container.children('.'+_.tagsUiPrefix()+'wrapper');
			}

			theUi.input = theUi.wrapper.children('.'+_.tagsUiPrefix()+'input');

			if(!theUi.input.length) {
				theUi.wrapper.append('<span contenteditable="true" type="text" class="input '+_.tagsUiPrefix()+'input"></span>');
				theUi.input = theUi.wrapper.children('.'+_.tagsUiPrefix()+'input');
			}

			//nearest fw-ui parent will actually do tgoggl for bby because baby cant stand up on its own
			if(inputTags.attr('data-toggle')) {
				theUi.input.attr('data-toggle',inputTags.attr('data-toggle'));
			}

			if(frameWork.isDisabled(inputTags)){
				theUi.input.addClass('disabled');
			}

			if(args.callbackOnKeyup) {
				
				var fOnKeyUp = new Function(args.callbackOnKeyup);
				theUi.input.on('keyup',fOnKeyUp)
			}

			
			theUi.wrapper.children('.'+_.tagsUiPrefix()+'tag').remove();
			var valArr = _.tagsToParse(valueForUi,true);

			var inputIn = valArr.indexOf(_.tagsInputString);

				theUi.input.attr('data-value',inputIn);

			//validate tags
			var valArr = valArr.reduce(function(acc,tag){
				if(!acc.includes(tag)){
					acc.push(tag);
				}
				return acc;
			},[]);


			valArr.forEach(function(tag,i){
				//get index of input
				if(tag !== _.tagsInputString){

					var tagHtmlFn = function(){
						return '<span class="'+_.tagsUiPrefix()+'tag" ><span data-value="'+i+'"  class="'+_.tagsUiPrefix()+'tag-text">'+tag+'</span><a data-value="'+i+'" class="'+_.tagsUiPrefix()+'tag-close" href="#"><i class="symbol symbol-close"></i></a></span>';
					};

					if(i < inputIn ){
						theUi.input.before(tagHtmlFn);
					}else{
						theUi.wrapper.append(tagHtmlFn);
					}
		
				}
			})


			//attribues
			inputTags.each(function(){
				$.each(this.attributes,function(){
					if(this.specified) {
						if(this.name.includes('data') && !this.name.includes('data-tags')  && !this.name.includes('data-toggle') && !this.name.includes('data-value-ui')){
							theUi.container.attr(this.name,this.value);
						}

					}
				})
			})

			inputTags.attr('data-value-ui',valueForUi);


			//keep that shoit to the right
			theUi.container.scrollTo(theUi.input,'x');
			
			//jquery u duuumb
			if(inputText){
				theUi.input.text(inputText);
				theUi.input.focus();
			}
		}
	}

	frameWork.updateTags = function(inputTags,allowFilter,newValue,valueForUi,inputText){
		
		var theValue = newValue || inputTags.val() || '';

		inputText = inputText || false;

		valueForUi = valueForUi || theValue || '';

		allowFilter = (allowFilter != false);
		

		var arr =  {
			width: inputTags.attr('data-tags-width'),
			callback: inputTags.attr('data-tags-callback'),
			callbackOnKeyup: inputTags.attr('data-tags-callback-on-keyup'),
			callbackNameFilter: inputTags.attr('data-tags-callback-name-filter'),
			multipleLines: inputTags.attr('data-tags-multiple-lines')
		};

		var defaults = {
			width: 'auto',
			callback: null,
			callbackNameFilter: null,
			callbackOnKeyup : null,
			multipleLines: false
		};
		
		var args = _.parseArgs(arr,defaults);


		if(inputTags){


			if(args.callbackNameFilter && allowFilter){
				let fnToFilter;

				try {
					fnToFilter = eval(args.callbackNameFilter);
				} catch(err) {
				}


				if ( typeof(fnToFilter) === 'function' ){

					function applyFilter(valueToFilter,filterFnName){
						const inputIndex = _.tagsToParse(valueToFilter).indexOf(_.tagsInputString);
						const noInputValueToFilter = (function(){ return _.tagsToVal(valueToFilter,false)}());

						// turn to array ya bopi without the input tag string
						var toReturn =  _.tagsToParse( eval(filterFnName +'("'+ noInputValueToFilter +'")'), false );

						// console.log(
						// 	'index of input\n',inputIndex,
						// 	'\n\n\nfiltered and ready for splice\n',toReturn,
						// 	'\n\n\npassed to the fil;ter\n',_.tagsToVal(valueToFilter,false),
						// 	'\n\n\nrar array\n',_.tagsToParse(valueToFilter),
						// 	'\n\n\n no input field\n',noInputValueToFilter,_.tagsToVal(valueToFilter,false),
						// 	'\n\n\n no input fieldas array\n',_.tagsToParse(valueToFilter,false),
						// 	'\n\n\n string for eval\n', ( filterFnName +'("'+ noInputValueToFilter +'")'),
						// 	'\n\n\neval\n',  eval(filterFnName +'("'+ noInputValueToFilter +'")'),
						// 	'whAT ETHE FUCK'
						// );

						if(inputIndex > -1){
							toReturn.splice(
								((inputIndex < _.tagsToParse(valueToFilter).length - 1) ) ? inputIndex : toReturn.length,
								0,
								_.tagsInputString
							);
						}

						return _.tagsToVal(toReturn);
					}

					
					theValue = applyFilter(theValue,args.callbackNameFilter);
					valueForUi = applyFilter(valueForUi,args.callbackNameFilter);
					
				}
			}

			
			_.createTagsUi(inputTags,_.tagsToVal(valueForUi),inputText,args);
		
			//update the actual butt
			inputTags.attr('value',_.tagsToVal(theValue,false));
			inputTags.val(_.tagsToVal(theValue,false));

		
			//ATODO UPDATE SETUP HERE
			//update fake hoes
			if(args.callback) {


				let fn;

				try {
					fn = eval(/^[^(]+/.exec(args.callback)[0])
				} catch(err) {
				}

				if ( typeof(fn) === 'function' ){
					// $(window).on('load',function(){
						eval(args.callback);
					// });
				}

				// var f = new Function(args.callback);
				// if ( typeof(eval(/^[^(]+/.exec(args.callback)[0])) === 'function' ){
				// 	$(document).ready(function(){
				// 		eval(args.callback);
				// 	});
				// }
			}
		}

		

	}

	frameWork.isDisabled = function(elem){
		
		var disableClasses = [
			'table-row-disabled',
			'tab-disabled',
			'btn-disabled',
			'input-disabled',
			'disabled',
		],
		toReturn = false;

		if(elem.closest('[disabled]').length || elem.is(':disabled') ){
			toReturn = true;
		}

		disableClasses.forEach(function(classString){
			if(elem.closest('.'+classString).length && !toReturn){
				toReturn = true;
			}
		});
		
		return toReturn;
	}


	//will run. right away. boi
	//lazyload
	frameWork.loadImages = function() {
		//css images
		// images
		$('*[data-src]').each(function () {
			// $('img, picture > source')

			var img = $(this),
					imgSrc = $(this).attr('data-src'),
					imgSrcset = $(this).attr('data-srcset');

			if(
				img.is('img')
				|| ( img.is('source') && img.closest('picture').length )
			){
				if(_.strGetFileExtension(img.attr('data-src')) == 'svg' ){
					var imgID = img.attr('id');
					var imgClass = img.attr('class');
					$.get(imgSrc, function(data) {
						var svg = $(data).find('svg');
						if (typeof imgID !== 'undefined') {
							svg = svg.attr('id', imgID);
						}
						if (typeof imgClass !== 'undefined') {
							svg = svg.attr('class', imgClass + ' replaced-svg');
						}
						svg = svg.removeAttr('xmlns:a');
						img.replaceWith(svg);
					}, 'xml');
				}else {
					(imgSrc !== 'undefined') && img.attr('src', imgSrc);
					(imgSrcset !== 'undefined') && img.attr('srcset', imgSrcset);
				}
			}else{
				img.css('background-image', 'url(' + imgSrc + ')');
			}

			img.addClass('lazy-loaded');
		});

		//css images
		$('html').addClass('lazy-initialized');
	}

	frameWork.settings.lazyLoad && _.fns_on_rightAway.push(frameWork.loadImages);

	frameWork.toolTip = {};

	frameWork.createToolTip = function(triggerer) {
		if(triggerer) {

			frameWork.destroyToolTip();
			
			var arr =  {
				placement: triggerer.attr('data-tooltip-placement'),
				badge: triggerer.attr('data-tooltip-badge'),
				badgeBg: triggerer.attr('data-tooltip-badge-background'),
				badgeSize: triggerer.attr('data-tooltip-badge-size'),
				content: triggerer.attr('data-tooltip-content'),
				classes: triggerer.attr('data-tooltip-classes'),
				centerX: triggerer.attr('data-tooltip-center-x'),
				centerY: triggerer.attr('data-tooltip-center-y'),
				x: triggerer.attr('data-tooltip-x'),
				y: triggerer.attr('data-tooltip-y'),
				width: triggerer.attr('data-tooltip-width'),
				allowInteraction: triggerer.attr('data-tooltip-allow-interaction')
			};

			var defaults = {

				placement: 'left',
				badge: false,
				badgeBg: 'primary',
				badgeSize: '',
				classes: '',
				content: '<em class="color-neutral tooltip-placeholder">No info...</em>',
				centerX: false,
				centerY: false,
				width: null,
				allowInteraction: false

			};
			
			var args = _.parseArgs(arr,defaults);

			$('body').append(function(){
				var html = '<div class="tooltip tooltip-'+ args.placement+( args.allowInteraction ? ' tooltip-allow-interaction' : '' )+'"';
				
				if(args.width) {
					html += ' style="width:'+args.width+';"';
				}
				
				html+='>';


				if( args.badge ) {
					html += '<span class="badge tooltip-badge';
					if(args.badgeSize == 'small' || args.badgeSize == 'large' ) {
						html += ' badge-'+args.badgeSize;
					}
					if(args.badgeBg) {
						if(_.palette.includes(args.badgeBg)) {
							html += ' badge-'+args.badgeBg;
						}else{

							html += '" style="background-color:'+args.badgeBg+';';
						}
					}
					
					html += '"></span>'
				}
				
				html += '<div class="tooltip-content '+ args.classes + '">';

					html += args.content

				html += '</div></div>';

				return html;
			});

			var toolTip = $('body').children('.tooltip:last-child').first();
			
			frameWork.toolTip.current = toolTip;
			frameWork.toolTip.activeTriggerer = triggerer;
			frameWork.toolTip.args = args;

			var triggererProps = {
				top: triggerer.offset().top,
				left: triggerer.offset().left,
				height: triggerer.outerHeight(),
				width: triggerer.outerWidth(),
			};

			var origin = {
				x: function(){
					var toReturn = triggererProps.left + (triggererProps.width * .5); //top and bottom

					if(!args.x) {

						if(!args.centerX){
							switch(args.placement){
								case 'right':
									toReturn = triggererProps.left + triggererProps.width;
									break;
								case 'left':
									toReturn = triggererProps.left;
									break;
							}
						}

					}else{
						toReturn = parseFloat(args.x);
					}
					
					return toReturn;
				},
				y: function(){
					var toReturn = triggererProps.top + (triggererProps.height * .5); // left and right
					if(!args.y) {

						if(!args.centerY){
							switch(args.placement){
								case 'bottom':
									toReturn = triggererProps.top + triggererProps.height;
									break;
								case 'top':
									toReturn = triggererProps.top;
									break;
							}
						}

					}else{
						toReturn = parseFloat(args.y);
					}


					return toReturn;
				}
			}

			frameWork.positionToolTip(origin.x(),origin.y());

			toolTip.show()
			toolTip.addClass('active');

		}

	}

	frameWork.destroyToolTip = function(){
		if(frameWork.toolTip.current) {
			frameWork.toolTip.current.remove();
		}
		frameWork.toolTip.current = null;
		frameWork.toolTip.activeTriggerer = null;
		frameWork.toolTip.args = null;
	}
	_.fns_on_resize.push(frameWork.destroyToolTip);

	//only use when the tooltip is finally active
	frameWork.positionToolTip = function(posX,posY){

		if(frameWork.toolTip.current && frameWork.toolTip.args){
		
			var toolTip = frameWork.toolTip.current;
			var args = frameWork.toolTip.args;

			var toolPoint = parseFloat(window.getComputedStyle( toolTip[0], ':before').getPropertyValue('width'));
				toolPoint = Math.sqrt((toolPoint * toolPoint) * 2) * .5;
				isNaN(toolPoint) && (toolPoint = 15);
				
			var toolTipProps = {
				height: toolTip.outerHeight(),
				width: toolTip.outerWidth(),
			};

			var toolTipBadge = toolTip.find('.tooltip-badge').first();

			var off = {
				x: function(){
					var toReturn = toolTipProps.width * -.5; //top and bottom
					var badgeOffset = 0;

					switch(args.placement){
						case 'right':
							toReturn = toolPoint;
								break;
						case 'left':
							toReturn = -(toolTipProps.width + toolPoint);
							break;
					}

					if(
						(toolTipBadge.length > 0)
						&& (
							(
								args.placement == 'left'
								|| args.placement == 'right'
							)
						)
					) {
						badgeOffset = (args.placement == 'left' ) ? (toolTipBadge.outerWidth() * -.5) : (toolTipBadge.outerWidth() * .5);
					}
					

					toReturn += badgeOffset;
					
					return toReturn;
				},
				y: function(){
					var toReturn = toolTipProps.height * -.5; // left and right
					var badgeOffset = 0;

					switch(args.placement){
						case 'bottom':
							toReturn = toolPoint;
							break;
						case 'top':
							toReturn = -(toolTipProps.height + toolPoint);
							break;
					}

					if(
						(toolTipBadge.length > 0)
						&& (
							args.placement == 'top'
							|| args.placement == 'bottom'
						)
					) {
						badgeOffset = (args.placement == 'top' ) ? (toolTipBadge.outerHeight() * -.5) : toolTipBadge.outerHeight() * .5;
					}

					toReturn += badgeOffset;

					return toReturn;
				}
			}



			toolTip.css({
				// 'left': posX,
				// 'top': posY
				'left': posX + off.x(),
				'top': posY + off.y()
			})
		}
			
	}


	frameWork.createModal = function(triggerer,mode){
		mode = mode || 'modal'
		
		var contentWrap =  _.getTheToggled(triggerer,mode);

		frameWork.destroyModal(null,mode);

		if(contentWrap) {

			var arr =  {
				header:
					contentWrap.attr('data-'+mode+'-title')
					|| (triggerer && (triggerer.attr('data-'+mode+'-title'))),
				close:
					contentWrap.attr('data-'+mode+'-close')
					|| (triggerer && (triggerer.attr('data-'+mode+'-close'))),
				disableOverlay:
					contentWrap.attr('data-'+mode+'-disable-overlay')
					|| triggerer && ((triggerer.attr('data-'+mode+'-disable-overlay'))),
				maxWidth:
					contentWrap.attr('data-'+mode+'-max-width')
					|| (triggerer && (triggerer.attr('data-'+mode+'-max-width'))),
				callback:
					contentWrap.attr('data-'+mode+'-callback')
					|| (triggerer && (triggerer.attr('data-'+mode+'-callback'))),
				classes:
					contentWrap.attr('data-'+mode+'-classes')
					|| (triggerer && (triggerer.attr('data-'+mode+'-classes'))),
				closeClasses:
					contentWrap.attr('data-'+mode+'-close-classes')
					|| (triggerer && (triggerer.attr('data-'+mode+'-close-classes'))),
				align:
					contentWrap.attr('data-'+mode+'-align')
					|| (triggerer && (triggerer.attr('data-'+mode+'-align'))),
			};

			_[mode+'ActiveElm'] = contentWrap;

			var defaults = {
				header: '',
				close: true,
				disableOverlay: true,
				maxWidth: null,
				callback: null,
				classes: '',
				closeClasses: '',
				align: 'left'
			};

			var actualId = 'fw-'+mode;

			var args = _.parseArgs(arr,defaults);

			switch(mode){
				case 'modal':
					args.align = false;
					break;
			}

			var id = contentWrap.attr('id') || actualId;

			(id !== '#'+actualId) && _.changeHash(id);

			$('body').append(function(){
				var html;
				switch(mode){
					case 'board':

						var html = '<div id="'+actualId+'" class="'+mode+'-wrapper '+ args.classes;

							if(args.align){
								html+= ' '+mode+'-'+args.align;
							}


							html +='">';
							//overlay 
							html += '<a href="#" class="'+mode+'-close-overlay" '+( args.disableOverlay == false ? 'data-toggle="'+mode+'-close"' : '' )+'></a>';


							if(args.close !== false) {
								html += '<div class="'+mode+'-close-wrapper"><a href="#" class="'+mode+'-close '+( args.closeClasses ? args.closeClasses : mode+'-close-default'  ) +'" data-toggle="'+mode+'-close"><i class="symbol symbol-close "></i></a></div>';
							}

							html += '<div class="'+mode+'-popup">';

								if(args.header) {
									html += '<div class="'+mode+'-header"><h1 class="'+mode+'-title">'+ args.header +'</h1></div>';
								}

								html += '<div class="'+mode+'-popup-content"></div>';
							
							
							
							html += '</div>';
					
						html +='</div>';
						break;
						
					case 'modal':
						var html = '<div id="'+actualId+'" class="'+mode+'-wrapper '+ args.classes;

							if(args.align){
								html+= ' '+mode+'-'+args.align;
							}


							html +='">';
							//overlay 
							html += '<a href="#" class="'+mode+'-close-overlay" '+( args.disableOverlay == false ? 'data-toggle="'+mode+'-close"' : '' )+'></a>';

							html += '<div class="'+mode+'-popup">';

								if(args.header) {
									html += '<div class="'+mode+'-header"><h1 class="'+mode+'-title">'+ args.header +'</h1></div>';
								}

								if(args.close !== false) {
									html += '<a href="#" class="'+mode+'-close '+args.closeClasses +'" data-toggle="'+mode+'-close"><i class="symbol symbol-close "></i></a>';
								}

								html += '<div class="'+mode+'-popup-content"></div>';
							
							
							
							html += '</div>';
						
						html +='</div>';
						break;
				}

				return html;
				
			});

			var modal = $('body').children('.'+mode+'-wrapper').first();

				_.initTrumbo(modal);

				_[mode+'ActiveElm'].contents().appendTo($('body').children('.'+mode+'-wrapper').find('.'+mode+'-popup-content').first());

				$('body').addClass('body-'+mode+'-active');

				if(args.maxWidth) {
					//all
					modal.find('.'+mode+'-popup').css('max-width',args.maxWidth)

					//bboard
					modal.find('.'+mode+'-close-wrapper').css('max-width',args.maxWidth)
				}

				if(args.callback) {
					let fn;

					try {
						fn = eval(/^[^(]+/.exec(args.callback)[0])
					} catch(err) {
					}

					if ( typeof(fn) === 'function' ){
						eval(args.callback);
					}
				}

				modal.fadeIn()
				modal.addClass('active');
		}
	}

	frameWork.destroyModal = function(removeHash,mode){
		mode = mode || 'modal';

		$('body').children('.'+mode+'-wrapper').find('.'+mode+'-popup-content').first().contents().appendTo(_[mode+'ActiveElm']);
		
		_[mode+'ActiveElm'] = false;
		
		$('body').children('.'+mode+'-wrapper').fadeOut().removeClass('active').remove();
		$('body').removeClass('body-'+mode+'-active');

		if(removeHash) {
			_.changeHash('');
		}
	}

	frameWork.createBoard = function(triggerer){
		frameWork.createModal(triggerer,'board');
	}

	frameWork.destroyBoard = function(removeHash){
		frameWork.destroyModal(removeHash,'board');
	}


	frameWork.closeDropdowns = function(currentDropdown) {
		currentDropdown = currentDropdown || false;

		if(currentDropdown){
			$('.dropdown').not(currentDropdown).each(function(){
				if(!currentDropdown.closest($(this)).length) {
					$(this).removeClass('open')
				}
			})
		} else { //@TODO. wtf jquery
			$('.dropdown').removeClass('open');
		}
	}

	frameWork.setDropdown = function(selector,triggerer,mode) {
		selector = selector || false;
		mode = mode || 'toggle';

		if(selector){

			var width =  selector.attr('data-dropdown-width') || triggerer.attr('data-dropdown-width') || null;
			
			if(width) {
				selector.css('width',width);
			}


			if(mode == 'toggle' || mode == 'open' ){

				$('*[data-toggle="dropdown"]').removeClass('open');
				
				frameWork.closeDropdowns(selector);
			}

			if(
				( selector.hasClass('open') && mode == 'toggle' )
				|| ( mode == 'close' )
			){

				selector.removeClass('open');  

			}else if(
				( !selector.hasClass('open') && mode == 'toggle' )
				|| ( mode == 'open' )
			){

				selector.addClass('open'); 

			}
		}

	}

	frameWork.toggleAccordion = function(triggerer,changeHash) {
		changeHash = !(changeHash) ? false : true;

		var selector =  _.getTheToggled(triggerer,'accordion');

		
		if( selector ){
			
			var ancGroup = selector.closest('.accordion-group');

			if(
				!(
					selector.hasClass('accordion-mobile')
					&& !frameWork.validateBr(_.br_mobile_max,'below')
				)
			){

				if(triggerer){

					var arr =  {
						changeHash:
						selector.attr('data-accordion-change-hash')
							|| (triggerer && (triggerer.attr('data-accordion-change-hash')))
					};
		
					var defaults = {
						changeHash: changeHash,
					};
		
					var args = _.parseArgs(arr,defaults);
				
					if(
						selector.hasClass('open')
						&& triggerer.hasClass('open')
					){

						if(
							!ancGroup.length
							|| (ancGroup.length && !ancGroup.hasClass('accordion-group-no-close'))
						){


							// selector.slideUp(); 
							triggerer.removeClass('open'); 
							selector.removeClass('open'); 
							
							if(args.changeHash){
								_.changeHash('');
							}
						}

					}else{

						if(ancGroup.length && !ancGroup.is('.accordion-group-multiple')) {
							// selector.closest('.accordion-group').find('.accordion').slideUp(); 
							ancGroup.find('[data-toggle="accordion"]').removeClass('open'); 
							ancGroup.find('.accordion').removeClass('open'); 
						}

						// selector.slideDown(); 
						triggerer.addClass('open'); 
						selector.addClass('open'); 

						if(args.changeHash){
							_.changeHash(selector.attr('id'));
						}
					}
				}else{

					selector.siblings('.accordion').removeClass('open');
					ancGroup.children('.accordion').removeClass('open');


					var probablyToggle = $('[data-toggle="accordion"][href="#'+selector.attr('id')+'"], [data-toggle="accordion"][data-href="#'+selector.attr('id')+'"]');
					probablyToggle.siblings('[data-toggle="accordion"]').removeClass('open');
					probablyToggle.closest('.accordion-group').children('[data-toggle="accordion"]').removeClass('open');
					
					selector.addClass('open'); 
					probablyToggle.addClass('open');

					$([document.documentElement, document.body]).animate({
						scrollTop: selector.offset().top
					}, 500);
				}
			}
		}
	}

	frameWork.readyGrid = function(){

		$('.module-grid:not(.module-grid-custom)').each(function(){
			frameWork.initGrid($(this));
		});
	}
	_.fns_on_rightAway.push(frameWork.readyGrid);
	_.fns_on_resize.push(frameWork.readyGrid);



	frameWork.readyCalendar = function(){

		$('.input-calendar').each(function(){
			frameWork.updateCalendar($(this));
		});
	}
	_.fns_on_rightAway.push(frameWork.readyCalendar);


	frameWork.readyTags = function(){

		$('.input-tags').each(function(){
			frameWork.updateTags($(this));
		});
	}
	_.fns_on_load.push(frameWork.readyTags);
	_.fns_on_resize.push(frameWork.readyTags);

	

	_.toggleGroup = function(triggerer,prefix,resetterClass,siblingSelector){
		prefix = prefix || 'btn';
		resetterClass = resetterClass || prefix+'-group-toggle-reset';
		siblingSelector = siblingSelector || '.'+'btn';
		if(triggerer){

			triggerer.siblings('.'+resetterClass).removeClass('active');

				console.log(triggerer.siblings('active'));

			if(
				(!triggerer.closest('.'+prefix+'-group-toggle-multiple').length)
				|| (triggerer.hasClass(resetterClass))
			){
				triggerer.siblings(siblingSelector).removeClass('active');
			}

			if(
				triggerer.closest('.'+prefix+'-group-toggle-multiple').length
				&& triggerer.siblings('.active').length > 0
			){

				triggerer.toggleClass('active');
			}else{

				triggerer.addClass('active');
			}

		}
	}
	_.initTrumbo = function(selector){

		if($.trumbowyg){


			selector = selector || document.body;

			$(selector).find('.input-trumbowyg:not(.input-trumbowyg-custom)').each(function(){
				
				if(!($(this).closest('.modal').length > 0)) { //catch dynamo trumbobois
	
	
					//load icons svg into dom because what a bitch
					if(!$('#'+_.trumboPrefix+'icons').length){
						$(document.body).prepend('<div id="'+_.trumboPrefix+'icons">'+frameWork.trumbowyg.iconsMarkup+'</div>');
					}
	
					frameWork.trumbowyg.defaults.prefix = frameWork.trumbowyg.defaults.prefix || _.trumboPrefix;
	
					$(this).trumbowyg('destroy');
					$(this).trumbowyg(frameWork.trumbowyg.defaults);
				}
			})
		}
	}
	_.fns_on_load.push(_.initTrumbo);

	

	$(window).on('hashchange',function(){
		frameWork.settings.initializeModal && frameWork.createModal();
		frameWork.settings.initializeBoard && frameWork.createBoard(null,'board');
		frameWork.settings.initializeAccordion && frameWork.toggleAccordion();
	});



	_.fns_on_rightAway.forEach(function(fn){
		fn();
	})

	$(document).ready(function(){


		_.fns_on_ready.forEach(function(fn){
			fn();
		})

		//key evenmts
		$('body').on('keydown',function(e){
			switch(e.keyCode){
				//shift
				case 16:
					_.modifierKeys.shift = true;
					break;
				// control
				case 17:
					_.modifierKeys.ctrl = true;
					break; 
				//op/alt
				case 18:
					_.modifierKeys.alt = true;
					break;
				//meta
				case 91:
					_.modifierKeys.meta = true;
					break;

			}
		});

		$('body').on('keyup',function(e){
			setTimeout(function(){

				switch(e.keyCode){
					//shift
					case 16:
						_.modifierKeys.shift = false;
						break;
					// control
					case 17:
						_.modifierKeys.ctrl = false;
						break; 
					//op/alt
					case 18:
						_.modifierKeys.alt = false;
						break;
					//meta
					case 91:
						_.modifierKeys.meta = false;
						break;
	
				}

			},100);
		});



		$('body').on('change','.input-calendar',function(e){
			const triggerer = $(e.target);
			frameWork.updateCalendar(triggerer);
		});

			$('body').on('click','a.input-calendar-ui-date',function(e){
				const triggerer = $(e.target);

				e.preventDefault();
				if( !frameWork.isDisabled(triggerer) ){
					var inputCalendar = triggerer.closest('.input-calendar-ui').find('.input-calendar').first();
					if(inputCalendar.length > -1 ){
						frameWork.updateCalendar(inputCalendar,triggerer.attr('data-value'),null)
					}
				}
			});

			$('body').on('click','a.input-calendar-ui-navigation,.input-calendar-ui-month',function(e){	
				const triggerer = $(e.target);

				e.preventDefault();
				if( !frameWork.isDisabled(triggerer) ){
					var inputCalendar = triggerer.closest('.input-calendar-ui').find('.input-calendar').first();
					if(inputCalendar.length > -1 ){
						frameWork.updateCalendar(inputCalendar,null,triggerer.attr('data-value'))
					}
				}
			});


			$('body').on('keyup','.input-calendar-ui-input input',function(e){
				const triggerer = $(e.target);

				if( frameWork.isDisabled(triggerer) ){
					e.preventDefault();
				}else{
				
					var inputCalendar = triggerer.closest('.input-calendar-ui').find('.input.input-calendar');


					var v = triggerer.val();
					if (v.match(/^\d{2}$/) !== null) {
						triggerer.val(v + '/');
					} else if (v.match(/^\d{2}\/\d{2}$/) !== null) {
						triggerer.val(v + '/');
					}

					var pattern = new RegExp(_.datetimeFormatPresets.HumanDate.pattern);

					var isValid = pattern.test(v);



					if(isValid){
						var theValue = v.split('/');

						var y = theValue[2] ||  '';
						var m = theValue[0] || '';
						var d = theValue[1] || '';
			
						var preParsedVal = y+'-'+m+'-'+d;
						

						frameWork.updateCalendar(inputCalendar,preParsedVal);
					}
				}
				
			});
		
		
		
		$('body').on('change','.input-tags',function(e){
			const triggerer = $(e.target);
			frameWork.updateTags(triggerer);
		});

		$('body').on('paste','.input-tags-ui .input-tags-ui-input',function(e){
			const triggerer = $(e.target);
			e.preventDefault();
			if( !frameWork.isDisabled(triggerer) ){
				triggerer.html(e.originalEvent.clipboardData.getData('text'));
				triggerer.blur();
			}
		});

			//blur bitch blurr
			$('body').on('blur','.input-tags-ui .input-tags-ui-input',function(e){	
				const triggerer = $(e.target);


				if( !frameWork.isDisabled(triggerer) ){

					var 
						inputTags = triggerer.closest('.input-tags-ui').children('.input-tags'),
						inputUiIndex = triggerer.attr('data-value'),
						currValue = _.tagsToParse(inputTags.val());


					
						currValue.splice(
							(parseInt(inputUiIndex)),
							0,
							triggerer.text().replace(',','')
						);

		
						triggerer.text('');

					// var newValue = _.arrMoveItem(currValue,parseInt(inputUiIndex), currValue.length -1);


					frameWork.updateTags(inputTags,true,currValue,currValue);
				}

			});


			
			//key events on focus bitch
			$('body').on('keydown','.input-tags-ui .input-tags-ui-input',function(e){	
				const triggerer = $(e.target);
				
				if( frameWork.isDisabled(triggerer) ){
					e.preventDefault();
				}else{
					var newValue,
					allowFilter = false,
					inputTags = triggerer.closest('.input-tags-ui').children('.input-tags'),
					inputUiIndex = triggerer.attr('data-value'),
					currValue = _.tagsToParse(inputTags.attr('data-value-ui'));
					inputTags.text(inputTags.text().replace(/\n|\r/g, "\\n"));

					setTimeout(function(){

					},100);

					switch(e.keyCode){

						//enter
						case 13:
							e.preventDefault();
							break;
						//comma
						case 188:
							if(!_.modifierIsActive()){
								allowFilter = true;
								e.preventDefault();
								currValue.splice(
									(parseInt(inputUiIndex)),
									0,
									triggerer.text().replace(',','')
								);

								triggerer.text('');
							}
							// currValue.splice()
							break;
						
						//left
						case 37:
							if(!triggerer.text()){
								e.preventDefault();
								_.arrMoveItem(
									currValue,
									(parseInt(inputUiIndex)),
									((parseInt(inputUiIndex) - 1 >= 0 ) ? parseInt(inputUiIndex) - 1 : 0 )
								);
							}

							break;

						//right
						case 39:
							if(!triggerer.text()){
								e.preventDefault();
								_.arrMoveItem(
									currValue,
									(parseInt(inputUiIndex)),
									((parseInt(inputUiIndex) + 1 <= (currValue.length - 1) ) ? parseInt(inputUiIndex) + 1 : currValue.length - 1 )
								);
							}
							break;

						//backspace
						case 8:
							if(!triggerer.text()){
								e.preventDefault();
								allowFilter = true;
								currValue.splice((parseInt(inputUiIndex)-1),1);
							}
							break;

						//delete
						case 46:
							if(!triggerer.text()){
								e.preventDefault();
								allowFilter = true;
								currValue.splice((parseInt(inputUiIndex)+1),1);
							}
							break;

					}


					newValue = _.tagsToVal(currValue);

					frameWork.updateTags(inputTags,allowFilter,newValue);
				}
			});


			//on click on the text, edit it via input and input should be focused and in place of the tag


			$('body').on('click','.input-tags-ui .input-tags-ui-tag-close',function(e){
				const triggerer = $(e.target);

				e.preventDefault();

				if( !frameWork.isDisabled($(this)) ){
					var inputTags = triggerer.closest('.input-tags-ui').children('.input-tags'),
						tagToRemove = triggerer.attr('data-value'),
						currValue = _.tagsToParse( inputTags.attr('data-value-ui') );
							currValue.splice(parseInt(tagToRemove),1);
						
					var	newValue  = _.tagsToVal(currValue);

					frameWork.updateTags(inputTags,true,newValue);
				}
			});


			$('body').on('click','.input-tags-ui .input-tags-ui-tag-text',function(e){
				const triggerer = $(e.target);
				
				e.preventDefault();

				if( !frameWork.isDisabled($(this)) ){
					var tagText = triggerer.text(),
						inputTags = triggerer.closest('.input-tags-ui').children('.input-tags'),
						tagToEdit = triggerer.attr('data-value'),
						currValue = _.tagsToParse( inputTags.attr('data-value-ui'),false );
							currValue.splice(parseInt(tagToEdit),1,_.tagsInputString);
						
					var	uiValue  = _.tagsToVal(currValue);

					frameWork.updateTags(inputTags,false,null,uiValue,tagText);
				}
			});
			

		$('body').on('click','*[data-toggle="accordion"]',function(e){
			const triggerer = $(e.target);
			
			e.preventDefault();
			if( !frameWork.isDisabled(triggerer) ){
				frameWork.toggleAccordion(triggerer,true);
			}
		});

		$('body').on('click','*[data-toggle="alert-close"]',function(e){
			const triggerer = $(e.target);
			
			e.preventDefault();

			if( !frameWork.isDisabled(triggerer) ){
				var selector =  _.getTheToggled(triggerer,'alert-close');

				if(selector) {
					selector.hide().remove();
				}
			}
		});

		$('body').on('click','*[data-toggle="alert-close-all"]',function(e){
			const triggerer = $(e.target);
			
			e.preventDefault();
			
			if( !frameWork.isDisabled(triggerer) ){
				$('.alert').each(function(){

					if($(this).find('[data-toggle="alert-close"]').length > -1) {
						$(this).hide().remove();
					}
				})
			}
		});


		$('body').on('focus','input[data-toggle="dropdown"],*[contenteditable][data-toggle="dropdown"]',function(e){
			const uiTrigger = $(e.target);
			
			if( frameWork.isDisabled(uiTrigger) ){
				uiTrigger.blur();
			}else{
				var triggerer = _.getTheUiTriggerer(uiTrigger);

				var selector =  _.getTheToggled(triggerer,'dropdown');

				if( selector ){
					frameWork.setDropdown(selector,triggerer,'open');
				}

				triggerer.addClass('focus');
			}

		});



		$('body').on('blur','input[data-toggle="dropdown"],*[contenteditable][data-toggle="dropdown"]',function(e){
			const uiTrigger = $(e.target);
			
			if( !frameWork.isDisabled(uiTrigger) ){
				var triggerer = _.getTheUiTriggerer(uiTrigger);

				var selector =  _.getTheToggled(triggerer,'dropdown');


				setTimeout(function(){
					if( selector ){
						frameWork.setDropdown(selector,triggerer,'close');
					}
				},200);
				triggerer.removeClass('focus');
			}
		});

		$('body').on('click','*[data-toggle="dropdown"]:not(input):not([contenteditable]):not(.fw-ui)',function(e){
			e.preventDefault();
			const uiTrigger = $(e.target);

			if( !frameWork.isDisabled(uiTrigger) ){
					
				var 
				triggerer = _.getTheUiTriggerer(uiTrigger);

				selector =  _.getTheToggled(triggerer,'dropdown');


				if( selector ){

					frameWork.setDropdown(selector,triggerer);

					
					if( selector.hasClass('open') ){
						// selector.slideUp(); 
						triggerer.closest('li,.nav-item').removeClass('open'); 
						triggerer.removeClass('open'); 
					}else{




						//close all the bois
						$('.dropdown').closest('li,.nav-item').removeClass('open'); 
						$('.dropdown').closest('li,.nav-item').find('.dropdown').removeClass('open');
						// $('.dropdown').slideUp();




						// if(selector.closest('li , .nav-item').length > -1) {
						// 	// selector.closest('li , .nav-item').siblings('li,.nav-item').find('.dropdown').slideUp(); 
						// 	triggerer.closest('li , .nav-item').siblings('li,.nav-item').find('*[data-toggle="dropdown"]').removeClass('open'); 
						// 	selector.closest('li , .nav-item').siblings('li,.nav-item').find('.dropdown').removeClass('open'); 
						// }

						// selector.slideDown(); 
						triggerer.closest('li,.nav-item').addClass('open'); 
						triggerer.addClass('open'); 
					}
				}
			}
		});

		$('body').on('click','.tab, .tab > *',function(e){
			const triggerer = $(e.target);

			if( frameWork.isDisabled(triggerer) ){
				e.preventDefault();
			}else{
				var theTab  = triggerer.closest('.tab');
				if( theTab.length && !theTab.hasClass('tab-disabled') ) {
					if(!theTab.hasClass('active')){
						theTab.siblings('.tab,li').removeClass('active');
						theTab.addClass('active');
					}
				}
			}
			
		});


		$('body').on('click','.btn-group-toggle > .btn',function(e){

			e.preventDefault();
			const triggerer = $(e.target);

			if( !frameWork.isDisabled(triggerer) ){

				_.toggleGroup(triggerer,'btn');
			}
		});

		$('body').on('click','.list-group-toggle .list-group-item,.list-group-toggle li',function(e){

			e.preventDefault();
			const triggerer = $(e.target);

			if( !frameWork.isDisabled(triggerer) ){
				
				_.toggleGroup(triggerer,'list',null,'li, .list-group-item');
			}
		});
		


		$('body').on('click','*[data-toggle="tooltip-click"]',function(e){
			const triggerer = $(e.target);

			e.preventDefault();
			if( !frameWork.isDisabled(triggerer) ){
				frameWork.createToolTip(triggerer);
			}
		});



		$('body').on('mouseenter','*[data-toggle="tooltip-hover"]',function(e){
			const triggerer = $(e.target);

			if( frameWork.isDisabled(triggerer) ){
				e.preventDefault();
			}else{
				frameWork.createToolTip(triggerer);
			}
		});

		$('body').on('mouseleave','*[data-toggle="tooltip-hover"]',function(e){
			frameWork.destroyToolTip();
		});

		$('body').on('click','*[data-toggle="modal-open"], *[data-toggle="modal"]',function(e){
			const triggerer = $(e.target);

			e.preventDefault();
			if( !frameWork.isDisabled(triggerer) ){	
				frameWork.createModal(triggerer);
			}
		});

		$('body').on('click','*[data-toggle="modal-close"]',function(e){
			const triggerer = $(e.target);

			e.preventDefault();
			if( !frameWork.isDisabled(triggerer) ){	
				frameWork.destroyModal(true);
			}
		});


		$('body').on('click','*[data-toggle="board-open"], *[data-toggle="board"]',function(e){
			const triggerer = $(e.target);

			e.preventDefault();
			if( !frameWork.isDisabled(triggerer) ){	
				frameWork.createBoard(triggerer);
			}
		});

		$('body').on('click','*[data-toggle="board-close"]',function(e){
			const triggerer = $(e.target);

			e.preventDefault();
			if( !frameWork.isDisabled(triggerer) ){	
				frameWork.destroyBoard(true);
			}
		});





		$('body').on('change','.zone input[type="file"]',function(e){
			const triggerer = $(e.target);
			const zone = triggerer.closest('.zone');
			const files = triggerer[0].files;
			zone.find('.zone-has-content-text').remove();


			if(triggerer.val() && files.length){
				zone.addClass('zone-has-content');

				console.log(files);
				zone.append(function(){

					var html  =
					`<div class="zone-has-content-text">
						<span>${files.length} files selected.<br> Click or drag and drop to reselect</span>
					</div>`;
					
					
					return html
				});
			}else{
				zone.removeClass('zone-has-content');

			}
		});




		$('body').on('click','*[data-toggle="asset-close"]',function(e){
			e.preventDefault();
			const triggerer = $(e.target);
			if( !frameWork.isDisabled(triggerer) ){
				var asset = _.getTheToggled(triggerer,'asset');

				console.log(asset);

				triggerer.remove();
				asset.remove();
			}
		});


		$('html,body').on('click','*',function(e){

			// //extra fallback
			// function targetWithinComp(selector,child) {
			// 	var toReturn = false;
			// 	let elms = document.querySelectorAll(selector);
			// 	if(elms) {
			// 		elms.forEach(function(el){
			// 			if(el !== child && el.contains(child)){
			// 				toReturn = true;
			// 			}
			// 		});
			// 	}

			// 	console.log(toReturn);

			// 	return toReturn;
			// }
			const triggerer = $(e.target);

			if( frameWork.isDisabled(triggerer) ){
				e.preventDefault();

			}else{
				//tooltip
				if(
					!triggerer.closest('[data-toggle="tooltip-click"]').length
					// && !triggerer.matches('[data-toggle="tooltip-click"] *')
					&& !triggerer.closest('[data-toggle="tooltip-hover"]').length
					// && !triggerer.matches('[data-toggle="tooltip-hover"] *')
					&& !triggerer.closest('[data-value]').length //temp fix for ui elements not getting ancestry
				){
					frameWork.destroyToolTip();
				}

				//dropdown
				if(
					!triggerer.closest('[data-toggle="dropdown"]').length
					&& !triggerer.closest('.dropdown').length
					&& !triggerer.closest('[data-value]').length //temp fix for ui elements not getting ancestry
				){
					

					frameWork.closeDropdowns( false );
				}
			}
		});
	})

	$(window).on('load',function(){


		_.fns_on_load.forEach(function(fn){
			fn();
		})

		frameWork.settings.initializeModal && frameWork.createModal();
		frameWork.settings.initializeBoard && frameWork.createBoard();
		frameWork.settings.initializeAccordion && frameWork.toggleAccordion();

		// if(window.location.hash !== ''){

		// 	var possiblyAccordion = _.getTheToggled(null,'accordion');

		// 	if(possiblyAccordion) {
		// 		$('.accordion').removeClass('open');
		// 		$(window.hash.location).addClass('open');
		// 	}
		// }


		var resizeTimerInternal;
		$(window).on('resize', function() {
		
			clearTimeout(resizeTimerInternal)
		
			resizeTimerInternal = setTimeout(function() {
				_.fns_on_resize.forEach(function(fn){
					fn();
				})
			}, 100)
		
		});

		$('body').removeClass('body-loading').addClass('body-loaded');

	})




	//put boi on global
	
	window.fw = frameWork;
	window.frameWork = frameWork;
	window.frameWork.DEBUG = _;


}(jQuery,window));