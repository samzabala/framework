/*** Tags ***/
$prefix: '.tag';
#{$prefix} {
  @include type-set(
    (
      decoration: get-anchor-dec(),
      size: $_fwc-tag-font-size,
      leading: $_fwc-tag-line-height,
      weight: $tag-font-weight,
      style: $tag-font-style,
      case: $tag-text-transform,
    )
  );
  padding-top: calc(((#{$_fwc-tag-height} - (#{$_fwc-tag-single-line})) * 0.5));
  padding-bottom: calc(((#{$_fwc-tag-height} - (#{$_fwc-tag-single-line})) * 0.5));
  padding-left: $_fwc-tag-gutter-x;
  padding-right: $_fwc-tag-gutter-x;
  border-radius: $tag-border-radius;
  margin-top: $_fwc-tag-margin-y;
  margin-bottom: $_fwc-tag-margin-y;
  // display: inline-flex;
  display: inline-block;
  align-items: center;
  vertical-align: middle;
  max-width: 100%;
  @include dump-styles(text-ellipsis-single);

  &:nth-child(n + 2) {
    margin-left: $_fwc-tag-margin-x;
  }

  &#{&}-large {
    padding-top: calc(((#{$_fwc-tag-height-large} - (#{$_fwc-tag-single-line})) * 0.5));
    padding-bottom: calc(
      ((#{$_fwc-tag-height-large} - (#{$_fwc-tag-single-line})) * 0.5)
    );
    border-radius: $tag-border-radius-large;
  }

  &#{&}-small {
    padding-top: calc(((#{$_fwc-tag-height-small} - (#{$_fwc-tag-single-line})) * 0.5));
    padding-bottom: calc(
      ((#{$_fwc-tag-height-small} - (#{$_fwc-tag-single-line})) * 0.5)
    );
    border-radius: $tag-border-radius-small;
  }

  a {
    &,
    &:hover,
    &:focus,
    &.focus {
      text-decoration: inherit;
      color: inherit;
    }
  }
  &-text {
    max-width: 10em;
    @include dump-styles(text-ellipsis-single);
  }

  &,
  &:hover,
  &:focus,
  &.focus {
    color: $tag-color;
    @include dump-styles(no-text-decoration-hover);
  }

  @each $tag, $properties in $_fwc-tag-schemes-color {
    &-#{$tag} {
      background: map-get($properties, background);
      &,
      &:hover,
      &:focus,
      &:active,
      &.focus,
      &.active {
        color: map-get($properties, color);
      }
    }
  }
}
