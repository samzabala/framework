@use 'sass:list';

.inline-flex {
  display: inline-flex !important;

  &-xs {
    @include br(xs) {
      display: inline-flex !important;
    }
  }

  &-sm {
    @include br(sm) {
      display: inline-flex !important;
    }
  }

  &-md {
    @include br(md) {
      display: inline-flex !important;
    }
  }

  &-lg {
    @include br(lg) {
      display: inline-flex !important;
    }
  }
}

.flex {
  display: flex !important;

  &-xs {
    @include br(xs) {
      display: flex !important;
    }
  }

  &-sm {
    @include br(sm) {
      display: flex !important;
    }
  }

  &-md {
    @include br(md) {
      display: flex !important;
    }
  }

  &-lg {
    @include br(lg) {
      display: flex !important;
    }
  }

  &-direction {
    &-row {
      flex-direction: row !important;
    }
    &-row-reverse {
      flex-direction: row-reverse !important;
    }
    &-column {
      flex-direction: column !important;
    }
    &-column-reverse {
      flex-direction: column-reverse !important;
    }
    &-inherit {
      flex-direction: inherit !important;
    }
  }

  &-wrap {
    flex-wrap: wrap !important;
  }

  &-nowrap {
    flex-wrap: nowrap !important;
  }

  &-wrap-reverse {
    flex-wrap: wrap-reverse !important;
  }

  &-wrap-inherit {
    flex-wrap: inherit !important;
  }

  @for $i from 0 through $flex-max {
    $selector-grow: ();
    $selector-shrink: ();

    @for $shrink from 0 through $flex-max {
      $selector-grow: list.append(
        $selector-grow,
        #{& + '-' + $i + '-' + $shrink},
        comma
      );
    }
    @for $grow from 0 through $flex-max {
      $selector-shrink: list.append(
        $selector-shrink,
        #{& + '-' + $grow + '-' + $i},
        comma
      );
    }

    // @each $j in $past-flex-increments {
    @at-root :is(#{$selector-grow}, #{$selector-shrink}) {
      flex: unset !important;
    }
    @at-root :is(#{$selector-grow}) {
      flex-grow: #{$i} !important;
    }
    @at-root :is(#{$selector-shrink}) {
      flex-shrink: #{$i} !important;
    }
  }
}
