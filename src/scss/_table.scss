$fwc-table-row-background: (
  primary: (
    normal: $table-row-primary-background,
  ),
  secondary: (
    normal: $table-row-secondary-background,
  ),
  accent: (
    normal: $table-row-accent-background,
  ),
  neutral: (
    normal: $table-row-neutral-background,
  ),
  success: (
    normal: $table-row-success-background,
  ),
  caution: (
    normal: $table-row-caution-background,
  ),
  error: (
    normal: $table-row-error-background,
  ),
  intensity-1: (
    normal: $table-row-intensity-1-background,
  ),
  intensity-2: (
    normal: $table-row-intensity-2-background,
  ),
  intensity-3: (
    normal: $table-row-intensity-3-background,
  ),
  intensity-4: (
    normal: $table-row-intensity-4-background,
  ),
  intensity-5: (
    normal: $table-row-intensity-5-background,
  ),
);

$fwc-table-cell-background: (
  primary: (
    normal: $table-cell-primary-background,
  ),
  secondary: (
    normal: $table-cell-secondary-background,
  ),
  accent: (
    normal: $table-cell-accent-background,
  ),
  neutral: (
    normal: $table-cell-neutral-background,
  ),
  success: (
    normal: $table-cell-success-background,
  ),
  caution: (
    normal: $table-cell-caution-background,
  ),
  error: (
    normal: $table-cell-error-background,
  ),
  intensity-1: (
    normal: $table-cell-intensity-1-background,
  ),
  intensity-2: (
    normal: $table-cell-intensity-2-background,
  ),
  intensity-3: (
    normal: $table-cell-intensity-3-background,
  ),
  intensity-4: (
    normal: $table-cell-intensity-4-background,
  ),
  intensity-5: (
    normal: $table-cell-intensity-5-background,
  ),
);

$prefix: '.table';

:root {
  // :where(#{$prefix})
  --fw-table-cell-border-color: #{$table-cell-border-color};
  --fw-table-cell-border-width: #{$table-cell-border-width};
  --fw-table-cell-padding-x: #{rem($table-cell-padding-x, $body-font-size)};

  --fw-table-cell-height: #{em($table-cell-height, $body-font-size)};

  //internal
  --fw-table-cell-border-top-width: var(--fw-table-cell-border-width);
  --fw-table-cell-border-right-width: 0;
  --fw-table-cell-border-bottom-width: 0;
  --fw-table-cell-border-left-width: 0;
  --fw-table-cell-background: transparent;

  --fw-table-cell-heading-height: #{em($table-cell-heading-height, $body-font-size)};

  --fw-table-label-width: #{rem($table-label-width, $body-font-size)};
  --fw-table-label-offset: #{rem($table-label-offset, $body-font-size)};
  --fw-table-label-border-radius: #{$table-label-border-radius};

  --fw-table-label-background: currentColor;

  --fw-table-row-background: #{$table-row-background};
}

:is(:where(table), :is(#{$prefix})) {
  width: 100%;
  display: table;
  border-collapse: collapse;
  text-align: inherit;
  background: transparent;

  &:not(#{$prefix}-fixed) {
    :is(.text-wrap-ellipsis,.text-wrap-ellipsis-multiline) {
      width: 10rem;
      width: clamp(10rem, 18rem, 25em);
    }
  }

  &#{$prefix}-fixed {
    table-layout: fixed !important;
  }
}

#{$prefix}-wrapper {
  width: 100%;
  display: block;
  overflow-x: auto;

  :is(:where(table), #{$prefix}) {
    // white-space: nowrap;
    width: auto;
    min-width: 100%;
    margin-bottom: 0;
    table-layout: auto !important;

    :is(.tag, .btn) {
      // white-space: nowrap;
    }
  }
}

:is(:where(thead, tbody, tfoot, tr), :is(#{$prefix}-row)) {
  width: 100%;
}

:where(thead, tbody, tfoot) {
  vertical-align: inherit;
  text-align: inherit;
}

:is(:where(tr), :is(#{$prefix}-row)) {
  // height: 100%;
  display: table-row;
  vertical-align: inherit;
  text-align: inherit;
  background: var(--fw-table-row-background);

  &:last-child {
    --fw-table-cell-border-bottom-width: var(--fw-table-cell-border-width);
  }

  @each $tag, $colors in $fwc-table-row-background {
    &#{$prefix}-row-#{$tag} {
      --fw-table-row-background: #{map-get($colors, normal)};
    }
  }
}

:is(:where(th, td), :is(#{$prefix}-cell)) {
  // vertical-align:middle;
  // height: 100%;
  // position: relative;
  vertical-align: inherit;
  text-align: inherit;

  padding: calc((var(--fw-table-cell-height) - #{calc-single-line()}) * 0.5)
    var(--fw-table-cell-padding-x);
  display: table-cell;
  background-color: var(--fw-table-cell-background);

  border-color: var(--fw-table-cell-border-color);
  border-style: solid;

  border-top-width: var(--fw-table-cell-border-top-width);
  border-right-width: var(--fw-table-cell-border-right-width);
  border-bottom-width: var(--fw-table-cell-border-bottom-width);
  border-left-width: var(--fw-table-cell-border-left-width);

  :is(#{$prefix}-bordered) &:last-child {
    --fw-table-cell-border-right-width: var(--fw-table-cell-border-width);
  }
}

:is(#{$prefix}-bordered) {
  --fw-table-cell-border-left-width: var(--fw-table-cell-border-width);
}

:is(:where(th), #{$prefix}-cell#{$prefix}-cell-heading) {
  --fw-table-cell-background: #{$table-cell-heading-background};
  --fw-table-cell-height: var(--fw-table-cell-heading-height);

  @include type-set(
    (
      root-size: $body-font-size,
      size: $table-cell-heading-font-size,
      color: $table-cell-heading-color,
      weight: $table-cell-heading-font-weight,
      style: $table-cell-heading-font-style,
      case: $table-cell-heading-text-transform,
    )
  );
}

#{$prefix}-expanded {
  --fw-table-cell-height: #{em($table-cell-height-expanded, $body-font-size)};
  --fw-table-cell-heading-height: #{em(
      $table-cell-heading-height-expanded,
      $body-font-size
    )};
}

#{$prefix}-compact {
  --fw-table-cell-height: #{em($table-cell-height-compact, $body-font-size)};
  --fw-table-cell-heading-height: #{em(
      $table-cell-heading-height-compact,
      $body-font-size
    )};
}

#{$prefix}-constricted {
  --fw-table-cell-height: #{calc-single-line()};
  --fw-table-cell-heading-height: #{calc-single-line()};
}

#{$prefix}-cell {
  @each $tag, $colors in $fwc-table-cell-background {
    &-#{$tag} {
      --fw-table-cell-background: #{map-get($colors, normal)};
    }
  }
}

#{$prefix}-label {
  background-color: var(--fw-table-cell-background);
  width: var(--fw-table-label-width);
  height: calc(var(--fw-table-cell-height) - (var(--fw-table-label-offset) * 2));
  border-radius: var(--fw-table-label-border-radius);
  display: inline-block;
  vertical-align: middle;
  margin: calc(var(--fw-table-label-offset) * -1) 0;

  @each $tag, $color in $fwc-brand-color-declarations-for-components {
    &-#{$tag} {
      --fw-table-cell-background: #{$color};
    }
  }

  @for $i from 1 through length($fwc-brand-color-intensity) {
    &-intensity-#{$i} {
      --fw-table-cell-background: #{nth($fwc-brand-color-intensity, $i)};
    }
  }
}
