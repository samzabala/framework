$prefix: '.list-group';

:root {
  // :where(#{$prefix})
  --fw-list-group-border-color: #{$list-group-border-color};
  --fw-list-group-border-width: #{$list-group-border-width};
  --fw-list-group-padding-x: #{em($list-group-padding-x, $body-font-size)};

  --fw-list-group-item-height: #{em($list-group-item-height, $body-font-size)};

  --fw-list-group-item-background-color: #{$list-group-item-background-color};
  --fw-list-group-item-background-color-active: #{$list-group-item-background-color-active};
  --fw-list-group-item-background-color-hover: #{$list-group-item-background-color-hover};
  --fw-list-group-item-background-color-striped: #{$list-group-item-background-color-striped};
}

#{$prefix} {
  padding: 0;

  &#{$prefix}-striped {
    & > :is(li, #{$prefix}-item) {
      &:nth-child(odd) {
        background-color: var(--fw-list-group-item-background-color-striped);
      }
    }
  }

  > :is(li, #{$prefix}-item) {
    @include dump-styles(cf);
    font: inherit;
    margin: 0;
    display: block;
    background-color: var(--fw-list-group-item-background-color);
    border-bottom: var(--fw-list-group-border-width) solid
      var(--fw-list-group-border-color);
    padding: calc(
        (
            (var(--fw-list-group-item-height) - var(--fw-list-group-border-width)) -
              (#{calc-single-line()})
          ) * 0.5
      )
      var(--fw-list-group-padding-x);

    &#{$prefix}-item-no-interaction {
      pointer-events: none !important;
    }

    &:first-child {
      border-top-width: var(--fw-list-group-border-width) solid
        var(--fw-list-group-border-color);
    }

    &:before {
      content: none;
    }
  }

  &#{$prefix}-expanded {
    --fw-list-group-item-height: #{em($list-group-item-height-expanded, $body-font-size)};
    --fw-body-line-height: #{$var-body-line-height-expanded};
  }

  &#{$prefix}-compact {
    --fw-list-group-item-height: #{em($list-group-item-height-compact, $body-font-size)};
    --fw-body-line-height: #{$var-body-line-height-compact};
  }

  &#{$prefix}-constricted {
    --fw-list-group-item-height: #{calc-single-line()};
    --fw-body-line-height: #{$var-body-line-height-constricted};
  }

  &:is(#{$prefix}-toggle) {
    > :is(li, #{$prefix}-item) > :where(*) {
      pointer-events: none;
    }
  }

  &:is(#{$prefix}-interactive, #{$prefix}-toggle) {
    > :is(li, #{$prefix}-item) {
      > a {
        @include type-set(
          (
            color: inherit,
            decoration: inherit,
          )
        );
      }

      &:is(:hover, :focus, .focus) {
        background: var(--fw-list-group-item-background-color-hover);
      }

      &:is(:active, .active) {
        background: var(--fw-list-group-item-background-color-active);
      }
    }
  }

  .dropdown & {
    margin-bottom: 0;

    &:only-child {
      border-radius: var(--fw-dropdown-border-radius, #{$dropdown-border-radius});
    }

    > :is(li, #{$prefix}-item) {
      > a {
        padding-top: 0;
        padding-bottom: 0;
      }
    }
  }
}

:is(.disabled, [disabled], :disabled) {
  --fw-list-group-item-background-color-active: var(
    --fw-list-group-item-background-color
  );
}
