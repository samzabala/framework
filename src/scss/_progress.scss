/*** PROGRESS BAR ***/
@keyframes progress-bar-stripes {
  from {
    background-position: 50px 0;
  }
  to {
    background-position: 0 0;
  }
}

/* Progress bar */
$prefix: '.progress';
#{$prefix} {
  @at-root %for-progress {
    & {
      @include dump-styles(cf);
      text-align: center;
      width: 100%;
      display: block;
      overflow: hidden;
      background-color: $progress-background-color;
      border-radius: $progress-border-radius;

      &.active {
        @include gradient(
          (
            type: repeating-linear,
            use-shorthand: false,
            use-fallback: false,
            colors: (
              (color: $progress-background-stripe-color, offset: 0%),
              (
                color: $progress-background-stripe-color,
                offset: $progress-background-stripe-width
              ),
              (color: transparent, offset: $progress-background-stripe-width),
              (
                color: transparent,
                offset: $progress-background-stripe-width +
                  $progress-background-stripe-gap
              ),
            ),
          )
        );
        animation-name: progress-bar-stripes;
        animation-duration: $progress-animation-duration;
        animation-timing-function: linear;
        animation-iteration-count: infinite;
      }

      .theme-inverse & {
        background-color: $progress-background-color-inverse;

        &.active {
          @include gradient(
            (
              type: repeating-linear,
              use-shorthand: false,
              use-fallback: false,
              colors: (
                (color: $progress-background-stripe-color-inverse, offset: 0%),
                (
                  color: $progress-background-stripe-color-inverse,
                  offset: $progress-background-stripe-width
                ),
                (color: transparent, offset: $progress-background-stripe-width),
                (
                  color: transparent,
                  offset: $progress-background-stripe-width +
                    $progress-background-stripe-gap
                ),
              ),
            )
          );
        }
      }
    }
  }

  & {
    @extend %for-progress;
  }
  @at-root %for-progress-and-bar {
    height: $_fwc-progress-height;
    transition: $progress-transition-duration width $transition-timing;

    &-small {
      height: $_fwc-progress-height-small;
    }
    &-large {
      height: $_fwc-progress-height-large;
    }
  }

  &,
  &-bar {
    @extend %for-progress-and-bar;
  }

  &#{&}-small {
    &,
    #{$prefix}-bar {
      @extend %for-progress-and-bar-small;
    }
  }

  &#{&}-large {
    &,
    #{$prefix}-bar {
      @extend %for-progress-and-bar-large;
    }
  }

  @at-root %for-progress-bar {
    float: left;

    &-default {
      background-color: $progress-bar-background-color;
    }
  }

  &-bar {
    @extend %for-progress-bar;
    @extend %for-progress-bar-default;

    @each $tag, $color in $_fwc-brand-color-declarations-for-components {
      &-#{$tag} {
        background-color: $color;
      }
    }

    &-intensity {
      @for $i from 1 through length($_fwc-brand-color-intensity) {
        &-#{$i} {
          background-color: nth($_fwc-brand-color-intensity, $i);
        }
      }
    }
  }

  &-title {
    @include type-set(
      (
        size: $_fwc-progress-title-font-size,
        leading: $_fwc-progress-title-line-height,
        color: $progress-title-color,
        weight: $progress-title-font-weight,
        style: $progress-title-font-style,
        case: $progress-title-text-transform,
      )
    );
    display: block;
    margin-bottom: $_fwc-progress-title-margin-bottom;
    margin-top: $_fwc-progress-title-margin-top;

    .theme-inverse & {
      color: $progress-title-color-inverse;
    }
  }
}
