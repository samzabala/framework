/* Progress bar */
$prefix: '.progress';

:root {
  // :where(#{$prefix})
  --fw-progress-background-color: #{$progress-background-color};
  --fw-progress-border-radius: #{$progress-border-radius};

  --fw-progress-height: #{rem($progress-height, $body-font-size)};

  --fw-progress-stripe-background-color: #{$progress-stripe-background-color};
  --fw-progress-stripe-width: #{$progress-stripe-width};
  --fw-progress-stripe-gap: #{$progress-stripe-gap};

  --fw-progress-bar-background: #{$progress-bar-background};
}

@keyframes progress-bar-stripes {
  from {
    background-position: 0 0;
  }

  to {
    background-position: calc(
        (var(--fw-progress-stripe-width) + var(--fw-progress-stripe-gap)) * 2.83
      )
      0;
  }
}

#{$prefix} {
  display: flex;
  text-align: center;
  width: 100%;
  overflow: hidden;
  background-color: var(--fw-progress-background-color);
  border-radius: var(--fw-progress-border-radius);

  &.active {
    @include gradient(
      (
        angle: 45deg,
        type: repeating-linear,
        use-shorthand: false,
        use-fallback: false,
        colors: (
          (color: var(--fw-progress-stripe-background-color), offset: 0%),
          (
            color: var(--fw-progress-stripe-background-color),
            offset: var(--fw-progress-stripe-width)
          ),
          (color: transparent, offset: var(--fw-progress-stripe-width)),
          (
            color: transparent,
            offset:
              calc(var(--fw-progress-stripe-width) + var(--fw-progress-stripe-gap))
          ),
        ),
      )
    );
    // (var(--fw-progress-stripe-width) + var(--fw-progress-stripe-gap))

    background-size: calc(
        (var(--fw-progress-stripe-width) + var(--fw-progress-stripe-gap)) * 2.83
      )
      var(--fw-progress-height);
    // background-position: 0 0;
    animation-name: progress-bar-stripes;
    animation-duration: $progress-animation-duration;
    animation-timing-function: linear;
    animation-iteration-count: infinite;
    animation-direction: reverse;
  }
}

:is(#{$prefix}, #{$prefix}-bar) {
  height: var(--fw-progress-height);
  transition-duration: $progress-transition-duration;
  transition-timing-function: $progress-transition-timing;
  transition-property: width;
}

#{$prefix}-bar {
  background: var(--fw-progress-bar-background);
  flex-grow: 0;
  flex-shrink: 0;
  // flex-basis: auto;
}

#{$prefix}-small {
  --fw-progress-height: #{rem($progress-height-small, $body-font-size)};
}
#{$prefix}-large {
  --fw-progress-height: #{rem($progress-height-large, $body-font-size)};
}

@each $tag, $color in $fwc-brand-color-declarations-for-components {
  #{$prefix}-bar-#{$tag} {
    --fw-progress-bar-background: #{$color};
  }
}
@for $i from 1 through length($fwc-brand-color-intensity) {
  #{$prefix}-bar-intensity-#{$i} {
    --fw-progress-bar-background: #{nth($fwc-brand-color-intensity, $i)};
  }
}
