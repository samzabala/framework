$prefix: '.input';

:root {
  // :where(#{$prefix})
  --fw-input-border-width: #{$input-border-width};
  --fw-input-box-shadow: #{$input-box-shadow};
  --fw-input-box-shadow-focus: #{$input-box-shadow-focus};
  --fw-input-padding-x: #{em($input-padding-x, $input-font-size)};

  --fw-input-placeholder-color: #{$input-placeholder-color};
  --fw-input-placeholder-opacity: #{$input-placeholder-opacity};
  --fw-input-placeholder-opacity-focus: #{$input-placeholder-opacity-focus};

  --fw-input-height: #{rem($input-height, $body-font-size)};
  --fw-input-border-radius: #{$input-border-radius};

  --fw-input-background-color: #{$input-background-color};
  --fw-input-background-color-focus: #{$input-background-color};

  --fw-input-border-color: #{$input-border-color};
  --fw-input-border-color-focus: #{$input-border-color-focus};

  --fw-input-color: inherit;
  --fw-input-color-focus: inherit;

  --fw-input-wrapper-gap: #{$input-wrapper-gap};
  --fw-input-wrapper-padding-right: #{$input-wrapper-padding-right};

  --fw-input-wrapper-label-column-width: #{$input-wrapper-label-column-width};
}

$prefix: '.input';
@at-root %fwe-form-global {
  &-ui {
    :is(&-reset) {
      font-size: 100%;
      font: inherit;
      text-align: inherit;
      color: inherit;
      border: none;
      background: none;
      -webkit-appearance: none;
      appearance: none;
      outline: none;
    }

    :is(&-control) {
      @include dump-styles(hide-js-friendly);
      //fallback
      height: 0 !important;
      width: 0 !important;
      overflow: hidden !important;
      position: absolute !important;
    }
  }

  &-skeleton {
    :is(&) {
      //scaffold
      font: inherit;
      text-decoration: none;
      line-height: $var-body-line-height;
      outline: none;
      // vertical-align: middle;
      max-width: 100%;
      box-shadow: var(--fw-input-box-shadow);
    }

    :is(&-focus) {
      box-shadow: var(--fw-input-box-shadow-focus);
    }
  }
}

#{$prefix} {
  @extend %fwe-form-global;
  @extend %fwe-form-global-skeleton;
}

:is(#{$prefix}) {
  @include type($input-font-size, null, $body-font-size);
  transition-duration: $input-transition-duration;
  transition-timing-function: $input-transition-timing;
  transition-property: color, border, background, box-shadow;

  &::-webkit-input-placeholder {
    color: var(--fw-input-placeholder-color);
    opacity: var(--fw-input-placeholder-opacity);
  }

  &::-moz-placeholder {
    color: var(--fw-input-placeholder-color);
    opacity: var(--fw-input-placeholder-opacity);
  }

  &:-ms-input-placeholder {
    color: var(--fw-input-placeholder-color);
    opacity: var(--fw-input-placeholder-opacity);
  }
  &:-moz-placeholder {
    /* Firefox 18- */
    color: var(--fw-input-placeholder-color);
    opacity: var(--fw-input-placeholder-opacity);
  }

  &:focus::-webkit-input-placeholder {
    opacity: var(--fw-input-placeholder-opacity-focus) !important;
  }

  &:focus:-moz-placeholder {
    opacity: var(--fw-input-placeholder-opacity-focus) !important;
  }

  &:focus:-ms-input-placeholder {
    opacity: var(--fw-input-placeholder-opacity-focus) !important;
  }

  &.focus::-webkit-input-placeholder {
    opacity: var(--fw-input-placeholder-opacity-focus) !important;
  }

  &.focus:-moz-placeholder {
    opacity: var(--fw-input-placeholder-opacity-focus) !important;
  }

  &.focus:-ms-input-placeholder {
    opacity: var(--fw-input-placeholder-opacity-focus) !important;
  }

  #{$prefix}-group > & {
    max-width: 100%;
    flex-grow: 0;
    flex-shrink: 0;
    // flex-basis: auto;
    position: relative;
    --fw-input-box-shadow: none;

    @at-root :is(#{$prefix}-group-unite)#{&} {
      --fw-input-box-shadow-focus: none;
    }

    &:is(:active, .active, :focus, .focus, .open) {
      z-index: 1;
    }
  }

  &:is(:focus, .focus, :active, .active) {
    @extend %fwe-form-global-skeleton-focus;
  }

  :is(.nav, .nav-block.nav-block-stretch, .nav > #{$prefix}-group) > & {
    align-self: center;
    --fw-input-height: var(--fw-nav-height, #{rem($nav-height, $body-font-size)});
  }

  &:is(.no-radius, .no-radius > #{&}) {
    --fw-input-border-radius: 0em;
  }
}

@each $tag, $color in $fwc-brand-color-declarations-for-components {
  #{$prefix}-#{$tag} {
    --fw-input-background-color: var(--fw-color-#{$tag}-#{$input-feedback-variation});
    --fw-input-border-color: #{$color};
    --fw-input-color: #{$color};

    &:not(:is(.disabled, [disabled], :disabled)) {
      --fw-input-border-color-focus: var(--fw-input-border-color);
      --fw-input-color-focus: var(--fw-input-color);
    }
  }
}

:is(#{$prefix}-large, #{$prefix}-large > #{$prefix}) {
  --fw-input-height: #{rem($input-height-large, $body-font-size)};
  --fw-input-border-radius: #{$input-border-radius-large};
  @include type($input-font-size-large, null, $body-font-size);
}

:is(#{$prefix}-small, #{$prefix}-small > #{$prefix}) {
  --fw-input-height: #{rem($input-height-small, $body-font-size)};
  --fw-input-border-radius: #{$input-border-radius-small};
  @include type($input-font-size-small, null, $body-font-size);
}

:is(#{$prefix}-round, #{$prefix}-round > #{$prefix}) {
  --fw-btn-border-radius: 9999em;
}

:is(.disabled, [disabled], :disabled) {
  --fw-input-box-shadow: none;
  --fw-input-box-shadow-focus: none;
}

#{$prefix}-wrapper {
  max-width: 100%;
  position: relative;
  display: inline-grid;
  align-items: center;
  column-gap: var(--fw-input-wrapper-gap);
  padding-right: var(--fw-input-wrapper-padding-right);
  // min-height: var(--fw-input-height);

  > :where(*) {
    min-width: 0;
  }

  &-horizontal {
    grid-template-columns: auto 1fr;
    grid-template-rows: repeat(auto-fill, minmax(0, max-content));

    &#{$prefix}-reverse {
      grid-template-columns: 1fr auto;
    }

    > :where(*) {
      grid-column: 2;
    }

    > :is(
        :where(*):not(#{$prefix}),
        :not(#{$prefix} ~ #{$prefix}),
        #{$prefix}:only-child
      ) {
      grid-column: span 2;
    }
  }

  &-horizontal#{&}-block {
    grid-template-columns: var(--fw-input-wrapper-label-column-width) 1fr;
  }

  &-horizontal#{&}-block#{&}-reverse {
    grid-template-columns: 1fr var(--fw-input-wrapper-label-column-width);
  }

  &-vertical {
    grid-template-columns: 100%;
  }

  &-block {
    --fw-input-wrapper-padding-right: 0rem;
    display: grid;
    width: 100%;

    &-mobile {
      @include on-breakpoint(mobile) {
        --fw-input-wrapper-padding-right: 0rem;
        display: grid;
        width: 100%;
      }
    }
  }

  &-responsive {
    @include on-breakpoint(mobile) {
      grid-template-columns: 100%;

      > :where(*) {
        &:is(:only-child) {
          grid-column: auto;
        }
      }
    }
  }
}
