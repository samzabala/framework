$prefix: '.nav';

:root {
  // :where(#{$prefix})
  --fw-nav-height: #{$nav-height};
  --fw-nav-background: #{$nav-background};
  --fw-nav-box-shadow: #{$nav-box-shadow};
  --fw-nav-padding-x: #{rem($nav-padding-x, $body-font-size)};
  --fw-nav-dropdown-background: #{$nav-dropdown-background};
  --fw-nav-z-index: #{$z-index-nav};

  --fw-nav-item-height: #{rem($nav-item-height, $body-font-size)};
  --fw-nav-item-color-hover: #{$nav-item-color-hover};

  --fw-nav-item-current-size: #{$nav-item-current-size};
  --fw-nav-item-current-gradient-start: #{$nav-item-current-gradient-start};
  --fw-nav-item-current-gradient-end: #{$nav-item-current-gradient-end};

  --fw-nav-item-label-opacity: #{$nav-item-label-opacity};

  --fw-nav-icon-width: #{rem($nav-icon-width, $body-font-size)};
  --fw-nav-icon-height: #{rem($nav-icon-height, $body-font-size)};
}

:where(:root) {
}

#{$prefix} {
  height: var(--fw-nav-height);
  background: var(--fw-nav-background);
  @include type-set(
    (
      root-size: $body-font-size,
      size: $nav-font-size,
      color: $nav-color,
      weight: $nav-font-weight,
      case: $nav-text-transform,
      style: $nav-font-style,
    )
  );

  &,
  :where(ul, ol, li) {
    margin-bottom: 0;
    margin-top: 0;
    list-style: none;
    padding: 0;
  }

  :where(a) {
    color: inherit;
  }

  &#{$prefix}-sticky {
    position: sticky;
    top: 0;
    left: 0;
    right: 0;
    box-shadow: var(--fw-nav-box-shadow);
    z-index: var(--fw-nav-z-index);

    :is(html, body):has(#{&}) {
      scroll-padding: var(--fw-nav-height);
    }
  }

  &#{$prefix}-vertical {
    min-width: 100%;
    height: auto;
    flex-direction: column;

    :is(
        #{$prefix}-list,
        :is(:is(#{$prefix}-list, .dropdown) > li, #{$prefix}-item) > a,
        #{$prefix}-item-label
      ) {
      display: block;
    }

    .dropdown {
      border-radius: 0;
      padding: 0;
      width: auto;
      position: static;
      box-shadow: none;
    }
  }
}

:is(#{$prefix}, #{$prefix}-list, #{$prefix}:is(.accordion.open)) {
  @include flex();
}

:is(:is(#{$prefix}-list, .dropdown) > li, #{$prefix}-item) {
  > a {
    padding-top: calc((var(--fw-nav-item-height) - (#{calc-single-line()})) * 0.5);
    padding-bottom: calc((var(--fw-nav-item-height) - (#{calc-single-line()})) * 0.5);
    display: block;
  }

  &:is(.current, .open, :hover, :focus) {
    > a {
      color: var(--fw-nav-item-color-hover);
    }
  }
}

:is(
    #{$prefix}-block,
    :is(#{$prefix}-list, #{$prefix}-list > li) > a,
    #{$prefix}-item-label > :where(*)
  ) {
  padding-right: var(--fw-nav-padding-x);
  padding-left: var(--fw-nav-padding-x);
}

#{$prefix}-block {
  display: flex;
  align-self: stretch;
  align-items: center;
  align-content: center;
  position: relative;

  // > :where(*) {
  // 	max-width:100%;
  // }

  &#{$prefix}-block-stretch {
    align-items: stretch;
    align-content: stretch;
  }
}

#{$prefix}-icon {
  width: var(--fw-nav-icon-width);
  height: var(--fw-nav-icon-height);
  max-width: none;
  display: inline-block;
  vertical-align: middle;
  line-height: inherit;
  text-align: center;

  // .badge {
  // 	position:absolute;
  // 	right:0;
  // 	transform: translateX(50%);
  // 	top:0;
  // }

  &.symbol,
  .symbol {
    font-size: 1.25em;
  }

  + #{$prefix}-item-text {
    margin-left: 0.5rem;
    display: inline-block;
    vertical-align: middle;
  }
}

#{$prefix}-item-label {
  align-self: center;
  opacity: var(--fw-nav-item-label-opacity);

  #{$prefix}-vertical & {
    align-self: stretch;
  }
}

:is(#{$prefix}-list) > :is(#{$prefix}-item, li) {
  > a {
    @include type-set(
      (
        root-size: $body-font-size,
        color: $nav-top-font-color,
        size: $nav-top-font-size,
        style: $nav-top-font-style,
        weight: $nav-top-font-weight,
        case: $nav-top-text-transform,
      )
    );
    position: relative;
    transition-duration: $nav-item-transition-duration;
    transition-timing-function: $nav-item-transition-timing;
    transition-property: all;
    padding-top: calc((var(--fw-nav-height) - (#{calc-single-line()})) * 0.5);
    padding-bottom: calc((var(--fw-nav-height) - (#{calc-single-line()})) * 0.5);
    @include dump-styles(no-text-decoration);

    &:is(:hover, :focus, .focus) {
      @include dump-styles(no-text-decoration-hover);
    }

    &:after {
      content: '';
      position: absolute;
      bottom: 0;
      right: 0;
      left: 0;
      height: 0;
      @include gradient(
        (
          color1: var(--fw-nav-item-current-gradient-start),
          color2: var(--fw-nav-item-current-gradient-end),
          angle: 90deg,
          use-shorthand: false,
        )
      );
      transition-duration: $nav-item-current-transition-duration;
      transition-timing-function: $nav-item-current-transition-timing;
      transition-property: height;

      #{$prefix}-vertical & {
        height: auto;
        width: 0;
        top: 0;
        left: auto;
        transition-property: width;

        @include gradient(
          (
            color1: var(--fw-nav-item-current-gradient-start),
            color2: var(--fw-nav-item-current-gradient-end),
            angle: 0deg,
            use-shorthand: false,
          )
        );
      }
    }
  }

  &:is(:hover, .current, .open) > a,
  & > a.open {
    &:after {
      height: var(--fw-nav-item-current-size);

      #{$prefix}-vertical & {
        height: auto;
        width: var(--fw-nav-item-current-size);
      }
    }
  }
}

#{$prefix}-list :is(ol, ul, .dropdown) {
  background: var(--fw-nav-dropdown-background);
  margin: auto;
}

#{$prefix}-list {
  &#{&}-responsive {
    @include on-breakpoint(mobile) {
      display: block;
      min-width: 100%;

      .dropdown {
        border-radius: 0;
        // padding-left:0;
        // padding-right:0;
        width: auto;
        position: static;
        box-shadow: none;
      }

      > :is(#{$prefix}-item, li) {
        > :is(a, #{$prefix}-item-label) {
          display: block;
        }
      }
    }
  }
}

.offset-nav {
  & {
    @include create-box-helper(#{&}, '', '', '', var(--fw-nav-height));
    @include create-box-helper(
      #{&},
      'negate',
      '',
      '',
      calc(#{var(--fw-nav-height)} * -1)
    );
  }
}
