@mixin create-btn-schemes($args: (), $scheme: '', $custom-css, $helper-prefix: '.btn') {
  $defaults: (
    init: (),
    hover: (),
    active: (),
  );
  $opts: map-merge($defaults, $args);

  @each $state, $properties in $opts {
    @if $state == 'hover' {
      @at-root &:hover,
        #{$helper-prefix}-group#{$helper-prefix}-group-unite:hover &,
        &:focus,
        #{$helper-prefix}-group#{$helper-prefix}-group-unite:focus &,
        &.focus,
        #{$helper-prefix}-group#{$helper-prefix}-group-unite.focus & {
        &:not(#{$helper-prefix}-no-interaction):not(#{$helper_prefix}-disabled):not([disabled]) {
          @include internal-btn-set-scheme($properties);
        }
      }
      // @at-root &:hover,
      // &:focus,
      // &:.focus {
      //     @include internal-btn-set-scheme($properties)
      // }
    } @else if $state == 'active' {
      @at-root &:active,
        #{$helper-prefix}-group#{$helper-prefix}-group-unite:active &,
        &.active,
        #{$helper-prefix}-group#{$helper-prefix}-group-unite.active & {
        &:not(#{$helper-prefix}-no-interaction):not(#{$helper_prefix}-disabled):not([disabled]) {
          @include internal-btn-set-scheme($properties);
        }
      }
    } @else if $state == 'init' {
      // @at-root %extend-internal-btn-init-#{$scheme} {
      // 	@include internal-btn-set-scheme($properties);
      // }

      @at-root & {
        // @extend %extend-internal-btn-init-#{$scheme};
        @include internal-btn-set-scheme($properties);

        @if $custom-css {
          @include custom-css($custom-css);
        }
      }

      // @at-root
      // 	&#{$helper-prefix}-no-interaction:hover,
      // 	&#{$helper-prefix}-no-interaction:focus,
      // 	&#{$helper-prefix}-no-interaction.focus,
      // 	&#{$helper-prefix}-no-interaction:active,
      // 	&#{$helper-prefix}-no-interaction.active,

      // 	&#{$helper-prefix}-disabled:hover,
      // 	&#{$helper-prefix}-disabled:focus,
      // 	&#{$helper-prefix}-disabled.focus,
      // 	&#{$helper-prefix}-disabled:active,
      // 	&#{$helper-prefix}-disabled.active,

      // 	#{$helper-prefix}-disabled:hover &,
      // 	#{$helper-prefix}-disabled:focus &,
      // 	#{$helper-prefix}-disabled.focus &,
      // 	#{$helper-prefix}-disabled:active &,
      // 	#{$helper-prefix}-disabled.active &
      // 	{
      // 		@extend %extend-internal-btn-init-#{$scheme};
      // 	}
    }
  }
}

@mixin internal-btn-set-scheme($properties, $add-important: false) {
  $important: '';

  @if $add-important {
    $important: '!important';
  }

  @each $prop,$value in $properties {
    #{$prop}: #{$value} #{$important};
  }
}
