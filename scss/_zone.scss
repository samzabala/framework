/*** zone ***/


$calculated-zone-schemes: (
	default: (
		init:(
			background: $zone-background-default,
			border: $zone-border-default,
			color: $zone-color-default,
		),
		active:(
			background: $zone-background-default-hover,
			border: $zone-border-default-hover,
			color: $zone-color-default-hover,
		)
	),

	primary: (
		init:(
			background: $zone-background-primary,
			border: $zone-border-primary,
			color: $zone-color-primary,
		),
		active:(
			background: $zone-background-primary-hover,
			border: $zone-border-primary-hover,
			color: $zone-color-primary-hover,
		)
	),

	secondary: (
		init:(
			background: $zone-background-secondary,
			border: $zone-border-secondary,
			color: $zone-color-secondary,
		),
		active:(
			background: $zone-background-secondary-hover,
			border: $zone-border-secondary-hover,
			color: $zone-color-secondary-hover,
		)
	),

	accent:  (
		init:(
			background: $zone-background-accent,
			border: $zone-border-accent,
			color: $zone-color-accent,
		),
		active:(
			background: $zone-background-accent-hover,
			border: $zone-border-accent-hover,
			color: $zone-color-accent-hover,
		)
	),

	neutral:  (
		init:(
			background: $zone-background-neutral,
			border: $zone-border-neutral,
			color: $zone-color-neutral,
		),
		active:(
			background: $zone-background-neutral-hover,
			border: $zone-border-neutral-hover,
			color: $zone-color-neutral-hover,
		)
	),

	success:  (
		init:(
			background: $zone-background-success,
			border: $zone-border-success,
			color: $zone-color-success,
		),
		active:(
			background: $zone-background-success-hover,
			border: $zone-border-success-hover,
			color: $zone-color-success-hover,
		)
	),

	caution:  (
		init:(
			background: $zone-background-caution,
			border: $zone-border-caution,
			color: $zone-color-caution,
		),
		active:(
			background: $zone-background-caution-hover,
			border: $zone-border-caution-hover,
			color: $zone-color-caution-hover,
		)
	),

	error:  (
		init:(
			background: $zone-background-error,
			border: $zone-border-error,
			color: $zone-color-error,
		),
		active:(
			background: $zone-background-error-hover,
			border: $zone-border-error-hover,
			color: $zone-color-error-hover,
		)
	)
);

$calculated-zone-font-size: $zone-font-size;
@if internal-is-convertable($zone-font-size) {
	$calculated-zone-font-size: rem($zone-font-size / $body-font-size);
}
/* it */
$prefix: '.zone';
#{$prefix} {
	-webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
	outline: none;
	position:relative;
	font: inherit;
	@include type-set((
		
		size:$calculated-zone-font-size,
		// leading: strip-unit($zone-line-height/$zone-font-size),
		case: $zone-text-transform,
		weight: $zone-font-weight,
		style: $zone-font-style,
		align: center
	));
	padding-top: $zone-gutter-y;
	padding-bottom: $zone-gutter-y;
	padding-right: $zone-gutter-x;
	padding-left: $zone-gutter-x;
	margin-top: $zone-margin-y;
	margin-bottom: $zone-margin-y;
	border: $zone-border-width dashed transparent;
	border-radius: $zone-border-radius;
	text-align: center;
	position:relative;
	display:block;
	width:100%;
	transition: $transition-duration-short opacity $transition-timing;
	@extend %for-cf;
	a {
		color:inherit;
		font-weight: $body-font-weight-bold;
	}

	> input {
		opacity: 0!important;
		position:absolute;
		display:block;
		top:0;
		left:0;
		height:100% !important;
		width:100% !important;

	}

	&-text,
	&-has-content-text {
		display: block;
	}

	&#{&}-has-content &-text {
		display: none!important;
	}


	// &::-webkit-file-upload-button {
	// 	appearance: none;
	// 	border: none;
	// 	font:inherit;
	// 	color:inherit;
	// 	opacity: $input-placeholder-opacity;
	// 	background: none;
	// 	margin: 0;
	// 	padding: 0;
	// 	vertical-align:middle;
	// 	display:flex;
	// 	display:none;
	// }

	// &:before {
	// 	font:inherit;
	// 	display: block;
	// 	content:"Drag Your Attachments Here";
	// }

	&#{$prefix}-disabled {
		@extend %for-disabled !optional;
	}

	
	&#{$prefix}-small {

		padding-top: $zone-gutter-y-small;
		padding-bottom: $zone-gutter-y-small;
		padding-right: $zone-gutter-x-small;
		padding-left: $zone-gutter-x-small;
	}
	
	&#{$prefix}-large {

		padding-top: $zone-gutter-y-large;
		padding-bottom: $zone-gutter-y-large;
		padding-right: $zone-gutter-x-large;
		padding-left: $zone-gutter-x-large;
	}


	@each $tag,$properties in $calculated-zone-schemes {
		&#{$prefix}-#{$tag} {
			&,
			&#{$prefix}-disabled,
			&#{$prefix}:hover,
			&#{$prefix}:focus,
			&#{$prefix}.focus,
			&#{$prefix}:active,
			&#{$prefix}.active {
				border-color: map-get(map-get($properties,init),border);
				color: map-get(map-get($properties,init),color);
				background-color: map-get(map-get($properties,init),background);
			}
			&:hover,
			&:focus,
			&.focus,
			&:active,
			&.active {

				border-color: map-get(map-get($properties,active),border);
				color: map-get(map-get($properties,active),color);
				background-color: map-get(map-get($properties,active),background);
			}
		}
	}
}