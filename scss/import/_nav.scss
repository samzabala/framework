/*** NAVIGATION ***/
$calculated-nav-font-size: $nav-font-size;
@if internal-is-convertable($nav-font-size){
	$calculated-nav-font-size: rem($nav-font-size / $body-font-size)
}

	$calculated-nav-top-font-size: $nav-top-font-size;
	@if internal-is-convertable($nav-top-font-size){
		$calculated-nav-top-font-size: rem($nav-top-font-size / $body-font-size)
	}
$calculated-nav-line-height: $nav-line-height;
@if internal-is-convertable($nav-line-height){
	$calculated-nav-line-height: rem($nav-line-height / $body-font-size);
}

$calculated-nav-single-line: $calculated-nav-line-height;
@if unitless($calculated-nav-single-line) and unit($nav-font-size) == px {
    $calculated-nav-single-line: 1em * #{ type-lead( $nav-font-size,$nav-line-height ) }
}

// $calculated-nav-height is internal vars because the body needs it. tHE BODEH


    $calculated-nav-item-height: $nav-item-height;
    @if internal-is-convertable($nav-item-height) {
        $calculated-nav-item-height: rem( $nav-item-height / $body-font-size);
	}
	
$calculated-nav-icon-width: $nav-icon-width;
@if internal-is-convertable($nav-icon-width,$nav-top-font-size){
	$calculated-nav-icon-width: em($nav-icon-width / $nav-top-font-size)
}

$calculated-nav-icon-height: $nav-icon-height;
@if internal-is-convertable($nav-icon-height,$nav-top-font-size){
	$calculated-nav-icon-height: em($nav-icon-width / $nav-top-font-size)
}


$prefix: '.nav';
#{$prefix} {

	&{
		height: $calculated-nav-height;
		background: $nav-background;
		@include type-set((
			size: $calculated-nav-font-size,
			leading: $calculated-nav-line-height,
			color: $nav-color,
			weight: $nav-font-weight,
			case: $nav-text-transform,
			style: $nav-font-style,
		));

		.theme-inverse & {
			background: $nav-background-inverse;
		}
	}

	* {
		margin:0;
		padding:0;
		border: 0;
	}
	
	a{
		color: inherit;
	}

	&,
	&-list {
		@include flex();
		padding: 0;
		margin: 0;
	}

	&.accordion.open {
		display:flex!important;
	}

	&.accordion.open {
		display:flex;
	}
	
	&#{$prefix}-sticky {
		position:fixed;
		top:0;
		left:0;
		right:0;
		box-shadow: $nav-drop-shadow;

		.theme-inverse & {
			box-shadow: $nav-drop-shadow-inverse;
		}
	}

	&#{$prefix}-vertical {
		display:block;
		height: auto;

		#{$prefix}-list {
			display:block;
		}

		.dropdown li,
		#{$prefix}-item,
		#{$prefix}-list li {

			> a,
			> [data-toggle=dropdown] {
				display:block;
			}
		}

		.dropdown {
			border-radius:0;
			padding:0;
			width: auto;
			position:static;
			box-shadow: none;
		}
	}
	@at-root .dropdown li,
	&-item,
	&-list li {

		&:before {
			content:none;
		}
		

		> a,
		> [data-toggle=dropdown] {
			
			padding-top: calc( ( #{$calculated-nav-item-height} - ( #{ $calculated-nav-single-line })) * .5 );
			padding-bottom: calc( ( #{$calculated-nav-item-height} - ( #{ $calculated-nav-single-line })) * .5 );
			display:inline-block;
		}

		&:hover{
			> a,
			> [data-toggle=dropdown] {
				color: $nav-color-hover;
			}
		}
	}

	&-icon {
		width: $calculated-nav-icon-width;
		height: $calculated-nav-icon-height;
		max-width:none;
		display:inline-block;
		vertical-align: middle;
		line-height: inherit;

		+ #{$prefix}-item-text {
			margin-left: 1rem;
			display:inline-block;
			vertical-align: middle;
		}
	}

	&-list > #{$prefix}-item,
	&-list > li {

		> a,
		> [data-toggle=dropdown] {
			@include type-set((
				size: $calculated-nav-top-font-size,
				style: $nav-top-font-style,
				weight: $nav-top-font-weight,
				case: $nav-top-text-transform
			));
			position:relative;

			transition: $transition-duration-short all $transition-timing;
			padding-left: $nav-gutter-x;
			padding-right: $nav-gutter-x;
			padding-top: calc( (#{$calculated-nav-height} - ( #{ $calculated-nav-single-line })) * .5 );
			padding-bottom: calc( (#{$calculated-nav-height} - ( #{ $calculated-nav-single-line })) * .5 );
			
			&:after {
				content:"";
				position:absolute;
				bottom:0;
				right:0;
				left:0;
				height:0;
				transition: $transition-duration-short all $transition-timing;
				@include gradient((
					color1: $brand-gradient-start,
					color2: $brand-gradient-end,
					angle: 0deg,
					use-shorthand:false
				));


				#{$prefix}-vertical & {
					height:auto;
					width: 0;
					top:0;
					left:auto;

					@include gradient((
						color1: $brand-gradient-start,
						color2: $brand-gradient-end,
						angle: 90deg,
						use-shorthand:false
					));
				}
			}
		}
		&:hover,
		&.open {
			
			> a,
			> [data-toggle=dropdown] {
				
				&:after {
					height: $nav-current-size;

					#{$prefix}-vertical & {
						height:auto;
						width:$nav-current-size;
					}
				}
			}
		}
	}

	&-list ul,
	.dropdown {
		background: $nav-dropdown-background;
		margin:auto;
	}

	@include br(#{$mobile-br-max}-max) {
		height:auto;

		&-list {
			display:block;
		}

		&-list > #{$prefix}-item,
		&-list > li {
			> a,
			> [data-toggle=dropdown] {
				display:block;
			}
		}

		.dropdown {
			border-radius:0;
			// padding-left:0;
			// padding-right:0;
			width: auto;
			position:static;
			box-shadow: none;
		}
	}
}