/*** PROGRESS BAR ***/



$calculated-progress-height: $progress-height;
@if internal-is-convertable($progress-height) {
    $calculated-progress-height: rem($progress-height / $body-font-size)
}


$calculated-progress-height-small: $progress-height-small;
@if internal-is-convertable($progress-height-small) {
    $calculated-progress-height-small: rem($progress-height-small / $body-font-size)
}

$calculated-progress-height-large: $progress-height-large;
@if internal-is-convertable($progress-height-large) {
    $calculated-progress-height-large: rem($progress-height-large / $body-font-size)
}

$calculated-progress-title-font-size: $progress-title-font-size;
@if internal-is-convertable($progress-title-font-size) {
	$calculated-progress-title-font-size: em($progress-title-font-size / $body-font-size)
}

$calculated-progress-title-line-height: type-lead( $progress-title-font-size,$progress-title-line-height );

$calculated-progress-title-margin-bottom: $progress-title-margin-bottom;
@if internal-is-convertable($progress-title-margin-bottom) {
	$calculated-progress-title-margin-bottom: em($progress-title-margin-bottom / $progress-title-font-size)
}

$calculated-progress-title-margin-top: $progress-title-margin-top;
@if internal-is-convertable($progress-title-margin-top) {
	$calculated-progress-title-margin-top: em($progress-title-margin-top / $progress-title-font-size)
}




@keyframes progress-bar-stripes {
	from {
		background-position: 50px 0
	}
	to {
		background-position: 0 0
	}
}

/* Progress bar */
$prefix: '.progress';
#{$prefix} {
	@at-root %for-progress {

		& {
			@extend %for-cf;
			text-align: center;
			width:100%;
			display:block;
			overflow:hidden;
			background-color: $progress-background-color;
			border-radius: $progress-border-radius;
	
	
	
			&.active {
				@include gradient((
					type: repeating-linear,
					use-shorthand: false,
					use-fallback: false,
					colors: (
						(
							color: $progress-background-stripe-color,
							offset:0%
						),
						(
							color: $progress-background-stripe-color,
							offset:$progress-background-stripe-width
						),
						(
							color: transparent,
							offset:$progress-background-stripe-width
						),
						(
							color: transparent,
							offset:$progress-background-stripe-width + $progress-background-stripe-gap
						)
					)
				));
				animation-name: progress-bar-stripes;
				animation-duration: $progress-transition-duration;
				animation-timing-function: linear;
				animation-iteration-count: infinite;
			}
	
			.theme-inverse & {
				background-color: $progress-background-color-inverse;
				
				&.active {

					@include gradient((
						type: repeating-linear,
						use-shorthand: false,
						use-fallback: false,
						colors: (
							(
								color: $progress-background-stripe-color-inverse,
								offset:0%
							),
							(
								color: $progress-background-stripe-color-inverse,
								offset:$progress-background-stripe-width
							),
							(
								color: transparent,
								offset:$progress-background-stripe-width
							),
							(
								color: transparent,
								offset:$progress-background-stripe-width + $progress-background-stripe-gap
							)
						)
					));
				}
			}
		}
	}
	
	& {
		@extend %for-progress;
	}
	@at-root %for-progress-and-bar {
		height: $calculated-progress-height;
		transition: $progress-transition-duration width $transition-timing;

		&-small {
			height: $calculated-progress-height-small;
		}
		&-large {
			height: $calculated-progress-height-large;
		}
	}

	&,
	&-bar {
		@extend %for-progress-and-bar;
	}

	&#{&}-small {
		&,
		#{$prefix}-bar {
			@extend %for-progress-and-bar-small;
		}
	}


	&#{&}-large {
		&,
		#{$prefix}-bar {
			@extend %for-progress-and-bar-large;
		}
	}


	@at-root %for-progress-bar {
		float: left;

		&-default {
			background-color: $progress-bar-background-color;
		}
	}


	&-bar {
		@extend %for-progress-bar;
		@extend %for-progress-bar-default;


		@each $tag,$color in $calculated-brand-color-declarations {
			&-#{$tag} {
				@extend %for-background-#{$tag};
			}
		}
	
		&-intensity {
			@for $i from 1 through length($calculated-color-brand-intensity) {
				&-#{$i} {
					@extend %for-background-intensity-#{$i};
				}
			}
		}
	}

	&-title {

		@include type-set((
			size: $calculated-progress-title-font-size,
			leading: $calculated-progress-title-line-height,
			color: $progress-title-color,
			weight:$progress-title-font-weight,
			style: $progress-title-font-style,
			case: $progress-title-text-transform,
		));
		display:block;
		margin-bottom: $calculated-progress-title-margin-bottom;
		margin-top: $calculated-progress-title-margin-top;

		.theme-inverse & {

			color: $progress-title-color-inverse;
		}
	}
}