
/*** FLEX GRID ***/

		

$prefix: '.flex';
$prefix-raw: str-replace($prefix,'.','');
	// mixins and shit

	@mixin internal-set-grid-col-width($prepend-sel:'',$gap:null,$nest:true) {

		@for $i from 1 through $grid-units {

			$col-width: 100% * ($i/$grid-units );

			@if $nest == true {

				#{$prepend-sel}-#{$i} {
					// width: ( 100% / $i );
					@if $gap != null {
						flex-basis: calc( #{ $col-width } - #{$gap} );

						#{$prefix}-grid-fixed > & {
							width: calc(#{ $col-width } - #{$gap})
						}
					}@else {
						flex-basis: #{ $col-width };
						
						#{$prefix}-grid-fixed > & {
							width: #{ $col-width }
						}
					}
					
					#{$prefix}-grid-no-gutter#{$prefix}-grid-fixed > &,
					#{$prefix}-grid-no-gutter-x#{$prefix}-grid-fixed > & {
						width: #{ $col-width };
					}
				}

			}@else {

				@at-root #{$prepend-sel}-#{$i} {
					// flex-basis: ( 100% / $i );
					@if $gap != null {
						flex-basis: calc( #{ $col-width } - #{$gap} );

						#{$prefix}-grid-fixed > & {
							width: calc(#{ $col-width } - #{$gap})
						}
					}@else {
						flex-basis: #{ $col-width };
						
						#{$prefix}-grid-fixed > & {
							width: #{ $col-width }
						}
					}
					
					#{$prefix}-grid-no-gutter#{$prefix}-grid-fixed > &,
					#{$prefix}-grid-no-gutter-x#{$prefix}-grid-fixed > & {
						width: #{ $col-width };
					}
				}

			}
		}
	}


	#{$prefix} {
		
		&-grid {
			margin-left: $grid-gap * -1;
			margin-bottom: $grid-gap;
			display:flex;
			flex-wrap:wrap;

			&-compact {
				margin-left: $grid-gap-compact * -1;
				margin-bottom: $grid-gap-compact;


				> [class*=#{$prefix-raw}-col-],
				> #{$prefix}-child {
					margin-top: #{$grid-gap-compact};
					margin-left: #{$grid-gap-compact};
					max-width: calc(100% - #{$grid-gap-compact});
				}


				> [class*=#{$prefix-raw}-col-] {
					flex-basis: calc(100% - #{$grid-gap-compact});
				}

				&#{$prefix}-grid-fixed {
					> [class*=#{$prefix-raw}-col-] {
						width: calc(100% - #{$grid-gap-compact})
					}
				}
			}

			&-expanded {
				margin-left: $grid-gap-expanded * -1;
				margin-bottom: $grid-gap-expanded;


				> [class*=#{$prefix-raw}-col-],
				> #{$prefix}-child {
					margin-top: #{$grid-gap-expanded};
					margin-left: #{$grid-gap-expanded};
					max-width: calc(100% - #{$grid-gap-expanded});
				}


				> [class*=#{$prefix-raw}-col-] {
					flex-basis: calc(100% - #{$grid-gap-expanded});
				}

				&#{$prefix}-grid-fixed {
					> [class*=#{$prefix-raw}-col-] {
						width: calc(100% - #{$grid-gap-expanded})
					}
				}
			}

			&-no-gutter {
				&,
				&-x {
					&,
					> [class*=#{$prefix-raw}-col-],
					> #{$prefix}-child {
						margin-left: 0;
					}
				}

				&,
				&-y {
					margin-bottom: 0;
					
					> [class*=#{$prefix-raw}-col-],
					> #{$prefix}-child {
						margin-top: 0;
					}
				}
			}
		}

		@at-root [class*=#{$prefix-raw}-col-],
		#{$prefix}-child {
			margin-top: #{$grid-gap};
			margin-left: #{$grid-gap};
			max-width: calc(100% - #{$grid-gap});

			#{$prefix}-grid-fixed > & {
				flex-grow: 0;
				flex-shrink: 0;
				flex-basis:auto;
			}

			#{$prefix}-grid-no-gutter > &,
			#{$prefix}-grid-no-gutter-x > & {
				max-width: 100%;
			}
		}


		@at-root [class*=#{$prefix-raw}-col-] {
			flex-basis: calc(100% - #{$grid-gap});
			flex-grow: 1;
			flex-shrink: 1;

			#{$prefix}-grid-no-gutter > &,
			#{$prefix}-grid-no-gutter-x > & {
				flex-basis: 100%;
			}

			#{$prefix}-grid-fixed > & {
				width: calc(100% - #{$grid-gap});
			}
			
			#{$prefix}-grid-no-gutter#{$prefix}-grid-fixed > &,
			#{$prefix}-grid-no-gutter-x#{$prefix}-grid-fixed > & {
				width: 100%;
			}
		}

		@include internal-set-grid-col-width(#{&}-col,$grid-gap,false);

		&-grid-compact {
			@include internal-set-grid-col-width(#{$prefix}-col,$grid-gap-compact);
		}

		&-grid-expanded {
			@include internal-set-grid-col-width(#{$prefix}-col,$grid-gap-expanded);
		}
		
		&-grid-no-gutter,
		&-grid-no-gutter-x {
			@include internal-set-grid-col-width(#{$prefix}-col);
		}

		@each $tag in $calculated-br-tags {
			@include br($tag) {

				@include internal-set-grid-col-width(#{&}-col-#{$tag},$grid-gap,false);
				
				&-grid-compact {
					@include internal-set-grid-col-width(#{$prefix}-col-#{$tag},$grid-gap-compact);
				}
	
				&-grid-expanded {
					@include internal-set-grid-col-width(#{$prefix}-col-#{$tag},$grid-gap-expanded);
				}
				
				&-grid-no-gutter,
				&-grid-no-gutter-x {
					@include internal-set-grid-col-width(#{$prefix}-col-#{$tag},null);
				}
			}
		}
	}

