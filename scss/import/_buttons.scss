
/*  BUTTONS ***/

//internal vars
$calculated-btn-font-size: $btn-font-size;
@if internal-is-convertable($btn-font-size) {
	$calculated-btn-font-size: rem($btn-font-size / $body-font-size)
}

	$calculated-btn-font-size-large: $btn-font-size-large;
	@if internal-is-convertable($btn-font-size-large) {
		$calculated-btn-font-size-large: rem($btn-font-size-large / $body-font-size)
	}

	$calculated-btn-font-size-small: $btn-font-size-small;
	@if internal-is-convertable($btn-font-size-small) {
		$calculated-btn-font-size-small: rem($btn-font-size-small / $body-font-size)
	}

$calculated-btn-line-height: type-lead( $btn-font-size,$btn-line-height );

$calculated-btn-single-line: $calculated-btn-line-height;
@if unitless($calculated-btn-single-line) and unit($btn-font-size) == px {
	$calculated-btn-single-line: 1em * #{ type-lead( $btn-font-size,$btn-line-height ) }
}

$calculated-btn-height: $btn-height;
@if internal-is-convertable($btn-height,$btn-font-size) {
	$calculated-btn-height: em($btn-height/$btn-font-size)
}@else if internal-is-convertable($btn-height){
	$calculated-btn-height: rem($btn-height/$body-font-size);
}


	$calculated-btn-height-large: $btn-height-large;
	@if internal-is-convertable($btn-height-large,$btn-font-size-large) {
		$calculated-btn-height-large: em($btn-height-large/$btn-font-size-large)
	}@else if internal-is-convertable($btn-height-large){
		$calculated-btn-height: rem($btn-height-large/$body-font-size);
	}

	$calculated-btn-height-small: $btn-height-small;
	@if internal-is-convertable($btn-height-small,$btn-font-size-small){
		$calculated-btn-height-small: em($btn-height-small/$btn-font-size-small)
	}@else if internal-is-convertable($btn-height-small){
		$calculated-btn-height: rem($btn-height-small/$body-font-size);
	}

$calculated-btn-gutter-x: $btn-gutter-x;
@if internal-is-convertable($btn-gutter-x,$btn-font-size) {
	$calculated-btn-gutter-x: em($btn-gutter-x / $btn-font-size)
}@else if internal-is-convertable($btn-gutter-x){
	$calculated-btn-height: rem($btn-gutter-x/$body-font-size);
}

$prefix: '.btn';

#{$prefix} {

	@at-root %for-btn-global {

		&-radius {
			border-radius: $btn-border-radius;

			&-small {
				border-radius: $btn-border-radius-small;
			}

			&-large {
				border-radius: $btn-border-radius-large;
			}
		}
	}
	
	
	@at-root %for-btn {

		& {
			@include type-set((
				size: #{$calculated-btn-font-size},
				leading: #{$calculated-btn-line-height},
				weight: $btn-font-weight,
				style: $btn-font-style,
				font: $btn-font-family,
				align:center,
				decoration:none,
				case: $btn-text-transform,
			));
			// overflow:hidden;
			padding-top: calc(  (  (#{ $calculated-btn-height } - (#{$btn-border-width} * 2)) - (#{$calculated-btn-single-line}) ) * .5 );
			padding-bottom: calc(  (  (#{ $calculated-btn-height } - (#{$btn-border-width} * 2)) - (#{$calculated-btn-single-line}) ) * .5 );
			min-height:$calculated-btn-height;
			padding-right: $calculated-btn-gutter-x;
			padding-left: $calculated-btn-gutter-x;
			border: $btn-border-width solid transparent;
			transition: $btn-transition-duration all $transition-timing;
			width:auto;
			display:inline-flex;
			align-content: center;
			justify-content: center;
			align-items: center;
			background:none;
			-webkit-user-select: none;
			-moz-user-select: none;
			-ms-user-select: none;
			user-select: none;

			.badge,
			.symbol {
				&:last-child {
					margin-left: .25em;
				}
				&:first-child {
					margin-right: .25em;
				}
			}
			
		}

		&-large {
			@extend %for-btn-global-radius-large;
			padding-top: calc(  (  (#{ $calculated-btn-height-large } - (#{$btn-border-width} * 2)) - (#{$calculated-btn-single-line}) ) * .5 );
			padding-bottom: calc(  (  (#{ $calculated-btn-height-large } - (#{$btn-border-width} * 2)) - (#{$calculated-btn-single-line}) ) * .5 );
			min-height:$calculated-btn-height-large;
			@include br(xs){
				font-size: $calculated-btn-font-size-large;
			}

		}
	
		&-small {
			@extend %for-btn-global-radius-small;
			font-size: $calculated-btn-font-size-small;
			padding-top: calc(  (  (#{ $calculated-btn-height-small } - (#{$btn-border-width} * 2)) - (#{$calculated-btn-single-line}) ) * .5 );
			padding-bottom: calc(  (  (#{ $calculated-btn-height-small } - (#{$btn-border-width} * 2)) - (#{$calculated-btn-single-line}) ) * .5 );
			min-height:$calculated-btn-height-small;
		}
		
		&-in-nav {
			padding-top: 0;
			padding-bottom:0;
			align-self:stretch;
		}

		&-in-group {
			position:relative;
			max-width:100%;
			flex: 0 0 auto; // ??

			&:hover,
			&:active,
			&.active,
			&:focus,
			&.focus,
			&.open {
				z-index:1;
			}

			& {
				@extend %for-no-shadow-important !optional;
			}
		}
		
	}
		& {
			@extend %for-btn;
		
			#{$prefix}-large &,
			&#{$prefix}-large {
				@extend %for-btn-large;
			}
	
			#{$prefix}-small &,
			&#{$prefix}-small {
				@extend %for-btn-small;
			}

			.nav-block.nav-block-stretch > &,
			.nav > & {
				@extend %for-btn-in-nav;
			}

			#{$prefix}-no-radius & {
				@extend %for-no-radius !optional;
			}

			#{$prefix}-group & {
				@extend %for-btn-in-group;
			}

			&-disabled {
				@extend %for-disabled;
			}
			
			&-disabled,
			&-disabled & {
				@extend %for-no-shadow !optional;
			}
			

		}

	@at-root %for-btn-symbol {

		& {
			width: $calculated-btn-height;
			padding-left:0;
			padding-right:0;
		}

		&-large {
			width: $calculated-btn-height-large ;
		}

		&-small {
			width: $calculated-btn-height-small;
		}
	}

		&-symbol {
			@extend %for-btn-symbol;

			#{$prefix}-small &,
			&#{$prefix}-small {
				@extend %for-btn-symbol-small;
			}

			#{$prefix}-large &,
			&#{$prefix}-large {
				@extend %for-btn-symbol-large;
			}
		}



	@at-root %for-btn-and-group {
		

		& {
			@extend %for-btn-global-radius;
			box-shadow: $btn-box-shadow;
			max-width:100%;
			background-color:transparent;
			color:inherit;
			-webkit-appearance:none;
			appearance:none;
			vertical-align: middle;
			@extend %for-anchor-reset-hover !optional;
	
			&:hover,
			&:focus,
			&.focus,
			&:active,
			&.active {
				color:inherit;
				&:not(.btn-no-interaction) {
					box-shadow: $btn-box-shadow-hover;
				}
			}

			&-small {
				@extend %for-btn-global-radius-small;
			}

			&-large {
				@extend %for-btn-global-radius-large;
			}

			&-in-nav {
				@extend %for-no-radius !optional;
				@extend %for-no-shadow-important !optional;
				height: #{ $calculated-nav-height }!important;
			}
		}

	}

		&,&-group {
			@extend %for-btn-and-group;
			@extend %for-btn-global-radius;
			
			&#{$prefix}-large {
				@extend %for-btn-and-group-large;
			}

			&#{$prefix}-small {
				@extend %for-btn-and-group-small;
			}

			.nav > & {
				@extend %for-btn-and-group-in-nav;
				
			}

			&#{$prefix}-no-radius {
				@extend %for-no-radius !optional;
			}
			
			&#{$prefix}-no-shadow {
				@extend %for-no-shadow-important !optional;
			}

			&#{$prefix}-block {
				display:flex;
				width:100%;

				&-mobile {
					@include br(#{$mobile-br-max}-max) {
						display:flex;
						width:100%;
					}
				}
			}


		}
		
	
	///updates here should match input-group 
	&-group {
		display:inline-flex;
		align-content: stretch;
		align-items: stretch;
		position:relative;
		max-width:100%;
		padding:0;
		border:0;
		background:none;
		font:inherit;
		overflow-x:auto;
		overflow-y:visible;
		
		&#{$prefix}-block {
			display:flex;
			width:100%;

			& > .btn:not(.btn-symbol) {
				flex: 1 1;
			}

			@include br(#{$mobile-br-max}-max) {
				&-mobile {
					display:flex;
					width:100%;

					& > .btn:not(.btn-symbol) {
						flex: 1 1;
					}
				}
			}
		}

		&#{&}-horizontal {

			#{$prefix}-symbol {
				flex: 0 0 auto;
			}
			

			&:not(#{$prefix}-group-responsive) {

				> #{$prefix}:nth-last-child(n+2) {
					border-top-right-radius: 0!important;
					border-bottom-right-radius: 0!important;
				}

				> #{$prefix}:nth-child(n+2) {
					border-top-left-radius: 0!important;
					border-bottom-left-radius: 0!important;
					margin-left: $btn-border-width * -1;

					&:not(:focus):not(.focus):not(:hover) {
						border-left-color: $btn-group-separator-color;
					}
				}
			}
		}

		&#{&}-vertical {
			flex-direction:column;

			> .btn-symbol {
				width:auto;
			}

			> #{$prefix}:nth-last-child(n+2) {
				border-bottom-right-radius: 0!important;
				border-bottom-left-radius: 0!important;
			}

			> #{$prefix}:nth-child(n+2) {
				border-top-right-radius: 0!important;
				border-top-left-radius: 0!important;
				margin-top: $btn-border-width * -1;

				&:not(:focus):not(.focus):not(:hover) {
					border-top-color: $btn-group-separator-color;
				}
			}
		}

		&#{&}-responsive {

			@include br($mobile-br-max-polar){

				&#{$prefix}-group-horizontal {

					> .btn-symbol {
						width:auto;
					}
					
					> #{$prefix}:nth-last-child(n+2) {
						border-top-right-radius: 0!important;
						border-bottom-right-radius: 0!important;
					}

					> #{$prefix}:nth-child(n+2) {
						border-top-left-radius: 0!important;
						border-bottom-left-radius: 0!important;
						margin-left: $btn-border-width * -1;
		
						&:not(:focus):not(.focus):not(:hover) {
							border-left-color: $btn-group-separator-color;
						}
					}
				}
			}
			@include br(#{$mobile-br-max}-max) {
				width:100%;
				flex-wrap:wrap;
				display:flex;
				flex-direction:column;

				> #{$prefix}:nth-last-child(n+2) {
					border-bottom-right-radius: 0!important;
					border-bottom-left-radius: 0!important;
				}

				> #{$prefix}:nth-child(n+2) {
					border-top-right-radius: 0!important;
					border-top-left-radius: 0!important;
					margin-top: $btn-border-width * -1;
	
					&:not(:focus):not(.focus):not(:hover) {
						border-top-color: $btn-group-separator-color;
					}
				}
			}
		} 
	}

	@each $scheme,$properties in $calculated-btn-schemes {
		@at-root %for-btn-#{$scheme} {

			@include button-generate-schemes($properties,$scheme);

			@if $scheme == 'link' or str-index($scheme, '-outline'){
				@extend %for-no-shadow;
			}
		}
		&#{&}-#{$scheme} {
			@extend %for-btn-#{$scheme};
		}
	}
}