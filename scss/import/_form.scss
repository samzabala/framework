
/*** input ***/


//internal vars
$calculated-input-font-size: $input-font-size;
@if internal-is-convertable($input-font-size) {
	$calculated-input-font-size: rem($input-font-size / $body-font-size)
}

	$calculated-input-font-size-large: $input-font-size-large;
	@if internal-is-convertable($input-font-size-large) {
		$calculated-input-font-size-large: rem($input-font-size-large / $body-font-size)
	}

	$calculated-input-font-size-small: $input-font-size-small;
	@if internal-is-convertable($input-font-size-small) {
		$calculated-input-font-size-small: rem($input-font-size-small / $body-font-size)
	}


	$calculated-input-label-font-size: $input-label-font-size;
	@if internal-is-convertable($input-label-font-size) {
		$calculated-input-label-font-size: rem($input-label-font-size / $body-font-size)
	}
	
		$calculated-input-label-font-size-large: $input-label-font-size-large;
		@if internal-is-convertable($input-label-font-size-large) {
			$calculated-input-label-font-size-large: rem($input-label-font-size-large / $body-font-size)
		}
	
		$calculated-input-label-font-size-small: $input-label-font-size-small;
		@if internal-is-convertable($input-label-font-size-small) {
			$calculated-input-label-font-size-small: rem($input-label-font-size-small / $body-font-size)
		}


$calculated-input-line-height: type-lead( $input-font-size,$input-line-height );

$calculated-input-single-line: $calculated-input-line-height;
@if unitless($calculated-input-single-line) and unit($input-font-size) == px {
	$calculated-input-single-line: 1em * #{ type-lead( $input-font-size,$input-line-height ) }
}

$calculated-input-label-single-line: 1em * #{ $calculated-body-line-height };

$calculated-input-height: $input-height;
@if internal-is-convertable($input-height){
	$calculated-input-height: rem($input-height/$body-font-size);
}

// @error $calculated-input-height;

	$calculated-input-height-large: $input-height-large;
	@if internal-is-convertable($input-height-large){
		$calculated-input-height-large: rem($input-height-large/$body-font-size);
	}

	$calculated-input-height-small: $input-height-small;
	@if internal-is-convertable($input-height-small){
		$calculated-input-height-small: rem($input-height-small/$body-font-size);
	}	

$calculated-input-gutter-x: $input-gutter-x;
@if internal-is-convertable($input-gutter-x,$input-font-size) {
	$calculated-input-gutter-x: em($input-gutter-x / $input-font-size)
}@else if internal-is-convertable($input-gutter-x){
	$calculated-input-gutter-x: rem($input-gutter-x/$body-font-size);
}
//info

$calculated-input-info-font-size: $input-info-font-size;
@if internal-is-convertable($input-info-font-size) {
	$calculated-input-info-font-size: rem($input-info-font-size / $body-font-size)
}

$calculated-input-info-line-height: type-lead( $input-info-font-size,$input-info-line-height );


$calculated-input-info-gutter-y: $input-info-gutter-y;
@if internal-is-convertable($input-info-gutter-y) {
	$calculated-input-info-gutter-y: em($input-info-gutter-y / $input-info-font-size)
}


	$calculated-value-input-paddiny-y:	calc( ( (#{$calculated-input-height} - (#{$input-border-width} * 2)) - (#{$calculated-input-single-line}) ) * .5 );
	
	$calculated-value-input-paddiny-y-large:	calc( ( (#{$calculated-input-height-large} - (#{$input-border-width} * 2)) - (#{$calculated-input-single-line}) ) * .5 );
	
	$calculated-value-input-paddiny-y-small:	calc( ( (#{$calculated-input-height-small} - (#{$input-border-width} * 2)) - (#{$calculated-input-single-line}) ) * .5 );
	
	$calculated-value-input-paddiny-y-nav: calc( ( (#{$calculated-nav-height} - (#{$input-border-width} * 2)) - (#{$calculated-input-single-line}) ) * .5 );



	$calculated-value-input-paddiny-y-negative:	calc( ( (#{$calculated-input-height} - (#{$input-border-width} * 2)) - (#{$calculated-input-single-line}) ) * -.5 );
	
	$calculated-value-input-paddiny-y-large-negative:	calc( ( (#{$calculated-input-height-large} - (#{$input-border-width} * 2)) - (#{$calculated-input-single-line}) ) * -.5 );
	
	$calculated-value-input-paddiny-y-small-negative:	calc( ( (#{$calculated-input-height-small} - (#{$input-border-width} * 2)) - (#{$calculated-input-single-line}) ) * -.5 );
	
	$calculated-value-input-paddiny-y-nav-negative: calc( ( (#{$calculated-nav-height} - (#{$input-border-width} * 2)) - (#{$calculated-input-single-line}) ) * -.5 );






/* input clasees */
$prefix: '.input';

#{$prefix} {

	@at-root %for-form-global {
		

		&-radius {
			border-radius: $input-border-radius;

			&-small {
				border-radius: $input-border-radius-small;
			}

			&-large {
				border-radius: $input-border-radius-large;
			}
		}

		&-in-nav {
			align-self: center;

			&-custom {
				height: #{ $calculated-nav-height }!important;
			}
		}
		
		&-transition {
			transition: $transition-duration-short color $transition-timing, $transition-duration-short border $transition-timing, $transition-duration-short box-shadow $transition-timing;
			max-width:100%;
		}
	}
		

	@at-root %for-form-label {
		& {
			@extend %for-form-global-transition;
			@include type-set((
				size: #{$calculated-input-label-font-size},
				color:$input-label-color,
				weight: $input-label-font-weight,
				style: $input-label-font-style,
				font: $input-label-font-family,
				align:inherit,
				decoration:none,
				case: $input-label-text-transform,
			));
			padding-right: 1rem;
			display:inline-block;
			padding-top: calc( (#{ $calculated-input-height } - (#{$calculated-input-label-single-line}) ) * .5 );
			padding-bottom: calc( ( #{ $calculated-input-height } - (#{$calculated-input-label-single-line}) ) * .5 );
	
			.theme-inverse & {
				color:$input-label-color-inverse;
			}
		}

		&-large {
			font-size: $calculated-input-label-font-size-large;
			padding-top: calc(  (#{ $calculated-input-height-large } - (#{$calculated-input-label-single-line}) ) * .5 );
			padding-bottom: calc( (#{ $calculated-input-height-large } - (#{$calculated-input-label-single-line}) ) * .5 );
		}

		&-small {
			font-size: $calculated-input-label-font-size-small;
			padding-top: calc( (#{$calculated-input-height-small} - (#{$calculated-input-label-single-line}) ) * .5 );
			padding-bottom: calc( (#{$calculated-input-height-small} - (#{$calculated-input-label-single-line}) ) * .5 );
		}

		&-in-nav {
			@extend %for-form-global-in-nav-custom;
			
		}

		&-in-group {
			padding-left: 1em;
			background: $input-label-in-group-background;
			flex: 0 0 auto;

			.theme-inverse & {
				background: $input-label-in-group-background-inverse;
			}

			&-block {
				
			}

			&-horizonal {

			}

			&-vertical {
				
			}

		}

		&-in-wrapper {
			& {

				order:-1;
				flex-grow:0;
				flex-shrink:0;
				flex-basis:auto;
				order: -1;
				
	
				&:first-child:last-child {
				/* labels that typically wrapp radio and checboxes*/
					flex: 1 1 auto;
				}

			}

			&-block {
				flex-basis:$input-label-horizontal-width;
			}

			&-horizonal {
				&-block {

				}

			}

			&-vertical {
				&-block {

				}

			}

		}
	}

		&-label {
			@extend %for-form-label;

			&#{$prefix}-large,
			#{$prefix}-large & {
				@extend %for-form-label-large;
			}

			&#{$prefix}-small,
			#{$prefix}-small & {
				@extend %for-form-label-small;
			}

			.nav & {
				@extend %for-form-label-in-nav !optional;
			}


			#{$prefix}-group & {
				@extend %for-form-label-in-group !optional;
			}

			#{$prefix}-wrapper > & {
				@extend %for-form-label-in-wrapper-block !optional;
			}

			#{$prefix}-wrapper-block > & {
				@extend %for-form-label-in-wrapper-block !optional;
			}


			#{$prefix}-wrapper-horizontal > & {
				@extend %for-form-label-in-wrapper-horizontal !optional;

				#{$prefix}-wrapper-block#{&} {
					@extend %for-form-label-in-wrapper-horizontal-block !optional;
				}
			}

			#{$prefix}-wrapper-vertical > & {
				@extend %for-form-label-in-wrapper-vertical;

				#{$prefix}-wrapper-block#{&} {
					@extend %for-form-label-in-wrapper-vertical-block;
				}
			}
		}

	&-info {
		@include type-set((
			size: $calculated-input-info-font-size,
			leading: $calculated-input-info-line-height,
			color: $input-info-color,
			weight:$input-info-font-weight,
			style: $input-info-font-style,
			case: $input-info-text-transform,
		));
		margin-top:$calculated-input-info-gutter-y;
		margin-bottom:$calculated-input-info-gutter-y;
		display:block;

		order: 3;

		#{$prefix}-wrapper-horizontal & {
			width: calc(100% - #{$input-label-horizontal-width});
			align-self: flex-end;
			margin-left: auto;
		}
		
		#{$prefix}-wrapper-vertical & {
			width: 100%;
			align-self: flex-start;
			margin-left: 0;
		}
	}

	@at-root %for-form-input {

		& {
			font: inherit;
			color:inherit;
			vertical-align: middle;
			background-color: $input-background;
			transition: $transition-duration-short color $transition-timing, $transition-duration-short border $transition-timing, $transition-duration-short box-shadow $transition-timing;
			max-width:100%;

			.theme-inverse & {
				background-color: $input-background-inverse;
			}
		}

		&-large {
			font-size: $calculated-input-font-size-large;

		}

		&-small {
			font-size: $calculated-input-font-size-small;
			
		}

		&-in-nav {
			@extend %for-form-global-in-nav-custom;
		}

		&-in-group {
			position:relative;
			max-width:100%;

			&:focus,
			&.focus,
			&:active,
			&.active
			&.open {
				z-index:1;
			}

		}

		&-ui-control {


			@extend %for-display-none;
			//fallback
			height:0!important;
			width:0!important;
			overflow:hidden!important;
	
		}
	}

		& { //scaffold
			@extend %for-form-input;



			&#{$prefix}-large,
			#{$prefix}-group#{$prefix}-large & {
				@extend %for-form-input-large;
			}

			&#{$prefix}-small,
			#{$prefix}-group#{$prefix}-small & {
				@extend %for-form-input-small;
			}


			.nav & {
				@extend %for-form-input-in-nav;
			}

			&-disabled,
			&[disabled] {
				@extend %for-disabled;

			}

			&-disabled,
			&[disabled],
			&-disabled & {
				@extend %for-no-shadow-important !optional;
			}

			&-in-group {
				@extend %for-form-input-in-group;
			}

		}
		
	&-inline {
		vertical-align: middle;
		display:inline-block;
		margin-right: .5em;
	}

	
	//shitstorm 
	@at-root %for-form-input-boxy {

		& {
			@extend %for-form-global-radius;
			@extend %for-form-global-transition;
			-webkit-appearance: none;
			appearance: none;
			outline:none;
			max-width:100%;
			@include type-set((
				size: #{$calculated-input-font-size},
				color:$input-color,
				leading: #{ $calculated-input-line-height } ,
				weight: $input-font-weight,
				style: $input-font-style,
				font: $input-font-family,
				align:inherit,
				decoration:none,
				case: $input-text-transform,
			));
			display:inline-block;
			border: $input-border-width solid $input-border-color;
			background-color: $input-background;
			padding-right: $calculated-input-gutter-x;
			padding-left: $calculated-input-gutter-x;
			padding-top: $calculated-value-input-paddiny-y;
			padding-bottom: $calculated-value-input-paddiny-y;
			box-shadow: $input-box-shadow;

			.theme-inverse & {
				color:$input-color-inverse;
				background-color: $input-background-inverse;
			}


	
			&:focus,
			&.focus,
			&:active,
			&.active {
				border-color: $input-border-color-focus;
			}
			
			option {
				font:inherit;
				outline:none;
			}

			&::-webkit-input-placeholder {
				color: inherit;
				opacity: $input-placeholder-opacity;
			}
			
			&::-moz-placeholder {
				color: inherit;
				opacity: $input-placeholder-opacity;
			}
			
			&:-ms-input-placeholder{
				color: inherit;
				opacity: $input-placeholder-opacity;
			}
			&:-moz-placeholder { /* Firefox 18- */
				color: inherit;
				opacity: $input-placeholder-opacity;
			}
			
			//color
				&[type=color] {
					min-width:100px;
					padding: .5em;
				}

			//file
				&::-webkit-file-upload-button {
					appearance: none;
					border: none;
					font:inherit;
					color:inherit;
					opacity: $input-placeholder-opacity;
					background: none;
					margin: 0;
					padding: 0;
					vertical-align:middle;
					display:flex;
				}
				// &::-webkit-file-upload-text {
				// 	-webkit-appearance: none;
				// }
			
			&:focus::-webkit-input-placeholder {
				color: transparent !important;
			}
			
			&:focus:-moz-placeholder {
				color: transparent !important;
			}
			
			&:focus:-ms-input-placeholder{
				color: transparent !important;
			}

			
			&.focus::-webkit-input-placeholder {
				color: transparent !important;
			}
			
			&.focus:-moz-placeholder {
				color: transparent !important;
			}
			
			&.focus:-ms-input-placeholder{
				color: transparent !important;
			}
			
	
		}



		&-single{
			vertical-align: middle;

			// height: $calculated-input-height;
	
			// &#{$prefix}-large,
			// #{$prefix}-large & {
			// 	height: $calculated-input-height-large;
			// }
	
			// &#{$prefix}-small,
			// #{$prefix}-small & {
			// 	height: $calculated-input-height-small;
			// }
		}

		&-multiple{

			& {

				vertical-align: top;
				overflow-y: auto;
		
				.input-group & {
					max-height:100%;
				}
		
				option {
					padding-right: $calculated-input-gutter-x;
					padding-left: $calculated-input-gutter-x;
					margin-right: $calculated-input-gutter-x * -1;
					margin-left: $calculated-input-gutter-x * -1;
				}
		

			}
			&-height {
				height: auto;
				min-height: $calculated-input-height * $input-height-multiple-factor;
	
				&-large {
					min-height: $calculated-input-height-large * $input-height-multiple-factor;
				}
		
				&-small {
					min-height: $calculated-input-height-small * $input-height-multiple-factor;
				}
	
			}
		}

		&-select {

			background-image:
				linear-gradient(-130deg, $input-select-dropdown-color 0%, $input-select-dropdown-color 50%, transparent 51%, transparent 100%),
				linear-gradient(130deg, $input-select-dropdown-color 0%, $input-select-dropdown-color 50%, transparent 51%, transparent 100%)
				;
			background-size:
				#{$calculated-symbol-caret-width * .5} $calculated-symbol-caret-height,
				#{$calculated-symbol-caret-width * .5} $calculated-symbol-caret-height
				;
			background-position:
				calc(100% - (1.5em + #{$calculated-symbol-caret-width * .425} )) 50%,
				calc(100% - 1.5em) 50%
				;
			background-repeat: no-repeat,no-repeat;
	
			&:not([multiple]) {
				padding-right: $calculated-input-gutter-x * 2;
			}
			@at-root select#{&}[multiple] {
				background-image: none;
			}
		}


		&-large{
		}

		&-small{
		}

		&-in-nav {
		}

		&-in-group {

			& {
			}
			
			&-horizonal {

			}

			&-vertical {
				
			}

			&-block {
				
			}

		}

		&-in-wrapper {

			&-horizonal {

			}

			&-vertical {

			}

			&-block {
				
			}

		}

		& {
			

			&#{$prefix}-large,
			#{$prefix}-large & {
				// @extend %for-form-input-boxy-large;
				@extend %for-form-global-radius-large;
				padding-top: $calculated-value-input-paddiny-y-large;
				padding-bottom: $calculated-value-input-paddiny-y-large;
			}
	
			&#{$prefix}-small,
			#{$prefix}-small & {
				// @extend %for-form-input-boxy-small;
				@extend %for-form-global-radius-small;
				padding-top: $calculated-value-input-paddiny-y-small;
				padding-bottom: $calculated-value-input-paddiny-y-small;
			}
	
			.nav & {
				// @extend %for-form-input-boxy-in-nav !optional;
				@extend %for-form-global-in-nav-custom;
				padding-top: $calculated-value-input-paddiny-y-nav !important;
				padding-bottom: $calculated-value-input-paddiny-y-nav !important;
			}
	
			#{$prefix}-group & {
				// @extend %for-form-input-boxy-in-group !optional;
	
				&:not(.focus):not(:focus):not(.active):not(:active) {
					@extend %for-no-shadow;
				}
			}
	
			#{$prefix}-wrapper & {
				// @extend %for-form-input-boxy-in-wrapper !optional;
				display: block;
				flex: 1 1;
			}
	
			#{$prefix}-wrapper-horizontal & {
				// @extend %for-form-input-boxy-in-wrapper-horizontal !optional;
	
				#{$prefix}-wrapper-block#{&} {
					// @extend %for-form-input-boxy-in-wrapper-horizontal-block !optional;
				}
			}
	
			#{$prefix}-wrapper-vertical & {
				// @extend %for-form-input-boxy-in-wrapper-vertical !optional;
	
				#{$prefix}-wrapper-block#{&} {
					// @extend %for-form-input-boxy-in-wrapper-vertical-block !optional;
				}
			}
	
			#{$prefix}-wrapper-block & {
				// @extend %for-form-input-boxy-in-wrapper-block !optional;
			}
	
	
			#{$prefix}-disabled & {
				@extend %for-no-shadow-important !optional;
			}
			
			
			&-block {
				display:block;
	
				&-mobile {
					@include br(#{$mobile-br-max}-max) {
						display:block;
					}
				}
			}
		}
	}






	


	&-single-line {
		@extend %for-form-input-boxy;
		@extend %for-form-input-boxy-single;
	}

	&-select {
		@extend %for-form-input-boxy;
		@extend %for-form-input-boxy-select;
	}

	&-select[multiple],
	&-multiple-line {
		@extend %for-form-input-boxy-multiple;
	}

	&-multiple-line {
		@extend %for-form-input-boxy;
		@extend %for-form-input-boxy-multiple-height;
		
		&#{$prefix}-large,
		#{$prefix}-large & {
			@extend %for-form-input-boxy-multiple-height-large;
		}

		&#{$prefix}-small,
		#{$prefix}-small & {
			@extend %for-form-input-boxy-multiple-height-small;
		}
		
		#{$prefix}-group & {
			resize: none;
		}
	}

	@at-root %for-form-input-and-group {
		
		&:focus,
		&.focus {
			outline: none;
			// box-shadow: $input-box-shadow-focus!important;
			box-shadow: $input-box-shadow-focus;
		}
	}
	&,
	&-group {
		@extend %for-form-input-and-group;
	}


	@at-root %for-form-input-boxy-and-group {
		& {
			@extend %for-form-global-radius;
		}
		&-small {
			@extend %for-form-global-radius-small;
		}

		&-large {
			@extend %for-form-global-radius-large;
		}
		

		&-in-nav {
			@extend %for-no-radius !optional;
			@extend %for-no-shadow-important !optional;

		}


	}

	@at-root %for-form-input-boxy,
	&-group {
		@extend %for-form-input-boxy-and-group;

		&#{$prefix}-large {
			@extend %for-form-input-boxy-and-group-large;
		}

		&#{$prefix}-small {
			@extend %for-form-input-boxy-and-group-small;
		}

		.nav & { 
			@extend %for-form-input-boxy-and-group-in-nav !optional;
		}

		&#{$prefix}-no-radius {
			@extend %for-no-radius !optional;
		}
		
		&#{$prefix}-no-shadow {
			@extend %for-no-shadow-important !optional;
		}


		&#{$prefix}-block {
			width:100%;

			&-mobile {
				@include br(#{$mobile-br-max}-max) {
					width:100%;
				}
			}
		}
	}


	&-group {
		display:inline-flex;
		align-content: stretch;
		align-items: stretch;
		position:relative;
		max-width:100%;
		padding:0;
		border:0;
		background:none;
		font:inherit;
		overflow-x:auto;
		overflow-y:visible;

		.btn.btn-symbol {
			flex: 0 0 auto;
		}


		&#{$prefix}-block {
			display:flex;

			&-mobile {
				@include br(#{$mobile-br-max}-max) {
					display:flex;
				}
			}
		}
		
		#{$prefix} {
			@extend %for-form-input-in-group;
		}
		
		&-block {
			display:flex;
			width:100%;

			> #{$prefix},
			> .trumbowyg {
				flex: 1 1;
			}

			&-mobile {
				@include br(#{$mobile-br-max}-max) {
					display:flex;
					width:100%;

					> #{$prefix},
					> .trumbowyg,
					.btn:not(.btn-symbol) {
						flex: 1 1;
					}
				}
			}
		}
		

		&#{&}-large {
			@extend %for-form-input-boxy-and-group-large;
		}

		&#{&}-small {
			@extend %for-form-input-boxy-and-group-small;
		}

		&#{&}-horizontal {
			

			&:not(#{$prefix}-group-responsive) {

				> %for-form-input-boxy,.btn, .trumbowyg {
					&:nth-last-child(n+2) {
						border-top-right-radius: 0!important;
						border-bottom-right-radius: 0!important;
					}
				}

				> %for-form-input-boxy,.btn, .trumbowyg {
					&:nth-child(n+2) {
						border-top-left-radius: 0!important;
						border-bottom-left-radius: 0!important;
						margin-left: $input-border-width * -1;

						// &:not(.focus):not(:focus):not(.active):not(:active) {
						// 	border-left-color: transparent;
						// }
					}
				}
			}
		}

		&#{&}-vertical {
			flex-direction:column;
			
			> .btn-symbol {
				width:auto;
			}

			> %for-form-input-boxy,.btn, .trumbowyg {
				&:nth-last-child(n+2) {
					border-bottom-right-radius: 0!important;
					border-bottom-left-radius: 0!important;
				}
			}

			> %for-form-input-boxy,.btn, .trumbowyg {
				&:nth-child(n+2) {
					border-top-right-radius: 0!important;
					border-top-left-radius: 0!important;
					margin-top: $input-border-width * -1;

					// &:not(.focus):not(:focus):not(.active):not(:active) {
					// 	border-top-color: transparent;
					// }
				}
			}
		}

		&#{&}-responsive {

			@include br($mobile-br-max-polar){
				
				&#{$prefix}-group-horizontal {
					> .btn-symbol {
						width:auto;
					}

					> %for-form-input-boxy,.btn, .trumbowyg {
						&:nth-last-child(n+2) {
							border-top-right-radius: 0!important;
							border-bottom-right-radius: 0!important;
						}
					}

					> %for-form-input-boxy,.btn, .trumbowyg {
						&:nth-child(n+2) {
							border-top-left-radius: 0!important;
							border-bottom-left-radius: 0!important;
							margin-left: $input-border-width * -1;

							// &:not(.focus):not(:focus):not(.active):not(:active) {
							// 	border-left-color:transparent;
							// }
						}
					}
				}
				
			}

			@include br(#{$mobile-br-max}-max) {
				width:100%;
				flex-wrap:wrap;
				display:flex;
				flex-direction:column;

				> %for-form-input-boxy,.btn, .trumbowyg {
					&:nth-last-child(n+2) {
						border-bottom-right-radius: 0!important;
						border-bottom-left-radius: 0!important;
					}
				}
	
				> %for-form-input-boxy,.btn, .trumbowyg {
					&:nth-child(n+2) {
						border-top-right-radius: 0!important;
						border-top-left-radius: 0!important;
						margin-top: $input-border-width * -1;
		
						// &:not(.focus):not(:focus):not(.active):not(:active) {
						// 	border-top-color: transparent;
						// }
					}
				}
			}
		}
	}



	@at-root %for-form-wrapper {
		& {
			max-width:100%;
			position:relative;

			@include br($mobile-br-max-polar){
				display:inline-flex;
				padding-right: 2rem;
			}
		}
			

		&-horizontal {
			@include br($mobile-br-max-polar){
				flex-direction: row;
				align-items: flex-start;
			
				&#{$prefix}-wrapper-block & {
					%for-form-input-boxy {
						width: calc(100% - #{$input-label-horizontal-width});
					}
				}
				// flex-wrap: wrap;
			}
			
		}

		&-vertical {
			@include br($mobile-br-max-polar){
				flex-direction: column;
			}
		}

		&-block {

			display:flex;
			padding-right: 0;

			@include br(#{$mobile-br-max}-max) {
				flex-direction: column;

				> %for-form-input-boxy {
					width:100%;
				}
			}

		}
	}

		&-wrapper {
			& {
				@extend %for-form-wrapper;
			}
				

			&#{&}-horizontal {
				@extend %for-form-wrapper-horizontal;
				
			}

			&#{&}-vertical {
				@extend %for-form-wrapper-vertical;
			}

			&#{&}-block {

				
				@extend %for-form-wrapper-block;
			}
		}


	//components of component

	

	//color
	@each $tag,$color in $calculated-brand-color-declarations {

		@at-root %for-form-label-color-#{$tag} {
			color: $color;
		}
			//label
			@at-root #{$prefix}-label#{$prefix}-#{$tag},
			#{$prefix}-#{$tag} #{$prefix}-label {
				@extend %for-form-label-color-#{$tag};
			}

		@at-root %for-form-input-color-#{$tag} {
			& {
		
				color: $color;
				border-color: $color;
				
				@if type-of($color) == color && $color != transparent {
					background-color: rgba($color,$input-color-feedback-opacity);
				}

				&:not(.focus):not(:focus):not(.active):not(:active) {
					box-shadow: $input-box-shadow-brand-basis $color;
					z-index:1;
				}
			}
		}
			//inputs
			@at-root &#{$prefix}-#{$tag},
			#{$prefix}-#{$tag} & {
				@extend %for-form-input-color-#{$tag};
			}
	}
}




.special-form,
fieldset {
	padding: $special-form-gutter-y $special-form-gutter-x;
	position:relative;
	margin-bottom: #{$special-form-gutter-y};
	// overflow:hidden;

	&,
	legend,
	.special-form-label {
		background: $special-form-background;
		border-radius: $special-form-border-radius;

		.theme-inverse & {
			background: $special-form-background-inverse;
		}
	}
	
	legend,
	.special-form-label {
		padding: ($special-form-gutter-y * .75) $special-form-gutter-x 0;
		margin-left: $special-form-gutter-x * -1;
		position:relative;
		top: -1em;
		border-bottom-right-radius: 0;
		border-bottom-left-radius: 0;
	}


	#{$prefix}-wrapper {
		max-width: none;
		display:flex;
		flex-wrap:wrap;
		padding-right:0;

		&-horizontal {
			#{$prefix} {
				margin-left:0;
				margin-right:0;
				padding-left:0;
				padding-right:0;
			}
		}

		&:nth-last-child(n+2) {
			border-bottom: 1px solid gray;
		}
	}

	#{$prefix},
	.fw-trumbowyg-editor,
	.fw-trumbowyg-textarea {
		background-color:transparent!important;
		outline: none!important;
		border-color: transparent!important;
		box-shadow: none !important;
	}

	%for-form-input-boxy,
	#{$prefix}-inline,
	.fw-trumbowyg-editor,
	.fw-trumbowyg-textarea {
		background-color:transparent;
		// width:calc(100% + (#{$special-form-gutter-x} * 2));
		max-width:none;
		padding-left: 0;
		padding-right:0;
		// margin-left: $special-form-gutter-x * -1;
		// margin-right:$special-form-gutter-x * -1;
		border-radius:0!important;
	}

	.btn:last-child {
		position:absolute;
		top:100%;
		right:0;
		margin-top:$special-form-gutter-y;
	}

	#{$prefix}-calendar-ui {
		max-width: 400px;
	}
}